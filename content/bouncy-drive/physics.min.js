'use strict';const physics={Context:function(a,b,c){this.delta=a;this.particles=b;this.actor=c},utility:{PI_2:2*Math.PI,identity:function(a){return a},modPositive:function(a,b){return a-Math.floor(a/b)*b},modSymmetric:function(a,b){return a-Math.round(a/b)*b},clamp:function(a,b,c){return Math.min(Math.max(a,b),c)},clampSymmetric:function(a,b){return this.clamp(a,-b,b)},interpolate:function(a,b,c){return a*(1-c)+b*c},addMethod:function(a,b){return a.add(b)},minMethod:function(a,b){return a.min(b)},
maxMethod:function(a,b){return a.max(b)},add:function(a,b){return a+b},multiply:function(a,b){return a*b},min:function(a,b){return Math.min(a,b)},max:function(a,b){return Math.max(a,b)},concat:function(a,b){return a.concat(b)},flatten:function(a){return Array.prototype.concat.apply([],a)},generate:function(a,b,c){for(var d=0;d<c;d++)a.push(b(d));return a},binarySearch:function(a,b){for(var c=0,d=a.length;c<d;){const e=Math.floor((c+d)/2);b(a[e])?c=e+1:d=e}return c},interleave:function(a,b,c){for(var d=
[],e=0,f=0;e<a.length&&f<b.length;)d.push(0<c(a[e],b[f])?b[f++]:a[e++]);for(;e<a.length;)d.push(a[e++]);for(;f<b.length;)d.push(b[f++]);return d},distinct:function(a){const b=new Set;return a.filter(function(c){if(b.has(c))return!1;b.add(c);return!0})},randomPoisson:function(a,b){const c=Math.exp(-a);a*=b;b=Math.random();for(var d=0;b>c&&d<a;)b*=Math.random(),d++;return d},measureRuntime:function(a){const b=performance.now();a();return performance.now()-b},fadeAudio:function(a,b,c){const d=a.context.currentTime,
e=a.gain.value;b=d+Math.abs(c-e)*b;a.gain.setValueAtTime(e,d);a.gain.linearRampToValueAtTime(c,b);return b}},collections:{Bundle:function(){this.removers=[]},Ordered:function(){this.set=new Set},Sorted:function(a){this.compare=a;this.data=[]},Immutable:function(a){this.data=a},addAll:function(a,b){return b.map(function(c){return a.add(c)})},removeAll:function(a,b){b.forEach(function(c){a.remove(c)})}},dynamics:{Vector:function(a,b){this.x=a;this.y=b},Rectangle:function(a,b){this.min=a;this.max=b},
Transformation:function(a,b){this.translation=a;this.rotation=b},Motion:function(a,b){this.position=a;this.velocity=b},Mass:function(a,b){this.translation=a;this.rotation=b},Particle:function(a,b){this.acceleration=physics.dynamics.Transformation.ZERO;this.invMass=b;this.reset(a)}},interaction:{Action:function(a,b){this.particle=a;this.acceleration=b},Axis:function(a,b){this.normal=a;this.distance=b},Singularity:function(a){this.threshold=a},Elasticity:function(a,b){this.stiffness=a;this.damping=
b},Frictional:function(a,b){this.elasticity=a;this.friction=b},Fixture:function(a,b){this.particle=a;this.origin=b},Rail:function(a,b){this.particle=a;this.axis=b},Pivot:function(a,b){this.particle=a;this.origin=b;this.radius=b.subtract(a.motion.position.translation);this.velocity=a.motion.velocity.velocityAt(this.radius)},Attack:function(a,b){this.pivot=a;this.direction=b;this.cross=a.radius.cross(b);this.velocity=a.velocity.dot(b);this.invMass=a.particle.invMass.translation+Math.pow(this.cross,
2)*a.particle.invMass.rotation},Impact:function(a,b){this.first=a;this.second=b},RotationImpact:function(a,b){this.first=a;this.second=b},handlers:{merge:function(a){return function(b,c,d){return physics.utility.flatten(a.values().map(function(e){return e(b,c,d)}))}},mergeArray:function(a){return this.merge(new physics.collections.Immutable(a))},elasticity:function(a){return function(b,c,d){return a.actions(b,c,d)}},friction:function(a){return function(b,c,d){return a.frictionActions(b,1,d)}},cast:function(a,
b){return function(c,d,e){return a(c.cast(b),d,e)}},center:function(a,b){return function(c,d,e){return a(c,d-b,e)}},lower:function(a,b){return function(c,d,e){return d<b?a(c,d,e):[]}},upper:function(a,b){return function(c,d,e){return d>b?a(c,d,e):[]}},angular:function(a){return function(b,c,d){return a(b,physics.utility.modSymmetric(c,physics.utility.PI_2),d)}},correlate:function(a,b){const c=a.map(function(){return null});var d=0;return a.map(function(e,f){return function(g,h,k){if(c[f])console.warn("Invoking handler twice while others are awaited",
c,f);else if(c[f]={impact:g,distance:h,delta:k},++d==c.length)return d=0,g=physics.utility.flatten(a.map(function(l,m){return l(c[m].impact,c.map(function(n,p){return n.distance*b[m][p]}).reduce(physics.utility.add,0),c[m].delta)})),c.forEach(function(l,m){c[m]=null}),g;return[]}})},audio:function(a,b,c,d,e,f,g){var h=0;return function(k,l,m){l=-k.velocity();m=a.currentTime;l>f&&m-h>e&&(b.fireAudio(a,k.first.pivot.origin,Math.min((l-f)/g,1)*d,c),h=m);return[]}}}},collisions:{Contact:function(a,b,
c){this.origin=a;this.direction=b;this.distance=c},Body:function(a,b){this.particle=a;this.shape=b},Collider:function(a,b){this.body=a;this.matcher=b},builder:function(a){return new physics.tracking.Builder(a,new physics.collections.Ordered)},shapes:{Line:function(a,b){this.from=a;this.to=b},Polygon:function(a){this.vertices=a},Circle:function(a,b,c){this.center=a;this.radius=b;this.singularity=c},CircularSegment:function(a,b,c){this.circle=a;this.axis=b;this.angle=c},chain:function(a,b,c){const d=
[],e=physics.dynamics.Vector.diffs(a);for(var f=0,g=1;g<a.length;g++)if(g-f>=c||g==e.length||0>e[g-1].cross(e[g])){const h=a.slice(f+1,g);f=0==f||0<e[f-1].cross(e[f])?a[f]:a[f].subtract(e[f].extendPositive(e[f-1]));const k=g==e.length||0<e[g-1].cross(e[g])?a[g]:a[g].add(e[g-1].extendPositive(e[g]));h.push(k,k.add(b),f.add(b),f);d.push(new physics.collisions.shapes.Polygon(h));f=g}return d},intersect:function(a,b){return a.axes(b).map(function(c){return b.contact(c).flip()}).concat(b.axes(a).map(function(c){return a.contact(c)})).reduce(physics.utility.maxMethod)},
contains:function(a,b){return a.axes(b).every(function(c){return 0<=b.contact(c.negate()).distance})}},mergers:{collision:function(a){return function(b,c){return physics.actors.collision(b,c,a)}},ifContains:function(a){return function(b,c){return physics.actors.ifContains(b,c,a)}}}},tracking:{Box:function(a,b){this.handler=a;this.bounds=b},Tracker:function(a,b){this.size=a;this.margin=b;this.cells=new Map},Builder:function(a,b){this.tracker=a;this.collector=b;this.updating=new physics.collections.Ordered},
handlers:{Merger:function(a,b,c){this.data=a;this.matcher=b;this.collection=c;this.map=new Map},Activator:function(a){this.bounded=a},Activation:function(a,b){this.bounded=a;this.collection=b}},matchers:{Mapping:function(){this.map=new Map},MappingOverride:function(a){this.matcher=a;this.from=new Map;this.to=new Map},Distinct:function(a,b){this.matcher=a;this.value=b}},mergers:{swapper:function(a){return function(b,c){return a(c,b)}}}},actors:{Toggle:function(){this.active=!1;this.depth=0},Motor:function(){this.target=
0},warnDangling:function(a,b){return function(c){const d=new Set(b.values());c=a(c);c.forEach(function(e){d.has(e.particle)||console.warn("Detected dangling action",e)});return c}},nonZero:function(a){return function(b){return a(b).filter(function(c){return!c.particle.isZero()})}},constant:function(a){return function(b){return a}},container:function(a){return function(b){return physics.utility.flatten(a.values().map(function(c){return c(b)}))}},containerArray:function(a){return this.container(new physics.collections.Immutable(a))},
updater:function(a){return function(b){a.update();return[]}},collision:function(a,b,c){return function(d){const e=a.intersect(b);return 0>e.distance?c(e.impact(a.particle,b.particle),e.distance,d):[]}},ifContains:function(a,b,c){return function(d){return a.contains(b)?c(d):[]}},distance:function(a,b,c,d){return function(e){const f=a.transformOrigin(),g=b.transformOrigin(),h=d.axis(f,g);return c(new physics.interaction.Impact(new physics.interaction.Attack(new physics.interaction.Pivot(a.particle,
f),h.normal.negate()),new physics.interaction.Attack(new physics.interaction.Pivot(b.particle,g),h.normal)),h.distance,e)}},projection:function(a,b,c){return function(d){const e=a.transformAxis(),f=b.transformOrigin(),g=e.distanceFrom(f);return c(new physics.interaction.Impact(new physics.interaction.Attack(new physics.interaction.Pivot(a.particle,e.project(f,g)),e.normal.negate()),new physics.interaction.Attack(new physics.interaction.Pivot(b.particle,f),e.normal)),g,d)}},projection2:function(a,
b,c){const d=physics.interaction.Axis.throughX(0),e=physics.interaction.Axis.throughY(0);return physics.actors.containerArray([function(f){d.distance=a.origin.x;e.distance=a.origin.y;return[]},physics.actors.projection(new physics.interaction.Rail(a.particle,d),b,c),physics.actors.projection(new physics.interaction.Rail(a.particle,e),b,c)])},angle:function(a,b,c,d,e){return function(f){return e(new physics.interaction.RotationImpact(a,b),c*a.motion.position.rotation-d*b.motion.position.rotation,f)}},
maximizer:function(a,b){return function(c){return physics.actors.maximizer.Accumulator.multiply(physics.actors.maximizer.Accumulator.attach(a(c),b))}},tracer:function(a,b,c,d){const e=[];for(var f=0;f<c;f++)e.push(a.transformOrigin());return function(g){e.push(a.transformOrigin());e.splice(0,1);b.origin=e[0].interpolate(e[c-1],d);return[]}},spatialAudio:function(a,b,c,d){const e=new GainNode(a,{gain:0}),f=new StereoPannerNode(a);e.connect(f);const g=function(h){const k=c.transformOrigin().transform(b.position().inverse());
var l=Math.pow(b.distance(),2);const m=Math.sqrt(k.square()+l);l=Math.sqrt(Math.pow(k.x,2)+l);h=a.currentTime+h;e.gain.linearRampToValueAtTime(d/m,h);f.pan.linearRampToValueAtTime(k.x/l,h);return[]};g(0);return{input:e,output:f,actor:g}},input:{Button:function(a,b,c){this.downActor=a;this.upActor=b;this.clickActor=c;this.reset()},Anchor:function(a,b){this.camera=a;this.fixture=b;this.absolute=null;this.reset()},registrators:{Window:function(a,b,c){this.type=a;this.listener=b;this.options=c},Distributor:function(a){this.registrators=
a}},handlers:{Merger:function(a){this.handlers=a},pressers:{KeyPresser:function(a,b){this.button=a;this.key=b;this.pressed=!1},MousePresser:function(a,b,c){this.button=a;this.filter=b;this.type=c;this.pressed=!1},TouchPresser:function(a,b,c,d){this.button=a;this.filter=b;this.tapDistance=c;this.tapDuration=d;this.touches=new Map}},movers:{KeyMover:function(a,b,c,d,e,f,g){this.anchor=a;this.left=b;this.right=c;this.up=d;this.down=e;this.acceleration=f;this.restitution=g;this.velocity=this.direction=
physics.dynamics.Vector.ZERO},MouseMover:function(a){this.anchor=a},TouchMover:function(a,b){this.anchor=a;this.filter=b;this.touches=new Map;this.reset()}}},filters:{anyOf:function(a){return function(b){return a.values().some(function(c){return c(b)})}},not:function(a){return function(b){return!a(b)}},bounds:function(a){return function(b){return a.bounds().contains(b)}}}},animation:{Timer:function(a,b){this.duration=a;this.time=b},Transition:function(a,b,c,d){this.timer=a;this.particle=b;this.from=
c;this.to=d},Cancelable:function(){this.bundle=new physics.collections.Bundle}}},rendering:{Context:function(a,b){this.context2d=a;this.physics=b;this.delta=0;this.updateSize();this.resetAlpha()},Color:function(a,b,c){this.r=a;this.g=b;this.b=c},graphics:{Separator:function(a,b){this.tracking=a;this.rendering=b},Container:function(a,b){this.graphics=a;this.dynamic=b},Margin:function(a,b){this.graphic=a;this.rectangle=b},Clearer:function(a){this.context=a},Background:function(a){this.context=a},Fitted:function(a,
b,c,d){this.context=a;this.graphic=b;this.size=c;this.alignment=d},Transformator:function(a,b,c,d){this.context=a;this.graphic=b;this.particle=c;this.mapper=d},BiTransformator:function(a,b,c,d,e){this.context=a;this.graphic=b;this.fixture1=c;this.fixture2=d;this.alpha=e},Translator:function(a,b,c,d){this.context=a;this.graphic=b;this.particle=c;this.mapper=d},Rotator:function(a,b,c,d){this.context=a;this.graphic=b;this.particle=c;this.mapper=d},Alpha:function(a,b,c,d){this.context=a;this.graphic=
b;this.particle=c;this.mapper=d},Offset:function(a,b,c){this.context=a;this.graphic=b;this.translation=c},FlippedX:function(a,b){this.context=a;this.graphic=b},Image:function(a,b,c){this.context=a;this.source=b;this.rectangle=c},Toggled:function(a,b,c,d){this.context=a;this.toggle=b;this.active=c;this.inactive=d},Properties:function(a,b){this.context=a;this.map=b},ColorProperty:function(a,b,c,d,e,f){this.context=a;this.particle=b;this.mapper=c;this.property=d;this.color0=e;this.color1=f},path:{Bounds:function(a,
b){this.context=a;this.graphic=b},Beginner:function(a){this.context=a},Filler:function(a){this.context=a},Stroker:function(a){this.context=a},Line:function(a,b){this.context=a;this.shape=b},Polygon:function(a,b){this.context=a;this.shape=b},Circle:function(a,b){this.context=a;this.shape=b},CircularSegment:function(a,b){this.context=a;this.shape=b}},text:{Filler:function(a,b,c){this.context=a;this.position=b;this.text=c},Stroker:function(a,b,c){this.context=a;this.position=b;this.text=c}}},perspective:{Camera:function(a,
b,c,d,e){this.context=a;this.particle=b;this.depth=c;this.scale=d;this.offset=e},Transformer:function(a,b){this.graphic=a;this.camera=b},View:function(a,b){this.graphic=a;this.depth=b},Updater:function(a){this.builder=a},builder:function(a){return new physics.tracking.Builder(a,physics.collections.Sorted.byOrder())}},text:{constant:function(a){return function(){return a}},concat:function(a){return function(){return a.map(function(b){return b()}).join("")}},keyValue:function(a,b){return physics.rendering.text.concat([a,
physics.rendering.text.constant(": "),b])},fps:function(){var a=null,b=0,c=0;return function(){const d=performance.now();for(null==a&&(a=d);d>=a;)a+=1E3,b=c,c=0;c++;return b}},count:function(a){return function(){return a.values().length}},tracking:function(a){return physics.rendering.text.concat([physics.rendering.text.count(a.collector),physics.rendering.text.constant(" collected / "),physics.rendering.text.count(a.updating),physics.rendering.text.constant(" updating / "),function(){return a.tracker.cells.size},
physics.rendering.text.constant(" allocated")])},camera:function(a){return function(){return a.scaling().toPrecision(4)+" scaling / "+a.context.size.x+" x "+a.context.size.y+" size"}}},mappers:{wave:function(a,b,c,d){return function(e){return a*Math.sin(e.rotation*c+d)+b}},waveUnit:function(a,b){return this.wave(a,0,1,b)},waveZero:function(a,b){return this.wave(.5*a,.5*a,1,b)},waveZeroMax:function(a){return this.waveZero(a,-Math.PI/2)},waveMaxZero:function(a){return this.waveZero(a,Math.PI/2)}}}};
physics.Context.prototype.update=function(){this.act();this.integrate()};physics.Context.prototype.act=function(){this.actor(this.delta).forEach(function(a){a.apply()})};physics.Context.prototype.integrate=function(){this.particles.values().forEach(this.integrateParticle.bind(this))};physics.Context.prototype.integrateParticle=function(a){a.integrate(this.delta)};physics.collections.Bundle.prototype.add=function(a,b){return this.addKey(a,a.add(b))};
physics.collections.Bundle.prototype.addKey=function(a,b){this.removers.push(function(){a.remove(b)});return this};physics.collections.Bundle.prototype.addAll=function(a,b){b.forEach(this.add.bind(this,a));return this};physics.collections.Bundle.prototype.addBundle=function(a){this.removers.push(this.release.bind(a));return this};physics.collections.Bundle.prototype.addCustom=function(a){this.removers.push(a);return this};
physics.collections.Bundle.prototype.release=function(){if(!this.removers.length)return!1;this.removers.forEach(function(a){a()});this.removers=[];return!0};physics.collections.Ordered.prototype.add=function(a){a=[a];this.set.add(a);return a};physics.collections.Ordered.prototype.remove=function(a){this.set.delete(a)||console.warn("Removing non-existing value from ordered collection",this,a)};
physics.collections.Ordered.prototype.values=function(){const a=[];this.set.forEach(function(b){a.push(b[0])});return a};physics.collections.Sorted.byOrder=function(){return new physics.collections.Sorted(function(a,b){return a.order()-b.order()})};physics.collections.Sorted.withOrder=function(a,b){a.hasOwnProperty("order")&&console.warn("Value already has order property",a);a.order=function(){return b};return a};
physics.collections.Sorted.prototype.binarySearch=function(a){return physics.utility.binarySearch(this.data,function(b){return 0>this.compare(b.values().next().value[0],a)}.bind(this))};physics.collections.Sorted.prototype.add=function(a){const b=this.binarySearch(a);(b==this.data.length||0<this.compare(this.data[b].values().next().value[0],a))&&this.data.splice(b,0,new Set);a=[a];this.data[b].add(a);return a};
physics.collections.Sorted.prototype.remove=function(a){const b=this.binarySearch(a[0]);b<this.data.length&&this.data[b].delete(a)?0==this.data[b].size&&this.data.splice(b,1):console.warn("Removing non-existing value from sorted collection",this,a)};physics.collections.Sorted.prototype.values=function(){const a=[];this.data.forEach(function(b){b.forEach(function(c){a.push(c[0])})});return a};physics.collections.Immutable.prototype.values=function(){return this.data.slice()};
physics.dynamics.Vector.ZERO=new physics.dynamics.Vector(0,0);physics.dynamics.Vector.ONE=new physics.dynamics.Vector(1,1);physics.dynamics.Vector.X_UNIT=new physics.dynamics.Vector(1,0);physics.dynamics.Vector.Y_UNIT=new physics.dynamics.Vector(0,1);physics.dynamics.Vector.fromOne=function(a){return new physics.dynamics.Vector(a,a)};physics.dynamics.Vector.fromRotation=function(a){return new physics.dynamics.Vector(Math.cos(a),Math.sin(a))};
physics.dynamics.Vector.fromEvent=function(a){return(new physics.dynamics.Vector(a.clientX,a.clientY)).multiply(window.devicePixelRatio)};physics.dynamics.Vector.fromImage=function(a){return new physics.dynamics.Vector(a.width,a.height)};physics.dynamics.Vector.bounds=function(a){return new physics.dynamics.Rectangle(a.reduce(physics.utility.minMethod),a.reduce(physics.utility.maxMethod))};
physics.dynamics.Vector.diffs=function(a){const b=[];for(var c=1;c<a.length;c++)b.push(a[c].subtract(a[c-1]));return b};physics.dynamics.Vector.reduceChain=function(a,b){const c=[];if(0<a.length&&(c.push(a[0]),1<a.length)){for(var d=0,e=0,f=1;f+1<a.length;f++)d+=Math.abs(a[f].subtract(a[e]).cross(a[f+1].subtract(a[e])))/2,d>b&&(c.push(a[f]),d=0,e=f);c.push(a[a.length-1])}return c};
physics.dynamics.Vector.prototype.min=function(a){return new physics.dynamics.Vector(Math.min(this.x,a.x),Math.min(this.y,a.y))};physics.dynamics.Vector.prototype.max=function(a){return new physics.dynamics.Vector(Math.max(this.x,a.x),Math.max(this.y,a.y))};physics.dynamics.Vector.prototype.less=function(a){return this.x<a.x&&this.y<a.y};physics.dynamics.Vector.prototype.add=function(a){return new physics.dynamics.Vector(this.x+a.x,this.y+a.y)};
physics.dynamics.Vector.prototype.subtract=function(a){return new physics.dynamics.Vector(this.x-a.x,this.y-a.y)};physics.dynamics.Vector.prototype.multiply=function(a){return new physics.dynamics.Vector(this.x*a,this.y*a)};physics.dynamics.Vector.prototype.multiplyVector=function(a){return new physics.dynamics.Vector(this.x*a.x,this.y*a.y)};physics.dynamics.Vector.prototype.divide=function(a){return new physics.dynamics.Vector(this.x/a,this.y/a)};
physics.dynamics.Vector.prototype.divideVector=function(a){return new physics.dynamics.Vector(this.x/a.x,this.y/a.y)};physics.dynamics.Vector.prototype.dot=function(a){return this.x*a.x+this.y*a.y};physics.dynamics.Vector.prototype.extendPositive=function(a){return this.multiply(Math.max(this.dot(a),0)/this.square())};physics.dynamics.Vector.prototype.cross=function(a){return this.rotate90().dot(a)};physics.dynamics.Vector.prototype.square=function(){return this.dot(this)};
physics.dynamics.Vector.prototype.length=function(){return Math.sqrt(this.square())};physics.dynamics.Vector.prototype.maxLength=function(a){const b=this.length();return b>a?this.multiply(a/b):this};physics.dynamics.Vector.prototype.angle=function(){return Math.atan2(this.y,this.x)};physics.dynamics.Vector.prototype.normalize=function(){return this.divide(this.length())};physics.dynamics.Vector.prototype.rotate90=function(){return new physics.dynamics.Vector(-this.y,this.x)};
physics.dynamics.Vector.prototype.rotate=function(a){a=physics.dynamics.Vector.fromRotation(-a);return new physics.dynamics.Vector(a.dot(this),a.rotate90().dot(this))};physics.dynamics.Vector.prototype.negate=function(){return new physics.dynamics.Vector(-this.x,-this.y)};physics.dynamics.Vector.prototype.floor=function(){return new physics.dynamics.Vector(Math.floor(this.x),Math.floor(this.y))};
physics.dynamics.Vector.prototype.modPositive=function(a){return new physics.dynamics.Vector(physics.utility.modPositive(this.x,a.x),physics.utility.modPositive(this.y,a.y))};physics.dynamics.Vector.prototype.transform=function(a){return this.rotate(a.rotation).add(a.translation)};physics.dynamics.Vector.prototype.interpolate=function(a,b){return this.multiply(1-b).add(a.multiply(b))};physics.dynamics.Rectangle.symmetric=function(a){return new physics.dynamics.Rectangle(a.negate(),a)};
physics.dynamics.Rectangle.bounds=function(a){return new physics.dynamics.Rectangle(a.map(function(b){return b.min}).reduce(physics.utility.minMethod),a.map(function(b){return b.max}).reduce(physics.utility.maxMethod))};physics.dynamics.Rectangle.prototype.size=function(){return this.max.subtract(this.min)};physics.dynamics.Rectangle.prototype.contains=function(a){return this.min.less(a)&&a.less(this.max)};
physics.dynamics.Rectangle.prototype.containsRectangle=function(a){return this.min.less(a.min)&&a.max.less(this.max)};physics.dynamics.Rectangle.prototype.intersects=function(a){return this.min.less(a.max)&&a.min.less(this.max)};physics.dynamics.Rectangle.prototype.vertices=function(){return[this.min,new physics.dynamics.Vector(this.min.x,this.max.y),new physics.dynamics.Vector(this.max.x,this.min.y),this.max]};physics.dynamics.Rectangle.prototype.transform=function(a){return physics.dynamics.Vector.bounds(this.vertices().map(function(b){return b.transform(a)}))};
physics.dynamics.Rectangle.prototype.add=function(a){return new physics.dynamics.Rectangle(this.min.add(a),this.max.add(a))};physics.dynamics.Rectangle.prototype.addRectangle=function(a){return new physics.dynamics.Rectangle(this.min.add(a.min),this.max.add(a.max))};physics.dynamics.Rectangle.prototype.subtractRectangle=function(a){return new physics.dynamics.Rectangle(this.min.subtract(a.min),this.max.subtract(a.max))};
physics.dynamics.Rectangle.prototype.multiply=function(a){return new physics.dynamics.Rectangle(this.min.multiply(a),this.max.multiply(a))};physics.dynamics.Rectangle.prototype.divideVector=function(a){return new physics.dynamics.Rectangle(this.min.divideVector(a),this.max.divideVector(a))};physics.dynamics.Rectangle.prototype.floor=function(){return new physics.dynamics.Rectangle(this.min.floor(),this.max.floor())};
physics.dynamics.Rectangle.prototype.flipX=function(){return new physics.dynamics.Rectangle(new physics.dynamics.Vector(-this.max.x,this.min.y),new physics.dynamics.Vector(-this.min.x,this.max.y))};physics.dynamics.Rectangle.prototype.interpolate=function(a){return this.size().multiplyVector(a).add(this.min)};physics.dynamics.Transformation.ZERO=new physics.dynamics.Transformation(physics.dynamics.Vector.ZERO,0);
physics.dynamics.Transformation.PI=new physics.dynamics.Transformation(physics.dynamics.Vector.ZERO,Math.PI);physics.dynamics.Transformation.fromTranslation=function(a){return new physics.dynamics.Transformation(a,0)};physics.dynamics.Transformation.fromRotation=function(a){return new physics.dynamics.Transformation(physics.dynamics.Vector.ZERO,a)};
physics.dynamics.Transformation.prototype.add=function(a){return new physics.dynamics.Transformation(this.translation.add(a.translation),this.rotation+a.rotation)};physics.dynamics.Transformation.prototype.subtract=function(a){return new physics.dynamics.Transformation(this.translation.subtract(a.translation),this.rotation-a.rotation)};physics.dynamics.Transformation.prototype.multiply=function(a){return new physics.dynamics.Transformation(this.translation.multiply(a),this.rotation*a)};
physics.dynamics.Transformation.prototype.divide=function(a){return new physics.dynamics.Transformation(this.translation.divide(a),this.rotation/a)};physics.dynamics.Transformation.prototype.inverse=function(){return new physics.dynamics.Transformation(this.translation.rotate(-this.rotation).negate(),-this.rotation)};physics.dynamics.Transformation.prototype.normalizePositive=function(){return new physics.dynamics.Transformation(this.translation,physics.utility.modPositive(this.rotation,physics.utility.PI_2))};
physics.dynamics.Transformation.prototype.normalizeSymmetric=function(){return new physics.dynamics.Transformation(this.translation,physics.utility.modSymmetric(this.rotation,physics.utility.PI_2))};physics.dynamics.Transformation.prototype.interpolate=function(a,b){return new physics.dynamics.Transformation(this.translation.interpolate(a.translation,b),physics.utility.interpolate(this.rotation,a.rotation,b))};physics.dynamics.Transformation.prototype.velocityAt=function(a){return this.translation.add(a.rotate90().multiply(this.rotation))};
physics.dynamics.Motion.ZERO=new physics.dynamics.Motion(physics.dynamics.Transformation.ZERO,physics.dynamics.Transformation.ZERO);physics.dynamics.Motion.fromPosition=function(a){return new physics.dynamics.Motion(a,physics.dynamics.Transformation.ZERO)};physics.dynamics.Motion.prototype.integrate=function(a,b){a=this.velocity.add(a.multiply(b));return new physics.dynamics.Motion(this.position.add(a.multiply(b)),a)};
physics.dynamics.Motion.prototype.normalize=function(){return new physics.dynamics.Motion(this.position.normalizePositive(),this.velocity)};physics.dynamics.Motion.prototype.add=function(a){return new physics.dynamics.Motion(this.position.add(a.position),this.velocity.add(a.velocity))};physics.dynamics.Motion.prototype.divide=function(a){return new physics.dynamics.Motion(this.position.divide(a),this.velocity.divide(a))};
physics.dynamics.Motion.prototype.interpolatePosition=function(a,b){return this.position.interpolate(a.position,b).normalizePositive()};physics.dynamics.Motion.prototype.interpolateVelocity=function(a,b){return this.velocity.interpolate(a.velocity,b)};physics.dynamics.Motion.prototype.interpolate=function(a,b){return new physics.dynamics.Motion(this.interpolatePosition(a,b),this.interpolateVelocity(a,b))};physics.dynamics.Mass.ZERO=new physics.dynamics.Mass(0,0);
physics.dynamics.Mass.ONE=new physics.dynamics.Mass(1,1);physics.dynamics.Mass.fromInverse=function(a){return new physics.dynamics.Mass(1/a,0)};physics.dynamics.Mass.prototype.invert=function(){return new physics.dynamics.Mass(1/this.translation,1/this.rotation)};physics.dynamics.Mass.prototype.multiply=function(a){return new physics.dynamics.Mass(this.translation*a,this.rotation*a)};
physics.dynamics.Particle.rotating=function(a){return physics.dynamics.Particle.infiniteMass(new physics.dynamics.Motion(physics.dynamics.Transformation.ZERO,physics.dynamics.Transformation.fromRotation(a)))};physics.dynamics.Particle.fromMass=function(a){return new physics.dynamics.Particle(physics.dynamics.Motion.ZERO,physics.dynamics.Mass.fromInverse(a))};physics.dynamics.Particle.infiniteMass=function(a){return new physics.dynamics.Particle(a,physics.dynamics.Mass.ZERO)};
physics.dynamics.Particle.oneMass=function(a){return new physics.dynamics.Particle(a,physics.dynamics.Mass.ONE)};physics.dynamics.Particle.merge=function(a){const b=physics.dynamics.Particle.mass(a),c=physics.dynamics.Particle.weighted(a).divide(b);return new physics.dynamics.Particle(c,(new physics.dynamics.Mass(b,physics.dynamics.Particle.inertia(a,c.position.translation))).invert())};
physics.dynamics.Particle.mass=function(a){return a.map(function(b){return 1/b.invMass.translation}).reduce(physics.utility.add,0)};physics.dynamics.Particle.weighted=function(a){return a.map(function(b){return b.weighted()}).reduce(physics.utility.addMethod,physics.dynamics.Motion.ZERO)};physics.dynamics.Particle.inertia=function(a,b){return a.map(function(c){return c.inertia(b)}).reduce(physics.utility.add,0)};
physics.dynamics.Particle.prototype.move=function(a){this.trace=this.trace.add(a);this.motion=this.motion.add(a)};physics.dynamics.Particle.prototype.reset=function(a){this.motion=this.trace=a};physics.dynamics.Particle.prototype.interpolatePosition=function(a){return this.trace.interpolatePosition(this.motion,a)};physics.dynamics.Particle.prototype.interpolateVelocity=function(a){return this.trace.interpolateVelocity(this.motion,a)};
physics.dynamics.Particle.prototype.interpolateMotion=function(a){return this.trace.interpolate(this.motion,a)};physics.dynamics.Particle.prototype.integrate=function(a){this.trace=this.motion.normalize();this.motion=this.trace.integrate(this.acceleration,a);this.acceleration=physics.dynamics.Transformation.ZERO};physics.dynamics.Particle.prototype.accelerate=function(a){this.acceleration=this.acceleration.add(a)};physics.dynamics.Particle.prototype.weighted=function(){return this.motion.divide(this.invMass.translation)};
physics.dynamics.Particle.prototype.inertia=function(a){return 1/this.invMass.rotation+a.subtract(this.motion.position.translation).square()/this.invMass.translation};physics.dynamics.Particle.prototype.isZero=function(){return this==physics.dynamics.Particle.ZERO};physics.dynamics.Particle.ZERO=new physics.dynamics.Particle(physics.dynamics.Motion.ZERO,physics.dynamics.Mass.ZERO);physics.interaction.Action.fromForce=function(a,b){return new physics.interaction.Action(a,a.invMass.multiply(b))};
physics.interaction.Action.fromTorque=function(a,b){return new physics.interaction.Action(a,physics.dynamics.Transformation.fromRotation(b*a.invMass.rotation))};physics.interaction.Action.fromTorque2=function(a,b,c){return[physics.interaction.Action.fromTorque(a,c),physics.interaction.Action.fromTorque(b,-c)]};physics.interaction.Action.prototype.apply=function(){this.particle.accelerate(this.acceleration)};physics.interaction.Axis.X_0=new physics.interaction.Axis(physics.dynamics.Vector.X_UNIT,0);
physics.interaction.Axis.Y_0=new physics.interaction.Axis(physics.dynamics.Vector.Y_UNIT,0);physics.interaction.Axis.throughX=function(a){return new physics.interaction.Axis(physics.dynamics.Vector.X_UNIT,a)};physics.interaction.Axis.throughY=function(a){return new physics.interaction.Axis(physics.dynamics.Vector.Y_UNIT,a)};physics.interaction.Axis.throughOne=function(a,b){return new physics.interaction.Axis(a,a.dot(b))};
physics.interaction.Axis.throughTwo=function(a,b){return physics.interaction.Axis.throughOne(a.subtract(b).rotate90().normalize(),a)};physics.interaction.Axis.prototype.distanceFrom=function(a){return this.normal.dot(a)-this.distance};physics.interaction.Axis.prototype.negate=function(){return new physics.interaction.Axis(this.normal.negate(),-this.distance)};physics.interaction.Axis.prototype.rotate=function(a){return new physics.interaction.Axis(this.normal.rotate(a),this.distance)};
physics.interaction.Axis.prototype.translate=function(a){return new physics.interaction.Axis(this.normal,this.distance+this.normal.dot(a))};physics.interaction.Axis.prototype.transform=function(a){return this.rotate(a.rotation).translate(a.translation)};physics.interaction.Axis.prototype.project=function(a,b){return a.subtract(this.normal.multiply(b))};physics.interaction.Axis.prototype.contact=function(a){return new physics.collisions.Contact(a,this.normal,this.distanceFrom(a))};
physics.interaction.Axis.prototype.chordEnds=function(a){const b=this.normal.multiply(this.distance);a=this.normal.rotate90().multiply(Math.sqrt(Math.pow(a,2)-Math.pow(this.distance,2)));return[b.subtract(a),b.add(a)]};physics.interaction.Singularity.prototype.isZero=function(a){return Math.abs(a)<this.threshold};physics.interaction.Singularity.prototype.isZeroVector=function(a){return a.square()<this.threshold};
physics.interaction.Singularity.prototype.divide=function(a,b,c){return this.isZero(b)?c:a/b};physics.interaction.Singularity.prototype.divideVector=function(a,b,c){return this.isZeroVector(b)?c:this.divide(a.square(),a.dot(b),0)};physics.interaction.Singularity.prototype.axis=function(a,b){a=b.subtract(a);b=a.length();return b<this.threshold?physics.interaction.Axis.X_0:new physics.interaction.Axis(a.divide(b),b)};physics.interaction.Elasticity.MAX=new physics.interaction.Elasticity(1,1);
physics.interaction.Elasticity.prototype.acceleration=function(a,b,c){return-(this.stiffness*a/c+this.damping*b)/c};physics.interaction.Elasticity.prototype.force=function(a,b,c){return this.acceleration(b,a.velocity(),c)/a.invMass()};physics.interaction.Elasticity.prototype.actions=function(a,b,c){return a.actions(this.force(a,b,c))};physics.interaction.Elasticity.prototype.handler=function(){return this.actions.bind(this)};
physics.interaction.Frictional.prototype.actions=function(a,b,c){b=this.elasticity.force(a,b,c);return a.actions(b).concat(this.frictionActions(a.rotate(),b,c))};physics.interaction.Frictional.prototype.frictionActions=function(a,b,c){return a.actions(this.frictionForce(a,b,c))};physics.interaction.Frictional.prototype.frictionForce=function(a,b,c){return physics.utility.clampSymmetric(this.elasticity.force(a,0,c),this.friction*Math.abs(b))};physics.interaction.Frictional.prototype.handler=function(){return this.actions.bind(this)};
physics.interaction.Fixture.stationary=function(a){return new physics.interaction.Fixture(physics.dynamics.Particle.ZERO,a)};physics.interaction.Fixture.centroid=function(a){return new physics.interaction.Fixture(a,physics.dynamics.Vector.ZERO)};physics.interaction.Fixture.absolute=function(a,b){return new physics.interaction.Fixture(a,b.transform(a.motion.position.inverse()))};
physics.interaction.Fixture.prototype.rail=function(a){return new physics.interaction.Rail(this.particle,physics.interaction.Axis.throughOne(a,this.origin))};physics.interaction.Fixture.prototype.transformOrigin=function(){return this.origin.transform(this.particle.motion.position)};physics.interaction.Fixture.prototype.interpolateOrigin=function(a){return this.origin.transform(this.particle.interpolatePosition(a))};
physics.interaction.Fixture.prototype.boundActor=function(a){return function(b){b=a.distanceFrom(this.origin);0>b&&(this.origin=a.project(this.origin,b));return[]}.bind(this)};physics.interaction.Rail.stationary=function(a){return new physics.interaction.Rail(physics.dynamics.Particle.ZERO,a)};physics.interaction.Rail.absolute=function(a,b){return new physics.interaction.Rail(a,b.transform(a.motion.position.inverse()))};physics.interaction.Rail.prototype.transformAxis=function(){return this.axis.transform(this.particle.motion.position)};
physics.interaction.Pivot.prototype.cast=function(a){return new physics.interaction.Pivot(this.particle,this.origin.add(this.particle.motion.velocity.translation.multiply(a)))};physics.interaction.Attack.prototype.rotate=function(){return new physics.interaction.Attack(this.pivot,this.direction.rotate90())};physics.interaction.Attack.prototype.cast=function(a){return new physics.interaction.Attack(this.pivot.cast(a),this.direction)};
physics.interaction.Attack.prototype.asVelocity=function(a){return new physics.dynamics.Transformation(this.direction.multiply(a*this.pivot.particle.invMass.translation),a*this.cross*this.pivot.particle.invMass.rotation)};physics.interaction.Attack.prototype.action=function(a){return new physics.interaction.Action(this.pivot.particle,this.asVelocity(a))};physics.interaction.Impact.prototype.rotate=function(){return new physics.interaction.Impact(this.first.rotate(),this.second.rotate())};
physics.interaction.Impact.prototype.cast=function(a){return new physics.interaction.Impact(this.first.cast(a),this.second.cast(a))};physics.interaction.Impact.prototype.invMass=function(){return this.first.invMass+this.second.invMass};physics.interaction.Impact.prototype.velocity=function(){return this.first.velocity+this.second.velocity};physics.interaction.Impact.prototype.impulse=function(){return this.velocity()/this.invMass()};
physics.interaction.Impact.prototype.actions=function(a){return[this.first.action(a),this.second.action(a)]};physics.interaction.RotationImpact.prototype.invMass=function(){return this.first.invMass.rotation+this.second.invMass.rotation};physics.interaction.RotationImpact.prototype.velocity=function(){return this.first.motion.velocity.rotation-this.second.motion.velocity.rotation};
physics.interaction.RotationImpact.prototype.actions=function(a){return physics.interaction.Action.fromTorque2(this.first,this.second,a)};physics.collisions.Contact.prototype.min=function(a){return this.distance<=a.distance?this:a};physics.collisions.Contact.prototype.max=function(a){return this.distance>=a.distance?this:a};physics.collisions.Contact.prototype.offset=function(a){return new physics.collisions.Contact(this.origin.add(this.direction.multiply(a)),this.direction,this.distance+a)};
physics.collisions.Contact.prototype.flip=function(){return new physics.collisions.Contact(this.origin.add(this.direction.multiply(this.distance)),this.direction.negate(),this.distance)};physics.collisions.Contact.prototype.pivot=function(a){return new physics.interaction.Pivot(a,this.origin)};physics.collisions.Contact.prototype.attack=function(a){return new physics.interaction.Attack(this.pivot(a),this.direction)};
physics.collisions.Contact.prototype.impact=function(a,b){return new physics.interaction.Impact(this.attack(a),this.flip().attack(b))};physics.collisions.Body.stationary=function(a){return new physics.collisions.Body(physics.dynamics.Particle.ZERO,a)};
physics.collisions.Body.uniform=function(a,b,c){const d=physics.dynamics.Transformation.fromTranslation(b.centroid());b=b.transform(d.inverse());return new physics.collisions.Body(new physics.dynamics.Particle(new physics.dynamics.Motion(a.motion.position.interpolate(d,c),a.motion.velocity),new physics.dynamics.Mass(a.invMass.translation,a.invMass.translation/b.inertia())),b)};
physics.collisions.Body.merge=function(a){const b=physics.dynamics.Particle.merge(a.map(function(c){return c.particle}));return a.map(function(c){return new physics.collisions.Body(b,c.shape.transform(c.particle.motion.position.subtract(b.motion.position)))})};physics.collisions.Body.bounds=function(a){return physics.dynamics.Rectangle.bounds(a.map(function(b){return b.bounds()}))};physics.collisions.Body.prototype.transformShape=function(){return this.shape.transform(this.particle.motion.position)};
physics.collisions.Body.prototype.interpolateShape=function(a){return this.shape.transform(this.particle.interpolatePosition(a))};physics.collisions.Body.prototype.bounds=function(){return this.transformShape().bounds()};physics.collisions.Body.prototype.intersect=function(a){return physics.collisions.shapes.intersect(this.transformShape(),a.transformShape())};physics.collisions.Body.prototype.contains=function(a){return physics.collisions.shapes.contains(this.transformShape(),a.transformShape())};
physics.collisions.Collider.prototype.handler=function(a){return new physics.tracking.handlers.Merger(this.body,this.matcher,a)};physics.collisions.Collider.prototype.updating=function(){return!this.body.particle.isZero()};physics.collisions.shapes.Line.prototype.transform=function(a){return new physics.collisions.shapes.Line(this.from.transform(a),this.to.transform(a))};physics.collisions.shapes.Line.prototype.centroid=function(){return this.from.add(this.to).multiply(.5)};
physics.collisions.shapes.Line.prototype.inertia=function(){return(this.from.square()+this.from.dot(this.to)+this.to.square())/3};physics.collisions.shapes.Line.prototype.bounds=function(){return new physics.dynamics.Rectangle(this.from.min(this.to),this.from.max(this.to))};physics.collisions.shapes.Line.prototype.features=function(){return[this.from,this.to]};physics.collisions.shapes.Line.prototype.axes=function(a){a=physics.interaction.Axis.throughTwo(this.from,this.to);return[a,a.negate()]};
physics.collisions.shapes.Line.prototype.contact=function(a){return a.contact(this.from).min(a.contact(this.to))};physics.collisions.shapes.Line.prototype.graphic=function(a){return new physics.rendering.graphics.path.Line(a,this)};physics.collisions.shapes.Polygon.convexHull=function(a){var b=a.slice().sort(function(c,d){return c.x-d.x});a=this.sortedHull(b);b=this.sortedHull(b.slice().reverse());return new physics.collisions.shapes.Polygon(a.concat(b))};
physics.collisions.shapes.Polygon.sortedHull=function(a){const b=[];for(var c=0;c<a.length;c++){for(;1<b.length&&this.isInner(b[b.length-1],b[b.length-2],a[c]);)b.pop();b.push(a[c])}b.pop();return b};physics.collisions.shapes.Polygon.isInner=function(a,b,c){return 0>=a.subtract(b).cross(c.subtract(a))};physics.collisions.shapes.Polygon.prototype.mapEdges=function(a){var b,c=this.vertices[this.vertices.length-1];return this.vertices.map(function(d){b=c;c=d;return a(b,c)})};
physics.collisions.shapes.Polygon.prototype.transform=function(a){return new physics.collisions.shapes.Polygon(this.vertices.map(function(b){return b.transform(a)}))};physics.collisions.shapes.Polygon.prototype.centroid=function(){return this.mapEdges(function(a,b){return a.add(b).multiply(a.cross(b))}).reduce(physics.utility.addMethod,physics.dynamics.Vector.ZERO).divide(6*this.area())};
physics.collisions.shapes.Polygon.prototype.inertia=function(){return this.mapEdges(function(a,b){return a.cross(b)*(a.square()+a.dot(b)+b.square())}).reduce(physics.utility.add,0)/(12*this.area())};physics.collisions.shapes.Polygon.prototype.area=function(){return this.mapEdges(function(a,b){return a.cross(b)}).reduce(physics.utility.add,0)/2};physics.collisions.shapes.Polygon.prototype.bounds=function(){return physics.dynamics.Vector.bounds(this.vertices)};
physics.collisions.shapes.Polygon.prototype.features=function(){return this.vertices};physics.collisions.shapes.Polygon.prototype.axes=function(a){return this.mapEdges(physics.interaction.Axis.throughTwo)};physics.collisions.shapes.Polygon.prototype.contact=function(a){return this.vertices.map(function(b){return a.contact(b)}).reduce(physics.utility.minMethod)};physics.collisions.shapes.Polygon.prototype.graphic=function(a){return new physics.rendering.graphics.path.Polygon(a,this)};
physics.collisions.shapes.Circle.prototype.transform=function(a){return new physics.collisions.shapes.Circle(this.center.transform(a),this.radius,this.singularity)};physics.collisions.shapes.Circle.prototype.centroid=function(){return this.center};physics.collisions.shapes.Circle.prototype.inertia=function(){return Math.pow(this.radius,2)*(.5+Math.PI*this.center.square())};
physics.collisions.shapes.Circle.prototype.bounds=function(){const a=physics.dynamics.Vector.fromOne(this.radius);return new physics.dynamics.Rectangle(this.center.subtract(a),this.center.add(a))};physics.collisions.shapes.Circle.prototype.features=function(){return[this.center]};physics.collisions.shapes.Circle.prototype.axes=function(a){return a.features().map(function(b){b=this.singularity.axis(this.center,b);return new physics.interaction.Axis(b.normal,this.center.dot(b.normal)+this.radius)}.bind(this))};
physics.collisions.shapes.Circle.prototype.contact=function(a){return a.contact(this.center).offset(-this.radius)};physics.collisions.shapes.Circle.prototype.graphic=function(a){return new physics.rendering.graphics.path.Circle(a,this)};physics.collisions.shapes.CircularSegment.from=function(a,b){return new physics.collisions.shapes.CircularSegment(a,b,Math.acos(-b.distance/a.radius))};
physics.collisions.shapes.CircularSegment.prototype.transform=function(a){return new physics.collisions.shapes.CircularSegment(this.circle.transform(a),this.axis.rotate(a.rotation),this.angle)};physics.collisions.shapes.CircularSegment.prototype.relativeChordEnds=function(){return this.axis.chordEnds(this.circle.radius)};physics.collisions.shapes.CircularSegment.prototype.chordEnds=function(){return this.relativeChordEnds().map(function(a){return a.add(this.circle.center)}.bind(this))};
physics.collisions.shapes.CircularSegment.prototype.relativeCentroid=function(){return this.axis.normal.multiply(4*this.circle.radius*Math.pow(Math.sin(this.angle),3)/(3*Math.sin(2*this.angle)-6*this.angle))};physics.collisions.shapes.CircularSegment.prototype.centroid=function(){return this.circle.center.add(this.relativeCentroid())};
physics.collisions.shapes.CircularSegment.prototype.centerInertia=function(){return.5*Math.pow(this.circle.radius,4)*(this.angle+Math.sin(2*this.angle)*(Math.pow(Math.sin(this.angle),2)/3-.5))};physics.collisions.shapes.CircularSegment.prototype.inertia=function(){var a=this.relativeCentroid();a=this.circle.center.add(a).square()-a.square();return this.centerInertia()/this.area()+a};
physics.collisions.shapes.CircularSegment.prototype.area=function(){return Math.pow(this.circle.radius,2)*(this.angle-Math.sin(2*this.angle)/2)};physics.collisions.shapes.CircularSegment.prototype.inArc=function(a,b,c){return(a!=b&&a!=c)==a};
physics.collisions.shapes.CircularSegment.prototype.bounds=function(){const a=this.relativeChordEnds(),b=0>a[0].cross(a[1]);return(new physics.dynamics.Rectangle(new physics.dynamics.Vector(this.inArc(b,0<a[0].y,0>a[1].y)?-this.circle.radius:Math.min(a[0].x,a[1].x),this.inArc(b,0>a[0].x,0<a[1].x)?-this.circle.radius:Math.min(a[0].y,a[1].y)),new physics.dynamics.Vector(this.inArc(b,0>a[0].y,0<a[1].y)?this.circle.radius:Math.max(a[0].x,a[1].x),this.inArc(b,0<a[0].x,0>a[1].x)?this.circle.radius:Math.max(a[0].y,
a[1].y)))).add(this.circle.center)};physics.collisions.shapes.CircularSegment.prototype.features=function(){return this.circle.features().concat(this.chordEnds())};physics.collisions.shapes.CircularSegment.prototype.axes=function(a){return this.circle.axes(a).concat(this.axis.translate(this.circle.center))};
physics.collisions.shapes.CircularSegment.prototype.contact=function(a){const b=this.relativeChordEnds();return this.inArc(0>b[0].cross(b[1]),0>b[0].cross(a.normal),0<b[1].cross(a.normal))?this.circle.contact(a):(new physics.collisions.shapes.Line(b[0].add(this.circle.center),b[1].add(this.circle.center))).contact(a)};physics.collisions.shapes.CircularSegment.prototype.graphic=function(a){return new physics.rendering.graphics.path.CircularSegment(a,this)};
physics.tracking.Tracker.prototype.newBox=function(a){return new physics.tracking.Box(a,a.bounds().addRectangle(this.margin))};physics.tracking.Tracker.prototype.rectangleKeys=function(a){const b=[];a=a.divideVector(this.size).floor();for(var c=a.min.x;c<=a.max.x;c++)for(var d=a.min.y;d<=a.max.y;d++)b.push(c+","+d);return b};
physics.tracking.Tracker.prototype.extractBoxes=function(a){const b=new Set;a.forEach(function(c){this.cells.has(c)&&this.cells.get(c).forEach(function(d){b.add(d)})}.bind(this));return b};physics.tracking.Tracker.prototype.cellsAdd=function(a,b){a.forEach(function(c){this.cells.has(c)||this.cells.set(c,new Set);this.cells.get(c).add(b)}.bind(this))};physics.tracking.Tracker.prototype.cellsRemove=function(a,b){a.forEach(function(c){this.cells.get(c).delete(b);this.cells.get(c).size||this.cells.delete(c)}.bind(this))};
physics.tracking.Tracker.prototype.add=function(a){const b=this.newBox(a);a=this.rectangleKeys(b.bounds);this.extractBoxes(a).forEach(function(c){b.bounds.intersects(c.bounds)&&b.handler.add(c.handler)});this.cellsAdd(a,b);return b};physics.tracking.Tracker.prototype.remove=function(a){const b=this.rectangleKeys(a.bounds);this.cellsRemove(b,a);this.extractBoxes(b).forEach(function(c){a.bounds.intersects(c.bounds)&&a.handler.remove(c.handler)})};
physics.tracking.Tracker.prototype.update=function(a){const b=a.handler.bounds();a.bounds.containsRectangle(b)||this.updateBounds(a,b.addRectangle(this.margin))};
physics.tracking.Tracker.prototype.updateBounds=function(a,b){const c=this.rectangleKeys(a.bounds),d=this.rectangleKeys(b),e=new Set(c.concat(d));this.cellsRemove(c,a);this.extractBoxes(e).forEach(function(f){const g=a.bounds.intersects(f.bounds),h=b.intersects(f.bounds);g&&!h?a.handler.remove(f.handler):!g&&h&&a.handler.add(f.handler)});this.cellsAdd(d,a);a.bounds=b};
physics.tracking.Builder.prototype.add=function(a){const b=this.tracker.add(a.handler(this.collector));return{box:b,updater:a.updating()?this.updating.add(b):null}};physics.tracking.Builder.prototype.remove=function(a){null!=a.updater&&this.updating.remove(a.updater);this.tracker.remove(a.box)};physics.tracking.Builder.prototype.update=function(){this.updating.values().forEach(this.tracker.update.bind(this.tracker))};
physics.tracking.Builder.prototype.actor=function(){return physics.actors.containerArray([physics.actors.updater(this),physics.actors.container(this.collector)])};physics.tracking.Builder.prototype.graphic=function(){return physics.rendering.graphics.Container.fixed([new physics.rendering.perspective.Updater(this),physics.rendering.graphics.Container.variable(this.collector)])};physics.tracking.handlers.Merger.prototype.bounds=function(){return this.data.bounds()};
physics.tracking.handlers.Merger.prototype.add=function(a){var b=this.matcher.match(a.matcher);b=b?this.collection.add(b(this.data,a.data)):null;this.map.has(a)||a.map.has(this)?console.warn("Calling add multiple times without remove",this,a):(this.map.set(a,b),a.map.set(this,b))};
physics.tracking.handlers.Merger.prototype.remove=function(a){if(this.map.has(a)&&a.map.has(this)){const b=this.map.get(a);null!=b&&this.collection.remove(b);this.map.delete(a);a.map.delete(this)}else console.warn("Calling remove without add before",this,a)};physics.tracking.handlers.Activator.prototype.bounds=function(){return this.bounded.bounds()};physics.tracking.handlers.Activator.prototype.add=function(a){a.addActivator(this)};physics.tracking.handlers.Activator.prototype.addActivator=function(a){};
physics.tracking.handlers.Activator.prototype.addActivation=function(a){a.addActivator(this)};physics.tracking.handlers.Activator.prototype.remove=function(a){a.removeActivator(this)};physics.tracking.handlers.Activator.prototype.removeActivator=function(a){};physics.tracking.handlers.Activator.prototype.removeActivation=function(a){a.removeActivator(this)};physics.tracking.handlers.Activation.prototype.bounds=function(){return this.bounded.bounds()};
physics.tracking.handlers.Activation.prototype.add=function(a){a.addActivation(this)};physics.tracking.handlers.Activation.prototype.addActivation=function(a){};physics.tracking.handlers.Activation.prototype.addActivator=function(a){this.hasOwnProperty("key")?console.warn("Calling add multiple times without remove",this,a):this.key=this.collection.add(this.bounded)};physics.tracking.handlers.Activation.prototype.remove=function(a){a.removeActivation(this)};
physics.tracking.handlers.Activation.prototype.removeActivation=function(a){};physics.tracking.handlers.Activation.prototype.removeActivator=function(a){this.hasOwnProperty("key")?(this.collection.remove(this.key),delete this.key):console.warn("Calling remove without add before",this,a)};physics.tracking.matchers.Mapping.prototype.define=function(a,b){this.map.set(a,b)};physics.tracking.matchers.Mapping.prototype.defineSymmetric=function(a,b){this.define(a,b);a.define(this,b)};
physics.tracking.matchers.Mapping.prototype.defineDirectedMerger=function(a,b){this.define(a,b);a.define(this,physics.tracking.mergers.swapper(b))};physics.tracking.matchers.Mapping.prototype.match=function(a){return a.matchMapping(this)};physics.tracking.matchers.Mapping.prototype.matchMapping=function(a){return a.map.get(this)};physics.tracking.matchers.Mapping.prototype.matchMappingOverride=function(a){return a.to.has(this)?a.to.get(this):a.matcher.matchMapping(this)};
physics.tracking.matchers.Mapping.prototype.matchDistinct=function(a){return a.matcher.matchMapping(this)};physics.tracking.matchers.MappingOverride.prototype.defineFrom=function(a,b){this.from.set(a,b)};physics.tracking.matchers.MappingOverride.prototype.defineTo=function(a,b){this.to.set(a,b)};physics.tracking.matchers.MappingOverride.prototype.defineSymmetric=function(a,b){this.defineFrom(a,b);this.defineTo(a,b)};
physics.tracking.matchers.MappingOverride.prototype.defineDirectedMerger=function(a,b){this.defineFrom(a,b);this.defineTo(a,physics.tracking.mergers.swapper(b))};physics.tracking.matchers.MappingOverride.prototype.match=function(a){return a.matchMappingOverride(this)};physics.tracking.matchers.MappingOverride.prototype.matchMapping=function(a){return this.from.has(a)?this.from.get(a):this.matcher.matchMapping(a)};physics.tracking.matchers.MappingOverride.prototype.matchMappingOverride=function(a){return this.matcher.match(a.matcher)};
physics.tracking.matchers.MappingOverride.prototype.matchDistinct=function(a){return a.matcher.matchMappingOverride(this)};physics.tracking.matchers.Distinct.prototype.match=function(a){return a.matchDistinct(this)};physics.tracking.matchers.Distinct.prototype.matchMapping=function(a){return this.matcher.matchMapping(a)};physics.tracking.matchers.Distinct.prototype.matchMappingOverride=function(a){return this.matcher.matchMappingOverride(a)};
physics.tracking.matchers.Distinct.prototype.matchDistinct=function(a){return this!==a?this.matcher.match(a.matcher):this.value};physics.actors.Toggle.prototype.unlockActor=function(a){return function(b){this.depth++;b=a(b);this.depth--;return b}.bind(this)};physics.actors.Toggle.prototype.resetActor=function(a){return function(b){this.active=a;return[]}.bind(this)};physics.actors.Toggle.prototype.reset=function(a){0<this.depth&&(this.active=a)};
physics.actors.Toggle.prototype.handler=function(a){return function(b,c,d){this.reset(a);return[]}.bind(this)};physics.actors.Motor.prototype.actor=function(a,b,c,d){return function(e){return physics.interaction.Action.fromTorque2(a,b,c*(this.target-(a.motion.velocity.rotation-b.motion.velocity.rotation)/d))}.bind(this)};physics.actors.maximizer.Accumulator=function(a){this.singularity=a;this.accelerations=[];this.accumulation=physics.dynamics.Transformation.ZERO};
physics.actors.maximizer.Accumulator.attach=function(a,b){const c=new Map;a.forEach(function(d){c.has(d.particle)||c.set(d.particle,new physics.actors.maximizer.Accumulator(b));c.get(d.particle).add(d.acceleration)});return c};physics.actors.maximizer.Accumulator.multiply=function(a){return physics.actors.maximizer.Accumulator.detach(a,physics.actors.maximizer.Accumulator.min(a))};
physics.actors.maximizer.Accumulator.detach=function(a,b){const c=[];a.forEach(function(d,e){c.push(new physics.interaction.Action(e,d.multiply(b)))});return c};physics.actors.maximizer.Accumulator.min=function(a){var b=1;a.forEach(function(c){b=Math.min(c.min(),b)});return b};physics.actors.maximizer.Accumulator.prototype.add=function(a){this.accelerations.push(a);this.accumulation=this.accumulation.add(a)};physics.actors.maximizer.Accumulator.prototype.multiply=function(a){return this.accumulation.multiply(a)};
physics.actors.maximizer.Accumulator.prototype.min=function(){return Math.min(this.maxTranslation(),this.maxRotation())};physics.actors.maximizer.Accumulator.prototype.translation=function(a){return this.singularity.divideVector(a.translation,this.accumulation.translation,1)};physics.actors.maximizer.Accumulator.prototype.rotation=function(a){return this.singularity.divide(a.rotation,this.accumulation.rotation,1)};
physics.actors.maximizer.Accumulator.prototype.maxTranslation=function(){return this.accelerations.map(this.translation.bind(this)).reduce(physics.utility.max,0)};physics.actors.maximizer.Accumulator.prototype.maxRotation=function(){return this.accelerations.map(this.rotation.bind(this)).reduce(physics.utility.max,0)};physics.actors.input.Button.prototype.reset=function(){this.pressed=0;this.queue=[]};
physics.actors.input.Button.prototype.pressDown=function(a){this.queue.push(function(b){return a()&&0==this.pressed++?this.downActor(b):[]})};physics.actors.input.Button.prototype.pressUp=function(a,b,c){this.queue.push(function(d){var e=[];a()&&(0<this.pressed&&0==--this.pressed&&(e=this.upActor(d),b()&&(e=e.concat(this.clickActor(d)))),c());return e})};
physics.actors.input.Button.prototype.actor=function(){return function(a){const b=[];for(;0<this.queue.length;)this.queue.shift().call(this,a).forEach(function(c){b.push(c)});return b}.bind(this)};physics.actors.input.Anchor.prototype.reset=function(){this.relative=physics.dynamics.Vector.ZERO};
physics.actors.input.Anchor.prototype.actor=function(){return function(a){this.fixture.origin=this.absolute?this.camera.transformInverse(this.absolute):this.fixture.origin.add(this.relative.multiply(this.camera.scaling()));this.reset();return[]}.bind(this)};physics.actors.input.registrators.Window.prototype.register=function(){window.addEventListener(this.type,this.listener,this.options)};
physics.actors.input.registrators.Window.prototype.unregister=function(){window.removeEventListener(this.type,this.listener,this.options)};physics.actors.input.registrators.Distributor.prototype.register=function(){this.registrators.forEach(function(a){a.register()})};physics.actors.input.registrators.Distributor.prototype.unregister=function(){this.registrators.forEach(function(a){a.unregister()})};physics.actors.input.handlers.Merger.prototype.registrator=function(){return new physics.actors.input.registrators.Distributor(this.handlers.map(function(a){return a.registrator()}).filter(function(a){return a}))};
physics.actors.input.handlers.Merger.prototype.actor=function(){return physics.actors.containerArray(this.handlers.map(function(a){return a.actor()}).filter(function(a){return a}))};physics.actors.input.handlers.pressers.KeyPresser.prototype.keyDown=function(a){a.code===this.key&&(this.button.pressDown(function(){return this.pressed?!1:this.pressed=!0}.bind(this)),a.preventDefault())};
physics.actors.input.handlers.pressers.KeyPresser.prototype.keyUp=function(a){a.code===this.key&&(this.button.pressUp(function(){return this.pressed}.bind(this),function(){return!0},function(){this.pressed=!1}.bind(this)),a.preventDefault())};
physics.actors.input.handlers.pressers.KeyPresser.prototype.registrator=function(){return new physics.actors.input.registrators.Distributor([new physics.actors.input.registrators.Window("keydown",this.keyDown.bind(this)),new physics.actors.input.registrators.Window("keyup",this.keyUp.bind(this))])};physics.actors.input.handlers.pressers.KeyPresser.prototype.actor=function(){};
physics.actors.input.handlers.pressers.MousePresser.prototype.mouseDown=function(a){a.button==this.type&&this.button.pressDown(function(b){return!this.pressed&&this.filter(b)?this.pressed=!0:!1}.bind(this,physics.dynamics.Vector.fromEvent(a)))};
physics.actors.input.handlers.pressers.MousePresser.prototype.mouseUp=function(a){a.button==this.type&&this.button.pressUp(function(){return this.pressed}.bind(this),function(b){return this.filter(b)}.bind(this,physics.dynamics.Vector.fromEvent(a)),function(){this.pressed=!1}.bind(this))};
physics.actors.input.handlers.pressers.MousePresser.prototype.registrator=function(){return new physics.actors.input.registrators.Distributor([new physics.actors.input.registrators.Window("mousedown",this.mouseDown.bind(this)),new physics.actors.input.registrators.Window("mouseup",this.mouseUp.bind(this))])};physics.actors.input.handlers.pressers.MousePresser.prototype.actor=function(){};
physics.actors.input.handlers.pressers.TouchPresser.prototype.forChangedTouches=function(a,b){for(var c=0;c<a.changedTouches.length;c++){const d=a.changedTouches.item(c);b.call(this,d.identifier,physics.dynamics.Vector.fromEvent(d))}};physics.actors.input.handlers.pressers.TouchPresser.prototype.touchStart=function(a){a.preventDefault();this.forChangedTouches(a,function(b,c){this.button.pressDown(function(){return this.filter(c)?(this.touches.set(b,{start:c,delta:0}),!0):!1}.bind(this))})};
physics.actors.input.handlers.pressers.TouchPresser.prototype.touchEnd=function(a){a.preventDefault();this.forChangedTouches(a,function(b,c){this.button.pressUp(function(){return this.touches.has(b)}.bind(this),function(){const d=this.touches.get(b);return this.filter(c)&&c.subtract(d.start).length()<this.tapDistance&&d.delta<this.tapDuration}.bind(this),function(){this.touches.delete(b)}.bind(this))})};
physics.actors.input.handlers.pressers.TouchPresser.prototype.touchCancel=function(a){a.preventDefault();this.forChangedTouches(a,function(b,c){this.button.pressUp(function(){return this.touches.has(b)}.bind(this),function(){return!1},function(){this.touches.delete(b)}.bind(this))})};
physics.actors.input.handlers.pressers.TouchPresser.prototype.registrator=function(){return new physics.actors.input.registrators.Distributor([new physics.actors.input.registrators.Window("touchstart",this.touchStart.bind(this),{passive:!1}),new physics.actors.input.registrators.Window("touchend",this.touchEnd.bind(this),{passive:!1}),new physics.actors.input.registrators.Window("touchcancel",this.touchCancel.bind(this),{passive:!1})])};
physics.actors.input.handlers.pressers.TouchPresser.prototype.actor=function(){return function(a){this.touches.forEach(function(b){b.delta+=a});return[]}.bind(this)};physics.actors.input.handlers.movers.KeyMover.prototype.set=function(a){this.anchor.absolute&&(this.anchor.absolute=null,this.velocity=physics.dynamics.Vector.ZERO);this.direction=a};physics.actors.input.handlers.movers.KeyMover.prototype.addLeft=function(){this.set(new physics.dynamics.Vector(Math.max(this.direction.x-1,-1),this.direction.y))};
physics.actors.input.handlers.movers.KeyMover.prototype.addRight=function(){this.set(new physics.dynamics.Vector(Math.min(this.direction.x+1,1),this.direction.y))};physics.actors.input.handlers.movers.KeyMover.prototype.addUp=function(){this.set(new physics.dynamics.Vector(this.direction.x,Math.max(this.direction.y-1,-1)))};physics.actors.input.handlers.movers.KeyMover.prototype.addDown=function(){this.set(new physics.dynamics.Vector(this.direction.x,Math.min(this.direction.y+1,1)))};
physics.actors.input.handlers.movers.KeyMover.prototype.keyDown=function(a){if(!a.repeat)switch(a.code){case this.left:this.addLeft();break;case this.right:this.addRight();break;case this.up:this.addUp();break;case this.down:this.addDown()}};physics.actors.input.handlers.movers.KeyMover.prototype.keyUp=function(a){switch(a.code){case this.left:this.addRight();break;case this.right:this.addLeft();break;case this.up:this.addDown();break;case this.down:this.addUp()}};
physics.actors.input.handlers.movers.KeyMover.prototype.registrator=function(){return new physics.actors.input.registrators.Distributor([new physics.actors.input.registrators.Window("keydown",this.keyDown.bind(this)),new physics.actors.input.registrators.Window("keyup",this.keyUp.bind(this))])};
physics.actors.input.handlers.movers.KeyMover.prototype.actor=function(){return function(a){this.velocity=this.velocity.add(this.direction.multiply(this.acceleration*a)).multiply(Math.pow(this.restitution,a));this.anchor.relative=this.anchor.relative.add(this.velocity.multiply(a));return[]}.bind(this)};physics.actors.input.handlers.movers.MouseMover.prototype.mouseMove=function(a){this.anchor.absolute=physics.dynamics.Vector.fromEvent(a)};
physics.actors.input.handlers.movers.MouseMover.prototype.registrator=function(){return new physics.actors.input.registrators.Window("mousemove",this.mouseMove.bind(this))};physics.actors.input.handlers.movers.MouseMover.prototype.actor=function(){};physics.actors.input.handlers.movers.TouchMover.prototype.reset=function(){this.queue=[]};physics.actors.input.handlers.movers.TouchMover.prototype.position=function(){var a=physics.dynamics.Vector.ZERO;this.touches.forEach(function(b){a=a.add(b)});return a.divide(this.touches.size)};
physics.actors.input.handlers.movers.TouchMover.prototype.queueChangedTouches=function(a,b){a.preventDefault();for(var c=0;c<a.changedTouches.length;c++){const d=a.changedTouches.item(c);this.queue.push(b.bind(this,d.identifier,physics.dynamics.Vector.fromEvent(d)))}};physics.actors.input.handlers.movers.TouchMover.prototype.touchStart=function(a){this.queueChangedTouches(a,this.touchStartUpdate)};
physics.actors.input.handlers.movers.TouchMover.prototype.touchStartUpdate=function(a,b){this.filter(b)&&(this.touches.set(a,b),this.last=this.position())};physics.actors.input.handlers.movers.TouchMover.prototype.touchEnd=function(a){this.queueChangedTouches(a,this.touchEndUpdate)};physics.actors.input.handlers.movers.TouchMover.prototype.touchEndUpdate=function(a,b){this.touches.has(a)&&(this.touches.delete(a),0<this.touches.size?this.last=this.position():delete this.last)};
physics.actors.input.handlers.movers.TouchMover.prototype.touchMove=function(a){this.queueChangedTouches(a,this.touchMoveUpdate)};physics.actors.input.handlers.movers.TouchMover.prototype.touchMoveUpdate=function(a,b){this.touches.has(a)&&(this.touches.set(a,b),a=this.position(),this.anchor.absolute=null,this.anchor.relative=this.anchor.relative.add(a.subtract(this.last)),this.last=a)};
physics.actors.input.handlers.movers.TouchMover.prototype.registrator=function(){return new physics.actors.input.registrators.Distributor([new physics.actors.input.registrators.Window("touchstart",this.touchStart.bind(this),{passive:!1}),new physics.actors.input.registrators.Window("touchend",this.touchEnd.bind(this),{passive:!1}),new physics.actors.input.registrators.Window("touchcancel",this.touchEnd.bind(this),{passive:!1}),new physics.actors.input.registrators.Window("touchmove",this.touchMove.bind(this),
{passive:!1})])};physics.actors.input.handlers.movers.TouchMover.prototype.actor=function(){return function(a){this.queue.forEach(function(b){b()});this.reset();return[]}.bind(this)};physics.actors.animation.Timer.prototype.alpha=function(){return this.time/this.duration};physics.actors.animation.Timer.prototype.elapse=function(){this.time=this.duration};
physics.actors.animation.Timer.prototype.elapsedActor=function(a){return function(b){this.time>=this.duration&&a();this.time=Math.min(this.time+b,this.duration);return[]}.bind(this)};physics.actors.animation.Timer.prototype.reverseActor=function(a){return function(b){0>=this.time&&a();this.time=Math.max(this.time-b,0);return[]}.bind(this)};
physics.actors.animation.Timer.prototype.toggledActor=function(a){return function(b){this.time=a.active?Math.min(this.time+b,this.duration):Math.max(this.time-b,0);return[]}.bind(this)};physics.actors.animation.Transition.zeroPi=function(a,b){return new physics.actors.animation.Transition(a,b,physics.dynamics.Transformation.ZERO,physics.dynamics.Transformation.PI)};
physics.actors.animation.Transition.prototype.actor=function(){return function(a){return[new physics.interaction.Action(this.particle,this.from.interpolate(this.to,this.timer.alpha()).subtract(this.particle.motion.position).normalizeSymmetric().divide(a).subtract(this.particle.motion.velocity).divide(a))]}.bind(this)};
physics.actors.animation.Cancelable.prototype.run=function(a,b){const c=this.cancel();this.bundle=new physics.collections.Bundle;a(this.bundle,function(d){d.release()&&b()}.bind(null,this.bundle));return c};physics.actors.animation.Cancelable.prototype.cancel=function(){return this.bundle.release()};
physics.rendering.Context.prototype.run=function(a,b){var c;const d=function(f){const g=physics.utility.measureRuntime(b);null!=c&&this.update(Math.max(f-c,0)/1E3);this.render(a);c=f+g;e=window.requestAnimationFrame(d)}.bind(this);var e=window.requestAnimationFrame(d);return function(){window.cancelAnimationFrame(e)}};physics.rendering.Context.prototype.frame=function(){return new physics.dynamics.Rectangle(physics.dynamics.Vector.ZERO,this.size)};physics.rendering.Context.prototype.position=function(a){return a.interpolatePosition(this.alpha)};
physics.rendering.Context.prototype.velocity=function(a){return a.interpolateVelocity(this.alpha)};physics.rendering.Context.prototype.motion=function(a){return a.interpolateMotion(this.alpha)};physics.rendering.Context.prototype.fixtureOrigin=function(a){return a.interpolateOrigin(this.alpha)};physics.rendering.Context.prototype.bodyShape=function(a){return a.interpolateShape(this.alpha)};
physics.rendering.Context.prototype.doTranslated=function(a,b){this.context2d.translate(a.x,a.y);b();this.context2d.translate(-a.x,-a.y)};physics.rendering.Context.prototype.doRotated=function(a,b){this.context2d.rotate(a);b();this.context2d.rotate(-a)};physics.rendering.Context.prototype.doScaled=function(a,b){this.context2d.scale(a,a);b();this.context2d.scale(1/a,1/a)};
physics.rendering.Context.prototype.doTransformed=function(a,b){this.doTranslated(a.translation,this.doRotated.bind(this,a.rotation,b))};physics.rendering.Context.prototype.doFlippedX=function(a){this.context2d.scale(-1,1);a();this.context2d.scale(-1,1)};physics.rendering.Context.prototype.updateSize=function(){this.size=physics.dynamics.Vector.fromImage(this.context2d.canvas)};physics.rendering.Context.prototype.updateAlpha=function(){this.alpha=1+this.delta/this.physics.delta};
physics.rendering.Context.prototype.resetAlpha=function(){this.alpha=1};physics.rendering.Context.prototype.assign=function(a){Object.keys(a).forEach(function(b){this.context2d[b]=a[b]}.bind(this))};physics.rendering.Context.prototype.update=function(a){for(this.delta+=a;0<this.delta;)this.physics.update(),this.delta-=this.physics.delta};physics.rendering.Context.prototype.render=function(a){this.updateSize();this.updateAlpha();a.render();this.resetAlpha()};
physics.rendering.Color.fromCss=function(a){if("#"===a[0]){if(4==a.length)return new physics.rendering.Color(physics.rendering.Color.parseHex1(a,1),physics.rendering.Color.parseHex1(a,2),physics.rendering.Color.parseHex1(a,3));if(7==a.length)return new physics.rendering.Color(physics.rendering.Color.parseHex2(a,1),physics.rendering.Color.parseHex2(a,3),physics.rendering.Color.parseHex2(a,5))}};physics.rendering.Color.parseHex1=function(a,b){return parseInt(a[b],16)/15};
physics.rendering.Color.parseHex2=function(a,b){return parseInt(a.substring(b,b+2),16)/255};physics.rendering.Color.prototype.interpolate=function(a,b){return new physics.rendering.Color(physics.utility.interpolate(this.r,a.r,b),physics.utility.interpolate(this.g,a.g,b),physics.utility.interpolate(this.b,a.b,b))};physics.rendering.Color.prototype.toCss=function(){return"rgb("+this.toInteger(this.r)+", "+this.toInteger(this.g)+", "+this.toInteger(this.b)+")"};
physics.rendering.Color.prototype.toInteger=function(a){return physics.utility.clamp(Math.floor(256*a),0,255)};physics.rendering.graphics.Separator.prototype.bounds=function(){return this.tracking.bounds()};physics.rendering.graphics.Separator.prototype.updating=function(){return this.tracking.updating()};physics.rendering.graphics.Separator.prototype.render=function(){this.rendering.render()};
physics.rendering.graphics.Container.fixed=function(a){return new physics.rendering.graphics.Container(new physics.collections.Immutable(a),!1)};physics.rendering.graphics.Container.variable=function(a){return new physics.rendering.graphics.Container(a,!0)};physics.rendering.graphics.Container.separated=function(a,b){return new physics.rendering.graphics.Separator(a[b],physics.rendering.graphics.Container.fixed(a))};physics.rendering.graphics.Container.prototype.bounds=function(){return physics.dynamics.Rectangle.bounds(this.graphics.values().map(function(a){return a.bounds()}))};
physics.rendering.graphics.Container.prototype.updating=function(){return this.dynamic||this.graphics.values().some(function(a){return a.updating()})};physics.rendering.graphics.Container.prototype.render=function(){this.graphics.values().forEach(function(a){a.render()})};physics.rendering.graphics.Margin.prototype.bounds=function(){return this.graphic.bounds().addRectangle(this.rectangle)};physics.rendering.graphics.Margin.prototype.updating=function(){return this.graphic.updating()};
physics.rendering.graphics.Margin.prototype.render=function(){this.graphic.render()};physics.rendering.graphics.Clearer.prototype.render=function(){this.context.context2d.setTransform(1,0,0,1,0,0);this.context.context2d.clearRect(0,0,this.context.size.x,this.context.size.y)};physics.rendering.graphics.Background.prototype.render=function(){this.context.context2d.rect(0,0,this.context.size.x,this.context.size.y)};physics.rendering.graphics.Fitted.UPPER_LEFT=physics.dynamics.Vector.ZERO;
physics.rendering.graphics.Fitted.UPPER_CENTER=new physics.dynamics.Vector(.5,0);physics.rendering.graphics.Fitted.UPPER_RIGHT=new physics.dynamics.Vector(1,0);physics.rendering.graphics.Fitted.LOWER_LEFT=new physics.dynamics.Vector(0,1);physics.rendering.graphics.Fitted.LOWER_CENTER=new physics.dynamics.Vector(.5,1);physics.rendering.graphics.Fitted.LOWER_RIGHT=physics.dynamics.Vector.ONE;physics.rendering.graphics.Fitted.CENTER_LEFT=new physics.dynamics.Vector(0,.5);
physics.rendering.graphics.Fitted.CENTER_RIGHT=new physics.dynamics.Vector(1,.5);physics.rendering.graphics.Fitted.CENTER=new physics.dynamics.Vector(.5,.5);physics.rendering.graphics.Fitted.prototype.translation=function(a){return this.context.size.subtract(this.size.multiply(a)).multiplyVector(this.alignment)};physics.rendering.graphics.Fitted.prototype.scaling=function(){return Math.min(this.context.size.x/this.size.x,this.context.size.y/this.size.y)};
physics.rendering.graphics.Fitted.prototype.render=function(){const a=this.scaling();this.context.doTranslated(this.translation(a),this.context.doScaled.bind(this.context,a,this.graphic.render.bind(this.graphic)))};physics.rendering.graphics.Fitted.prototype.bounds=function(){const a=this.scaling();return this.graphic.bounds().multiply(a).add(this.translation(a))};physics.rendering.graphics.Transformator.identity=function(a,b,c){return new physics.rendering.graphics.Transformator(a,b,c,physics.utility.identity)};
physics.rendering.graphics.Transformator.prototype.bounds=function(){return this.graphic.bounds().transform(this.position())};physics.rendering.graphics.Transformator.prototype.updating=function(){return!this.particle.isZero()||this.graphic.updating()};physics.rendering.graphics.Transformator.prototype.render=function(){this.context.doTransformed(this.position(),this.graphic.render.bind(this.graphic))};physics.rendering.graphics.Transformator.prototype.position=function(){return this.mapper(this.context.position(this.particle))};
physics.rendering.graphics.BiTransformator.prototype.bounds=function(){return this.graphic.bounds().transform(this.transformation())};physics.rendering.graphics.BiTransformator.prototype.updating=function(){return!this.fixture1.particle.isZero()||!this.fixture2.particle.isZero()||this.graphic.updating()};physics.rendering.graphics.BiTransformator.prototype.render=function(){this.context.doTransformed(this.transformation(),this.graphic.render.bind(this.graphic))};
physics.rendering.graphics.BiTransformator.prototype.transformation=function(){const a=this.context.fixtureOrigin(this.fixture1),b=this.context.fixtureOrigin(this.fixture2);return new physics.dynamics.Transformation(a.interpolate(b,this.alpha),b.subtract(a).angle())};physics.rendering.graphics.Translator.fixture=function(a,b,c,d){return new physics.rendering.graphics.Translator(a,b,c.particle,function(e){return d(c.origin.transform(e))})};physics.rendering.graphics.Translator.prototype.bounds=function(){return this.graphic.bounds().add(this.translation())};
physics.rendering.graphics.Translator.prototype.updating=function(){return!this.particle.isZero()||this.graphic.updating()};physics.rendering.graphics.Translator.prototype.render=function(){this.context.doTranslated(this.translation(),this.graphic.render.bind(this.graphic))};physics.rendering.graphics.Translator.prototype.translation=function(){return this.mapper(this.context.position(this.particle))};
physics.rendering.graphics.Rotator.prototype.bounds=function(){return physics.dynamics.Rectangle.symmetric(physics.dynamics.Vector.fromOne(this.graphic.bounds().vertices().map(function(a){return a.length()}).reduce(physics.utility.max,0)))};physics.rendering.graphics.Rotator.prototype.updating=function(){return this.graphic.updating()};physics.rendering.graphics.Rotator.prototype.render=function(){this.context.doRotated(this.mapper(this.context.position(this.particle)),this.graphic.render.bind(this.graphic))};
physics.rendering.graphics.Alpha.constant=function(a,b,c){return new physics.rendering.graphics.Alpha(a,b,physics.dynamics.Particle.ZERO,function(){return c})};physics.rendering.graphics.Alpha.prototype.bounds=function(){return this.graphic.bounds()};physics.rendering.graphics.Alpha.prototype.updating=function(){return this.graphic.updating()};
physics.rendering.graphics.Alpha.prototype.render=function(){const a=this.context.context2d.globalAlpha;this.context.context2d.globalAlpha=a*this.mapper(this.context.position(this.particle));this.graphic.render();this.context.context2d.globalAlpha=a};physics.rendering.graphics.Offset.prototype.bounds=function(){return this.graphic.bounds().add(this.translation)};physics.rendering.graphics.Offset.prototype.updating=function(){return this.graphic.updating()};
physics.rendering.graphics.Offset.prototype.render=function(){this.context.doTranslated(this.translation,this.graphic.render.bind(this.graphic))};physics.rendering.graphics.FlippedX.prototype.bounds=function(){return this.graphic.bounds().flipX()};physics.rendering.graphics.FlippedX.prototype.updating=function(){return this.graphic.updating()};physics.rendering.graphics.FlippedX.prototype.render=function(){this.context.doFlippedX(this.graphic.render.bind(this.graphic))};
physics.rendering.graphics.Image.CENTER=new physics.dynamics.Vector(-.5,-.5);physics.rendering.graphics.Image.fromOrigin=function(a,b,c){return new physics.rendering.graphics.Image(a,b,new physics.dynamics.Rectangle(c,c.add(physics.dynamics.Vector.fromImage(b))))};physics.rendering.graphics.Image.prototype.bounds=function(){return this.rectangle};physics.rendering.graphics.Image.prototype.updating=function(){return!1};
physics.rendering.graphics.Image.prototype.render=function(){this.context.context2d.drawImage(this.source,this.rectangle.min.x,this.rectangle.min.y)};physics.rendering.graphics.Image.prototype.addRelative=function(a){return new physics.rendering.graphics.Image(this.context,this.source,this.rectangle.add(a.multiplyVector(this.rectangle.size())))};
physics.rendering.graphics.Toggled.prototype.bounds=function(){return this.updating()?this.toggle.active?this.active.bounds():this.inactive.bounds():physics.dynamics.Rectangle.bounds([this.active.bounds(),this.inactive.bounds()])};physics.rendering.graphics.Toggled.prototype.updating=function(){return this.active.updating()||this.inactive.updating()};physics.rendering.graphics.Toggled.prototype.render=function(){this.toggle.active?this.active.render():this.inactive.render()};
physics.rendering.graphics.Properties.prototype.render=function(){this.context.assign(this.map)};physics.rendering.graphics.ColorProperty.prototype.render=function(){this.context.context2d[this.property]=this.color0.interpolate(this.color1,this.mapper(this.context.position(this.particle))).toCss()};physics.rendering.graphics.path.Bounds.prototype.bounds=function(){return this.graphic.bounds()};physics.rendering.graphics.path.Bounds.prototype.updating=function(){return this.graphic.updating()};
physics.rendering.graphics.path.Bounds.prototype.render=function(){const a=this.graphic.bounds(),b=a.size();this.context.context2d.rect(a.min.x,a.min.y,b.x,b.y)};physics.rendering.graphics.path.Beginner.prototype.render=function(){this.context.context2d.beginPath()};
physics.rendering.graphics.path.Filler.wrap=function(a,b,c){return physics.rendering.graphics.Container.separated([new physics.rendering.graphics.path.Beginner(a),b,new physics.rendering.graphics.Properties(a,c),new physics.rendering.graphics.path.Filler(a)],1)};physics.rendering.graphics.path.Filler.prototype.render=function(){this.context.context2d.fill()};
physics.rendering.graphics.path.Stroker.wrap=function(a,b,c){return physics.rendering.graphics.Container.separated([new physics.rendering.graphics.path.Beginner(a),b,new physics.rendering.graphics.Properties(a,c),new physics.rendering.graphics.path.Stroker(a)],1)};physics.rendering.graphics.path.Stroker.prototype.render=function(){this.context.context2d.stroke()};physics.rendering.graphics.path.Line.prototype.bounds=function(){return this.shape.bounds()};
physics.rendering.graphics.path.Line.prototype.updating=function(){return!1};physics.rendering.graphics.path.Line.prototype.render=function(){this.context.context2d.moveTo(this.shape.from.x,this.shape.from.y);this.context.context2d.lineTo(this.shape.to.x,this.shape.to.y)};physics.rendering.graphics.path.Polygon.prototype.bounds=function(){return this.shape.bounds()};physics.rendering.graphics.path.Polygon.prototype.updating=function(){return!1};
physics.rendering.graphics.path.Polygon.prototype.render=function(){this.context.context2d.moveTo(this.shape.vertices[0].x,this.shape.vertices[0].y);for(var a=1;a<this.shape.vertices.length;a++)this.context.context2d.lineTo(this.shape.vertices[a].x,this.shape.vertices[a].y);this.context.context2d.closePath()};physics.rendering.graphics.path.Circle.prototype.bounds=function(){return this.shape.bounds()};physics.rendering.graphics.path.Circle.prototype.updating=function(){return!1};
physics.rendering.graphics.path.Circle.prototype.render=function(){this.context.context2d.arc(this.shape.center.x,this.shape.center.y,this.shape.radius,0,physics.utility.PI_2)};physics.rendering.graphics.path.CircularSegment.prototype.bounds=function(){return this.shape.bounds()};physics.rendering.graphics.path.CircularSegment.prototype.updating=function(){return!1};
physics.rendering.graphics.path.CircularSegment.prototype.render=function(){const a=this.shape.chordEnds(),b=this.shape.axis.normal.negate().angle();this.context.context2d.moveTo(a[0].x,a[0].y);this.context.context2d.arc(this.shape.circle.center.x,this.shape.circle.center.y,this.shape.circle.radius,b-this.shape.angle,b+this.shape.angle);this.context.context2d.closePath()};
physics.rendering.graphics.text.Filler.prototype.render=function(){this.context.context2d.fillText(this.text(),this.position.x,this.position.y)};physics.rendering.graphics.text.Stroker.prototype.render=function(){this.context.context2d.strokeText(this.text(),this.position.x,this.position.y)};physics.rendering.perspective.Camera.prototype.position=function(){return this.context.position(this.particle)};physics.rendering.perspective.Camera.prototype.velocity=function(){return this.context.velocity(this.particle)};
physics.rendering.perspective.Camera.prototype.motion=function(){return this.context.motion(this.particle)};physics.rendering.perspective.Camera.prototype.distance=function(){return this.depth(this.motion())};physics.rendering.perspective.Camera.prototype.scalingFrom=function(a){return this.scale(this.context.size)*this.depth(a)};physics.rendering.perspective.Camera.prototype.scaling=function(){return this.scalingFrom(this.motion())};physics.rendering.perspective.Camera.prototype.translation=function(){return this.context.size.multiplyVector(this.offset)};
physics.rendering.perspective.Camera.prototype.doTransformed=function(a){const b=this.motion();this.context.doTranslated(this.translation(),this.context.doScaled.bind(this.context,1/this.scalingFrom(b),this.context.doRotated.bind(this.context,-b.position.rotation,this.context.doTranslated.bind(this.context,b.position.translation.negate(),a))))};physics.rendering.perspective.Camera.prototype.transformInverseFrom=function(a,b){return b.subtract(this.translation()).multiply(this.scalingFrom(a)).transform(a.position)};
physics.rendering.perspective.Camera.prototype.transformInverse=function(a){return this.transformInverseFrom(this.motion(),a)};physics.rendering.perspective.Camera.prototype.handler=function(a){return new physics.tracking.handlers.Activator(this)};physics.rendering.perspective.Camera.prototype.bounds=function(){return physics.dynamics.Vector.bounds(this.context.frame().vertices().map(this.transformInverse.bind(this)))};physics.rendering.perspective.Camera.prototype.updating=function(){return!this.particle.isZero()};
physics.rendering.perspective.Camera.prototype.fireAudio=function(a,b,c,d){d=new AudioBufferSourceNode(a,{buffer:d});const e=physics.actors.spatialAudio(a,this,physics.interaction.Fixture.stationary(b),c);d.connect(e.input);e.output.connect(a.destination);d.onended=function(){e.output.disconnect()};d.start()};physics.rendering.perspective.Transformer.prototype.render=function(){this.camera.doTransformed(this.graphic.render.bind(this.graphic))};
physics.rendering.perspective.View.enclosed=function(a,b,c,d){const e=physics.rendering.graphics.Container.fixed(b);return[new physics.rendering.perspective.View(new physics.rendering.graphics.Separator(e,a),d-.25),new physics.rendering.perspective.View(new physics.rendering.graphics.Separator(e,c),d+.25)].concat(b.map(function(f){return new physics.rendering.perspective.View(f,d)}))};
physics.rendering.perspective.View.prototype.handler=function(a){return new physics.tracking.handlers.Activation(this,a)};physics.rendering.perspective.View.prototype.bounds=function(){return this.graphic.bounds()};physics.rendering.perspective.View.prototype.updating=function(){return this.graphic.updating()};physics.rendering.perspective.View.prototype.render=function(){this.graphic.render()};physics.rendering.perspective.View.prototype.order=function(){return this.depth};
physics.rendering.perspective.Updater.prototype.render=function(){this.builder.update()};physics.rendering.mappers.WAVE_01=physics.rendering.mappers.waveZeroMax(1);physics.rendering.mappers.WAVE_10=physics.rendering.mappers.waveMaxZero(1);