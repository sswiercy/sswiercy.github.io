const game={utility:{flatten:function(t){const e=[];return t.forEach((function(t){t.forEach((function(t){e.push(t)}))})),e},interpolate:function(t,e,o){return t*(1-o)+e*o},clamp:function(t,e,o){return Math.min(Math.max(t,e),o)},modPositive:function(t,e){return t-Math.floor(t/e)*e}},geometry:{Vector:function(t,e,o){this.x=t,this.y=e,this.z=o},Mapping:function(t,e){this.u=t,this.v=e},Plane:function(t,e){this.normal=t,this.offset=e},Matrix:function(t){this.data=t}},model:{Color:function(t,e,o){this.r=t,this.g=e,this.b=o},Path:function(t,e){this.mapper=t,this.count=e},Vertex:function(t,e,o,r){this.position=t,this.normal=e,this.color=o,this.checker=r?1:0},Triangle:function(t,e,o){this.a=t,this.b=e,this.c=o}},collision:{handlers:{Collection:function(t){this.handlers=t},Rebound:function(t,e,o,r){this.minVelocity=t,this.minAngle=e,this.restitution=o,this.friction=r},Completion:function(){this.active=!1}},Contact:function(t,e,o,r,n){this.ball=t,this.position=e,this.vector=o,this.length=r,this.delta=n},Vertex:function(t,e){this.position=t,this.handler=e},Triangle:function(t,e,o){this.a=t,this.b=e,this.c=o,this.ab=t.position.plane(e.position),this.bc=e.position.plane(o.position),this.ca=o.position.plane(t.position);const r=this.ab.normal.cross(this.bc.normal);this.abT=t.position.planeNormal(o.position,r.cross(this.ab.normal)),this.bcT=e.position.planeNormal(t.position,r.cross(this.bc.normal)),this.caT=o.position.planeNormal(e.position,r.cross(this.ca.normal))},Sphere:function(t,e){this.center=t,this.radius=e,this.sqrRadius=Math.pow(e,2);const o=new game.geometry.Vector(e,e,e);this.min=t.subtract(o),this.max=t.add(o)},Index:function(t){this.size=t,this.map=new Map}},webgl:{BasicProgram:function(t){this.gl=t,this.program=game.webgl.loadProgram(t,"basic",{}),this.locations=this.buildLocations()},BasicRenderer:function(t,e){this.program=t,this.buffer=t.buildBuffer(e),this.count=e.length},ArrowProgram:function(t){this.gl=t,this.program=game.webgl.loadProgram(t,"arrow",game.webgl.ArrowProgram.SHADER_DEFS),this.locations=this.buildLocations()},ArrowRenderer:function(t,e){this.program=t,this.buffer=t.buildBuffer(e)},ArrowState:function(t,e,o){this.matrix=t,this.extents=e,this.color=o},loadShader:function(t,e,o,r){const n=t.createShader(e);if(t.shaderSource(n,Object.keys(r).map((function(t){return["#define",t,r[t]].join(" ")+"\n"})).join("")+document.getElementById(o).textContent),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw new Error(t.getShaderInfoLog(n));return n},loadProgram:function(t,e,o){const r=t.createProgram();if(t.attachShader(r,game.webgl.loadShader(t,t.VERTEX_SHADER,e+"-vertex-shader",o)),t.attachShader(r,game.webgl.loadShader(t,t.FRAGMENT_SHADER,e+"-fragment-shader",o)),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS))throw new Error(t.getProgramInfoLog(r));return r},interleaveAttribPointer:function(t,e,o,r){const n=r.map((function(t){return t.components})).reduce((function(t,e){return t+e}),0);var i=0;r.forEach((function(r){t.vertexAttribPointer(r.location,r.components,e,r.normalized,n*o,i*o),i+=r.components}))}},Camera:function(t,e,o,r,n){this.position=t,this.pan=e,this.tilt=o,this.zoom=r,this.ratio=n},Frame:function(t,e,o,r){this.timestamp=t,this.renderer=e,this.state=o,this.depth=r},Runner:function(t,e){this.gl=t,this.driver=e,this.queue=new Map,this.callback=this.run.bind(this)},Controller:function(t,e,o,r){this.gl=t,this.camera=e,this.ball=o,this.hud=r,this.arrowHide(),this.mouseMoveHandler=this.handleMouseMove.bind(this),this.wheelHandler=this.handleWheel.bind(this),this.lockedClickHandler=this.handleLockedClick.bind(this),this.lockedMouseDownHandler=this.handleLockedMouseDown.bind(this),this.lockedMouseUpHandler=this.handleLockedMouseUp.bind(this),this.unlockedClickHandler=this.handleUnlockedClick.bind(this)},Hud:function(){this.strokes=0,this.updateStrokes()},Ball:function(t,e,o){this.radius=t,this.position=e,this.velocity=o},Body:function(t,e){this.model=t,this.collision=e},driver:function(t,e,o,r,n,i,a,s,l){var m;function h(t){i.render(t)}function c(e){a.render(e),t.depthFunc(t.GREATER),s.render(e),t.depthFunc(t.LESS)}function g(e){t.disable(t.DEPTH_TEST),l.render(e),t.enable(t.DEPTH_TEST)}function u(t){const o=e.matrix();t.push(new game.Frame(m,h,o,0)),n.arrowVisible()&&t.push(new game.Frame(m,g,n.arrowState().dot(o),1)),t.push(new game.Frame(m,c,r.centerMatrix().dot(o),2))}return function(t){const n=[];if(null==m)m=t,u(n);else for(m=Math.max(m,t-1e3);m<t;){const t=r.delta();r.advance(o,t),e.follow(r.position,t),m+=1e3*t,u(n)}return n}},load:function(){const t=document.getElementsByTagName("canvas")[0].getContext("webgl"),e=new game.Ball(.5,new game.geometry.Vector(7,7,7),new game.geometry.Vector(0,0,0)),o=new game.Camera(e.position,0,0,1,1),r=new game.Controller(t,o,e,new game.Hud);r.register(),t.enable(t.DEPTH_TEST),t.enable(t.CULL_FACE);const n=course.compositions.test(),i=new game.collision.Index(e.originSphere().size());i.addTriangles(n.collision);const a=new game.webgl.BasicProgram(t),s=a.renderer(n.model),l=a.renderer(e.originSphere().model(Math.PI/12,new game.model.Color(1,1,1))),m=a.renderer(e.originSphere().model(Math.PI/12,new game.model.Color(1,0,0))),h=new game.webgl.ArrowProgram(t).renderer(game.Controller.ARROW_EXTENTS);new game.Runner(t,game.driver(t,o,i,e,r,s,l,m,h)).start()}};game.geometry.Vector.prototype.negate=function(){return new game.geometry.Vector(-this.x,-this.y,-this.z)},game.geometry.Vector.prototype.add=function(t){return new game.geometry.Vector(this.x+t.x,this.y+t.y,this.z+t.z)},game.geometry.Vector.prototype.subtract=function(t){return new game.geometry.Vector(this.x-t.x,this.y-t.y,this.z-t.z)},game.geometry.Vector.prototype.multiply=function(t){return new game.geometry.Vector(this.x*t,this.y*t,this.z*t)},game.geometry.Vector.prototype.multiplyVector=function(t){return new game.geometry.Vector(this.x*t.x,this.y*t.y,this.z*t.z)},game.geometry.Vector.prototype.divide=function(t){return new game.geometry.Vector(this.x/t,this.y/t,this.z/t)},game.geometry.Vector.prototype.divideVector=function(t){return new game.geometry.Vector(this.x/t.x,this.y/t.y,this.z/t.z)},game.geometry.Vector.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},game.geometry.Vector.prototype.cross=function(t){return new game.geometry.Vector(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)},game.geometry.Vector.prototype.min=function(t){return new game.geometry.Vector(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z))},game.geometry.Vector.prototype.max=function(t){return new game.geometry.Vector(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z))},game.geometry.Vector.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Vector.prototype.floor=function(){return new game.geometry.Vector(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))},game.geometry.Vector.prototype.sqrLength=function(){return this.dot(this)},game.geometry.Vector.prototype.length=function(){return Math.sqrt(this.sqrLength())},game.geometry.Vector.prototype.normalize=function(){return this.divide(this.length())},game.geometry.Vector.prototype.transform=function(t){return game.geometry.Matrix.translation(this).dot(t).translation()},game.geometry.Vector.prototype.planeNormal=function(t,e){return game.geometry.Plane.throughScaled(this,t,e)},game.geometry.Vector.prototype.plane=function(t){return this.planeNormal(t,t.subtract(this))},game.geometry.Vector.prototype.xyMapping=function(){return new game.geometry.Mapping(this.x,this.y)},game.geometry.Vector.prototype.data=function(){return[this.x,this.y,this.z]},game.geometry.Mapping.prototype.rotate90=function(){return new game.geometry.Mapping(-this.v,this.u)},game.geometry.Mapping.prototype.add=function(t){return new game.geometry.Mapping(this.u+t.u,this.v+t.v)},game.geometry.Mapping.prototype.multiply=function(t){return new game.geometry.Mapping(this.u*t,this.v*t)},game.geometry.Mapping.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Mapping.prototype.data=function(){return[this.u,this.v]},game.geometry.Plane.x=function(t){return new game.geometry.Plane(new game.geometry.Vector(1,0,0),t)},game.geometry.Plane.y=function(t){return new game.geometry.Plane(new game.geometry.Vector(0,1,0),t)},game.geometry.Plane.z=function(t){return new game.geometry.Plane(new game.geometry.Vector(0,0,1),t)},game.geometry.Plane.through=function(t,e){return new game.geometry.Plane(e,t.dot(e))},game.geometry.Plane.throughScaled=function(t,e,o){return game.geometry.Plane.through(t,o.divide(e.subtract(t).dot(o)))},game.geometry.Plane.prototype.dot=function(t){return this.normal.dot(t)},game.geometry.Plane.prototype.distance=function(t){return this.dot(t)-this.offset},game.geometry.Plane.prototype.section=function(t){return Math.floor(t/this.offset)},game.geometry.Plane.prototype.cut=function(t){const e=t.map(function(t){return this.dot(t)}.bind(this)),o=e.map(function(t){return this.section(t)}.bind(this)),r=new Map,n=o.reduce((function(t,e){return Math.min(t,e)})),i=o.reduce((function(t,e){return Math.max(t,e)}));for(var a=n;a<=i;a++)r.set(a,[]);for(var s=0;s<t.length;s++){const n=(s+1)%t.length;r.get(o[s]).push(t[s]);for(a=o[s];a<o[n];a++){const o=t[s].interpolate(t[n],((a+1)*this.offset-e[s])/(e[n]-e[s]));r.get(a).push(o),r.get(a+1).push(o)}for(a=o[s];a>o[n];a--){const o=t[s].interpolate(t[n],(a*this.offset-e[s])/(e[n]-e[s]));r.get(a).push(o),r.get(a-1).push(o)}}return r},game.geometry.Matrix.SIZE=4,game.geometry.Matrix.IDENTITY=new game.geometry.Matrix([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),game.geometry.Matrix.projection=function(t,e,o,r){const n=Math.pow(t,2),i=r-o;return new game.geometry.Matrix([Math.sqrt(1/n+1)/e,0,0,0,0,Math.sqrt(n+1)/e,0,0,0,0,1+2*o/i,1,0,0,o*r*-2/i,0])},game.geometry.Matrix.translation=function(t){return new game.geometry.Matrix([1,0,0,0,0,1,0,0,0,0,1,0,t.x,t.y,t.z,1])},game.geometry.Matrix.rotationX=function(t){return new game.geometry.Matrix([1,0,0,0,0,Math.cos(t),Math.sin(t),0,0,-Math.sin(t),Math.cos(t),0,0,0,0,1])},game.geometry.Matrix.rotationY=function(t){return new game.geometry.Matrix([Math.cos(t),0,-Math.sin(t),0,0,1,0,0,Math.sin(t),0,Math.cos(t),0,0,0,0,1])},game.geometry.Matrix.rotationZ=function(t){return new game.geometry.Matrix([Math.cos(t),Math.sin(t),0,0,-Math.sin(t),Math.cos(t),0,0,0,0,1,0,0,0,0,1])},game.geometry.Matrix.indexOf=function(t,e){return game.geometry.Matrix.SIZE*t+e},game.geometry.Matrix.prototype.translation=function(){return new game.geometry.Vector(this.data[game.geometry.Matrix.indexOf(3,0)],this.data[game.geometry.Matrix.indexOf(3,1)],this.data[game.geometry.Matrix.indexOf(3,2)]).divide(this.data[game.geometry.Matrix.indexOf(3,3)])},game.geometry.Matrix.prototype.add=function(t){return new game.geometry.Matrix(this.data.map((function(e,o){return e+t.data[o]})))},game.geometry.Matrix.prototype.dot=function(t){const e=this.data.slice();for(var o=0;o<game.geometry.Matrix.SIZE;o++)for(var r=0;r<game.geometry.Matrix.SIZE;r++){for(var n=0,i=0;i<game.geometry.Matrix.SIZE;i++)n+=this.data[game.geometry.Matrix.indexOf(o,i)]*t.data[game.geometry.Matrix.indexOf(i,r)];e[game.geometry.Matrix.indexOf(o,r)]=n}return new game.geometry.Matrix(e)},game.geometry.Matrix.prototype.multiply=function(t){return new game.geometry.Matrix(this.data.map((function(e){return e*t})))},game.geometry.Matrix.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.model.Color.prototype.add=function(t){return new game.model.Color(this.r+t.r,this.g+t.g,this.b+t.b)},game.model.Color.prototype.subtract=function(t){return new game.model.Color(this.r-t.r,this.g-t.g,this.b-t.b)},game.model.Color.prototype.multiply=function(t){return new game.model.Color(this.r*t,this.g*t,this.b*t)},game.model.Color.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.model.Color.prototype.round=function(){return new game.model.Color(Math.round(this.r),Math.round(this.g),Math.round(this.b))},game.model.Color.prototype.toInt=function(){return this.multiply(255).round()},game.model.Color.prototype.toCss=function(t){return["rgba(",this.r,",",this.g,",",this.b,",",t,")"].join("")},game.model.Color.prototype.glClear=function(t){t.clearColor(this.r,this.g,this.b,1)},game.model.Color.prototype.data=function(){return[this.r,this.g,this.b]},game.model.Path.grid=function(t,e,o){return new game.model.Path((function(e){return new game.model.Path((function(o){return t(e,o)}),o)}),e)},game.model.Path.sphere=function(t,e){return new game.model.Path((function(o){const r=Math.PI*o,n=Math.sin(r);return new game.model.Path((function(e){const o=2*Math.PI*e,i=new game.geometry.Vector(Math.cos(o)*n,Math.sin(o)*n,Math.cos(r));return new game.model.Vertex(i.multiply(t),i)}),Math.ceil(2*Math.PI*n/e))}),Math.ceil(Math.PI/e))},game.model.Path.circle=function(t,e,o){return new game.model.Path((function(o){const r=e*o,n=Math.cos(r),i=Math.sin(r);return new game.model.Vertex(new game.geometry.Vector(t*n,t*i,0),new game.geometry.Vector(-i,n,0))}),o)},game.model.Path.prototype.map=function(t){return new game.model.Path(function(e){return t(this.mapper(e))}.bind(this),this.count)},game.model.Path.prototype.transform=function(t){return this.map((function(e){return e.transform(t)}))},game.model.Path.prototype.negateNormals=function(){return this.map((function(t){return t.negateNormal()}))},game.model.Path.prototype.withNormal=function(t){return this.map((function(e){return e.withNormal(t)}))},game.model.Path.prototype.withColor=function(t){return this.map((function(e){return e.withColor(t)}))},game.model.Path.prototype.enableChecker=function(){return this.map((function(t){return t.enableChecker()}))},game.model.Path.prototype.reverse=function(){return new game.model.Path(function(t){return this.mapper(1-t)}.bind(this),this.count)},game.model.Path.prototype.truncate=function(t){return new game.model.Path(function(e){return this.mapper(e*(1-t/this.count))}.bind(this),this.count-t)},game.model.Path.prototype.waypoints=function(){const t=[];for(var e=0;e<=this.count;e++)t.push(this.mapper(e/Math.max(this.count,1)));return t},game.model.Path.prototype.fan=function(){return game.model.Triangle.fan(this.waypoints())},game.model.Path.prototype.stripe=function(t){return game.model.Triangle.stripe(this.normalizedTo(t.position()).waypoints(),t.normalizedTo(this.position()).negateNormals().waypoints())},game.model.Path.prototype.surface=function(){const t=this.waypoints(),e=[];for(var o,r=0;r<t.length;r++){const n=t[r].waypoints();o&&e.push(game.model.Triangle.stripe(o,n)),o=n}return game.utility.flatten(e)},game.model.Path.prototype.border=function(t,e,o){return new game.model.Path(function(r){const n=this.mapper(r),i=n.normal.cross(n.position.subtract(t.mapper(r))),a=i.cross(n.normal);return n.position.add(a.normalize().multiply(e)).add(i.normalize().multiply(o))}.bind(this),this.count)},game.model.Path.prototype.vertex=function(){return this.map((function(t){return new game.model.Vertex(t)}))},game.model.Path.prototype.position=function(){return this.map((function(t){return t.position}))},game.model.Path.prototype.normalize=function(t){return new game.model.Path(function(e){return this.mapper(e).withNormal(this.mapper(e+t).position.subtract(this.mapper(e-t).position).normalize())}.bind(this),this.count)},game.model.Path.prototype.normalizedTo=function(t){return new game.model.Path(function(e){const o=this.mapper(e);return o.withNormal(o.normal.cross(o.position.subtract(t.mapper(e))).normalize())}.bind(this),this.count)},game.model.Path.prototype.normalizeSurface=function(t){return new game.model.Path(function(e){const o=this.mapper(e),r=this.mapper(e-t),n=this.mapper(e+t);return new game.model.Path((function(e){return o.mapper(e).withNormal(n.mapper(e).position.subtract(r.mapper(e).position).cross(o.mapper(e+t).position.subtract(o.mapper(e-t).position)).normalize())}),o.count)}.bind(this),this.count)},game.model.Vertex.prototype.add=function(t){return new game.model.Vertex(this.position.add(t.position),this.normal.add(t.normal),this.color.add(t.color),this.checker+t.checker)},game.model.Vertex.prototype.subtract=function(t){return new game.model.Vertex(this.position.subtract(t.position),this.normal.subtract(t.normal),this.color.subtract(t.color),this.checker-t.checker)},game.model.Vertex.prototype.transform=function(t){return new game.model.Vertex(this.position.transform(t),this.normal.transform(t).subtract(t.translation()),this.color,this.checker)},game.model.Vertex.prototype.withNormal=function(t){return new game.model.Vertex(this.position,t,this.color,this.checker)},game.model.Vertex.prototype.withColor=function(t){return new game.model.Vertex(this.position,this.normal,t,this.checker)},game.model.Vertex.prototype.enableChecker=function(){return new game.model.Vertex(this.position,this.normal,this.color,!0)},game.model.Vertex.prototype.negateNormal=function(){return new game.model.Vertex(this.position,this.normal.negate(),this.color,this.checker)},game.model.Vertex.prototype.collision=function(t){return new game.collision.Vertex(this.position,t)},game.model.Vertex.prototype.data=function(){return game.utility.flatten([this.position.data(),this.normal.data(),this.color.data(),[this.checker]])},game.model.Triangle.vertices=function(t){return game.utility.flatten(t.map((function(t){return t.vertices()})))},game.model.Triangle.polygon=function(t){const e=[];for(var o=0;o<t.length;o++)t[o].hasOwnProperty("opposite")&&e.push(new game.model.Triangle(t[o].vertex,t[(o+1)%t.length].vertex,t[t[o].opposite].vertex));return e},game.model.Triangle.stripe=function(t,e){const o=[];for(var r=0,n=0;r+1<t.length||n+1<e.length;)(2*r+1)*(e.length-1)>(2*n+1)*(t.length-1)?(o.push(new game.model.Triangle(e[n],t[r],e[n+1])),n++):(o.push(new game.model.Triangle(e[n],t[r],t[r+1])),r++);return o},game.model.Triangle.fan=function(t){const e=[];for(var o=2;o<t.length;o++)e.push(new game.model.Triangle(t[0],t[o-1],t[o]));return e},game.model.Triangle.transform=function(t,e){return t.map((function(t){return t.transform(e)}))},game.model.Triangle.prototype.transform=function(t){return new game.model.Triangle(this.a.transform(t),this.b.transform(t),this.c.transform(t))},game.model.Triangle.prototype.vertices=function(){return[this.a,this.b,this.c]},game.model.Triangle.prototype.collision=function(t){return new game.collision.Triangle(this.a.collision(t),this.b.collision(t),this.c.collision(t))},game.collision.handlers.Collection.prototype.add=function(t){if(this.handlers.length!==t.handlers.length)throw new Error("Different sizes of collections");return new game.collision.handlers.Collection(this.handlers.map((function(e,o){return e.add(t.handlers[o])})))},game.collision.handlers.Collection.prototype.multiply=function(t){return new game.collision.handlers.Collection(this.handlers.map((function(e){return e.multiply(t)})))},game.collision.handlers.Collection.prototype.handle=function(t){this.handlers.forEach((function(e){e.handle(t)}))},game.collision.handlers.Rebound.prototype.restitutes=function(t,e){return e>=Math.max(this.minVelocity,this.minAngle*t)},game.collision.handlers.Rebound.prototype.add=function(t){return new game.collision.handlers.Rebound(this.minVelocity+t.minVelocity,this.minAngle+t.minAngle,this.restitution+t.restitution,this.friction+t.friction)},game.collision.handlers.Rebound.prototype.multiply=function(t){return new game.collision.handlers.Rebound(this.minVelocity*t,this.minAngle*t,this.restitution*t,this.friction*t)},game.collision.handlers.Rebound.prototype.handle=function(t){const e=t.ball,o=t.depth(),r=e.velocity.length(),n=t.direction(),i=-Math.min(e.velocity.dot(n),0);if(this.restitutes(r,i)){const t=i/r;e.addPosition(n.multiply(o*(1+t*this.restitution))),e.addVelocity(n.multiply(2*i)),e.multiplyVelocity(1-t*(1-this.restitution))}else e.addPosition(n.multiply(o)),e.addVelocity(n.multiply(i)),this.applyFriction(e,this.friction*t.delta)},game.collision.handlers.Rebound.prototype.applyFriction=function(t,e){const o=t.velocity.length();t.multiplyVelocity(o>e?1-e/o:0)},game.collision.handlers.Completion.prototype.add=function(t){return this},game.collision.handlers.Completion.prototype.multiply=function(t){return this},game.collision.handlers.Completion.prototype.handle=function(t){this.active||(this.active=!0,alert("Course completed!"))},game.collision.Contact.prototype.depth=function(){return this.ball.radius-this.length},game.collision.Contact.prototype.direction=function(){return this.vector.divide(this.length)},game.collision.Vertex.prototype.transform=function(t){return new game.collision.Vertex(this.position.transform(t),this.handler)},game.collision.Triangle.fromModel=function(t,e){return t.map((function(t){return t.collision(e)}))},game.collision.Triangle.transform=function(t,e){return t.map((function(t){return t.transform(e)}))},game.collision.Triangle.prototype.project=function(t){const e=this.abT.distance(t),o=this.bcT.distance(t),r=this.caT.distance(t),n=Math.min(e,o,r);if(n>=0)return new game.geometry.Vector(o,r,e);if(n==e){const e=game.utility.clamp(this.ab.distance(t),0,1);return new game.geometry.Vector(1-e,e,0)}if(n==o){const e=game.utility.clamp(this.bc.distance(t),0,1);return new game.geometry.Vector(0,1-e,e)}if(n==r){const e=game.utility.clamp(this.ca.distance(t),0,1);return new game.geometry.Vector(e,0,1-e)}},game.collision.Triangle.prototype.interpolatePosition=function(t){return this.a.position.multiply(t.x).add(this.b.position.multiply(t.y)).add(this.c.position.multiply(t.z))},game.collision.Triangle.prototype.interpolateHandler=function(t){return this.a.handler.multiply(t.x).add(this.b.handler.multiply(t.y)).add(this.c.handler.multiply(t.z))},game.collision.Triangle.prototype.vertices=function(){return[this.a,this.b,this.c]},game.collision.Triangle.prototype.positions=function(){return this.vertices().map((function(t){return t.position}))},game.collision.Triangle.prototype.transform=function(t){return new game.collision.Triangle(this.a.transform(t),this.b.transform(t),this.c.transform(t))},game.collision.Sphere.prototype.size=function(){return this.max.subtract(this.min)},game.collision.Sphere.prototype.contains=function(t){return t.subtract(this.center).sqrLength()<this.sqrRadius},game.collision.Sphere.prototype.model=function(t,e){return game.model.Triangle.transform(game.model.Path.sphere(this.radius,t).withColor(e).surface(),game.geometry.Matrix.translation(this.center))},game.collision.Index.key=function(t){return[t.x,t.y,t.z].join(",")},game.collision.Index.prototype.count=function(){var t=0;return this.map.forEach((function(e){t+=e.size})),t},game.collision.Index.prototype.pointCell=function(t){return t.divideVector(this.size).floor()},game.collision.Index.prototype.triangleCells=function(t){const e=[];return game.geometry.Plane.x(this.size.x).cut(t.positions()).forEach(function(t,o){game.geometry.Plane.y(this.size.y).cut(t).forEach(function(t,r){game.geometry.Plane.z(this.size.z).cut(t).forEach((function(t,n){e.push(new game.geometry.Vector(o,r,n))}))}.bind(this))}.bind(this)),e},game.collision.Index.prototype.sphereCells=function(t){const e=[],o=this.pointCell(t.min),r=this.pointCell(t.max),n=this.pointCell(t.center);for(var i=o.x;i<=r.x;i++)for(var a=o.y;a<=r.y;a++)for(var s=o.z;s<=r.z;s++)((i==n.x)+(a==n.y)+(s==n.z)>1||t.contains(new game.geometry.Vector(i+(i<n.x),a+(a<n.y),s+(s<n.z)).multiplyVector(this.size)))&&e.push(new game.geometry.Vector(i,a,s));return e},game.collision.Index.prototype.queryCell=function(t){return this.map.get(game.collision.Index.key(t))},game.collision.Index.prototype.addCell=function(t,e){const o=game.collision.Index.key(t);var r=this.map.get(o);r||(r=new Set,this.map.set(o,r)),r.add(e)},game.collision.Index.prototype.removeCell=function(t,e){const o=game.collision.Index.key(t),r=this.map.get(o);r&&r.delete(e)&&0==r.size&&this.map.delete(o)},game.collision.Index.prototype.queryCells=function(t){const e=new Set;return t.forEach(function(t){const o=this.queryCell(t);o&&o.forEach(e.add.bind(e))}.bind(this)),e},game.collision.Index.prototype.addCells=function(t,e){t.forEach(function(t){this.addCell(t,e)}.bind(this))},game.collision.Index.prototype.removeCells=function(t,e){t.forEach(function(t){this.removeCell(t,e)}.bind(this))},game.collision.Index.prototype.addTriangle=function(t){this.addCells(this.triangleCells(t),t)},game.collision.Index.prototype.addTriangles=function(t){t.forEach(this.addTriangle.bind(this))},game.webgl.BasicProgram.prototype.buildLocations=function(){return{position:this.gl.getAttribLocation(this.program,"aPosition"),normal:this.gl.getAttribLocation(this.program,"aNormal"),color:this.gl.getAttribLocation(this.program,"aColor"),checker:this.gl.getAttribLocation(this.program,"aChecker"),matrix:this.gl.getUniformLocation(this.program,"uMatrix")}},game.webgl.BasicProgram.prototype.buildBuffer=function(t){const e=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(game.utility.flatten(t.map((function(t){return t.data()})))),this.gl.STATIC_DRAW),e},game.webgl.BasicProgram.prototype.render=function(t,e,o){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),game.webgl.interleaveAttribPointer(this.gl,this.gl.FLOAT,Float32Array.BYTES_PER_ELEMENT,[{location:this.locations.position,components:3,normalized:!1},{location:this.locations.normal,components:3,normalized:!1},{location:this.locations.color,components:3,normalized:!1},{location:this.locations.checker,components:1,normalized:!1}]),this.gl.enableVertexAttribArray(this.locations.position),this.gl.enableVertexAttribArray(this.locations.normal),this.gl.enableVertexAttribArray(this.locations.color),this.gl.enableVertexAttribArray(this.locations.checker),this.gl.useProgram(this.program),this.gl.uniformMatrix4fv(this.locations.matrix,!1,o.data),this.gl.drawArrays(this.gl.TRIANGLES,0,e)},game.webgl.BasicProgram.prototype.renderer=function(t){return new game.webgl.BasicRenderer(this,game.model.Triangle.vertices(t))},game.webgl.BasicRenderer.prototype.render=function(t){this.program.render(this.buffer,this.count,t)},game.webgl.ArrowProgram.SHADER_DEFS={INNER_RADIUS:"0.6",HALF_WIDTH:"0.2",TIP_RATIO:"1.75",SECTION_LENGTH:"2.0",SECTION_GAP:"0.075"},game.webgl.ArrowProgram.prototype.buildLocations=function(){return{position:this.gl.getAttribLocation(this.program,"aPosition"),mapping:this.gl.getAttribLocation(this.program,"aMapping"),matrix:this.gl.getUniformLocation(this.program,"uMatrix"),extents:this.gl.getUniformLocation(this.program,"uExtents"),color:this.gl.getUniformLocation(this.program,"uColor")}},game.webgl.ArrowProgram.prototype.buildBuffer=function(t){const e=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(game.utility.flatten([new game.geometry.Vector(-t.v,t.v,0),new game.geometry.Vector(t.v,t.v,0),new game.geometry.Vector(t.v,-Math.max(t.v,t.u),0),new game.geometry.Vector(-t.v,-Math.max(t.v,t.u),0)].map((function(t){return t.data().concat(t.xyMapping().rotate90().data())})))),this.gl.STATIC_DRAW),e},game.webgl.ArrowProgram.prototype.render=function(t,e){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),game.webgl.interleaveAttribPointer(this.gl,this.gl.FLOAT,Float32Array.BYTES_PER_ELEMENT,[{location:this.locations.position,components:3,normalized:!1},{location:this.locations.mapping,components:2,normalized:!1}]),this.gl.enableVertexAttribArray(this.locations.position),this.gl.enableVertexAttribArray(this.locations.mapping),this.gl.useProgram(this.program),this.gl.uniformMatrix4fv(this.locations.matrix,!1,e.matrix.data),this.gl.uniform2fv(this.locations.extents,e.extents.data()),this.gl.uniform3fv(this.locations.color,e.color.data()),this.gl.drawArrays(this.gl.TRIANGLE_FAN,0,4)},game.webgl.ArrowProgram.prototype.renderer=function(t){return new game.webgl.ArrowRenderer(this,t)},game.webgl.ArrowRenderer.prototype.render=function(t){this.program.render(this.buffer,t)},game.webgl.ArrowState.prototype.dot=function(t){return new game.webgl.ArrowState(this.matrix.dot(t),this.extents,this.color)},game.webgl.ArrowState.prototype.interpolate=function(t,e){return new game.webgl.ArrowState(this.matrix.interpolate(t.matrix,e),this.extents.interpolate(t.extents,e),this.color.interpolate(t.color,e))},game.Camera.GRAVITY=10,game.Camera.prototype.follow=function(t,e){this.position=t.interpolate(this.position,Math.exp(-e*game.Camera.GRAVITY))},game.Camera.prototype.matrix=function(){return game.geometry.Matrix.translation(this.position.negate()).dot(game.geometry.Matrix.rotationZ(-this.pan)).dot(game.geometry.Matrix.rotationX(-this.tilt-Math.PI/2)).dot(game.geometry.Matrix.translation(new game.geometry.Vector(0,0,1).multiply(50*this.zoom))).dot(game.geometry.Matrix.projection(this.ratio,1,1,2e4))},game.Frame.comparingDepth=function(t,e){return t.depth-e.depth},game.Frame.prototype.interpolateTimestamp=function(t,e){return this.interpolate(t,(e-this.timestamp)/(t.timestamp-this.timestamp))},game.Frame.prototype.interpolate=function(t,e){return new game.Frame(game.utility.interpolate(this.timestamp,t.timestamp,e),this.renderer,this.state.interpolate(t.state,e),game.utility.interpolate(this.depth,t.depth,e))},game.Frame.prototype.render=function(){this.renderer(this.state)},game.Runner.BACKGROUND_COLOR=new game.model.Color(.1,.1,.1),game.Runner.applyBackgroundColor=function(t,e){t.style.setProperty("background-color",game.Runner.BACKGROUND_COLOR.toInt().toCss(e))},game.Runner.prototype.start=function(){window.requestAnimationFrame(this.callback)},game.Runner.prototype.run=function(t){game.Runner.BACKGROUND_COLOR.glClear(this.gl),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.drive(t),this.render(t),this.start()},game.Runner.prototype.drive=function(t){this.driver(t).forEach(function(t){var e=this.queue.get(t.renderer);for(e||(e=[],this.queue.set(t.renderer,e));e.length>0&&e[e.length-1].timestamp>=t.timestamp;)e.pop();e.push(t)}.bind(this))},game.Runner.prototype.render=function(t){const e=[];this.queue.forEach((function(o,r){for(;o.length>1&&o[1].timestamp<=t;)o.splice(0,1);o.length>1?e.push(o[0].interpolateTimestamp(o[1],t)):o.length>0?o[0].timestamp==t&&e.push(o[0]):this.queue.delete(r)})),e.sort(game.Frame.comparingDepth).forEach((function(t){t.render()}))},game.Controller.CAMERA_SENSITIVITY=.005,game.Controller.CAMERA_TILT_RANGE=.4*Math.PI,game.Controller.ARROW_SENSITIVITY=.01,game.Controller.ARROW_RADIUS=1,game.Controller.ARROW_LENGTH_MIN=game.Controller.ARROW_RADIUS*(1+parseFloat(game.webgl.ArrowProgram.SHADER_DEFS.TIP_RATIO)*parseFloat(game.webgl.ArrowProgram.SHADER_DEFS.HALF_WIDTH)),game.Controller.ARROW_SECTION_COUNT=4,game.Controller.ARROW_LENGTH_MAX=game.Controller.ARROW_RADIUS*(parseFloat(game.webgl.ArrowProgram.SHADER_DEFS.INNER_RADIUS)+game.Controller.ARROW_SECTION_COUNT*parseFloat(game.webgl.ArrowProgram.SHADER_DEFS.SECTION_LENGTH)),game.Controller.ARROW_EXTENTS=new game.geometry.Mapping(game.Controller.ARROW_LENGTH_MAX,game.Controller.ARROW_RADIUS),game.Controller.ARROW_COLOR_MIN=new game.model.Color(1,1,0),game.Controller.ARROW_COLOR_MAX=new game.model.Color(1,0,0),game.Controller.ARROW_HIT_MIN=2,game.Controller.ARROW_HIT_MAX=90,game.Controller.prototype.arrowHide=function(){this.arrow=null},game.Controller.prototype.arrowVisible=function(){return this.ball.resting()||this.arrowHide(),null!=this.arrow},game.Controller.prototype.arrowState=function(){return new game.webgl.ArrowState(game.geometry.Matrix.rotationZ(this.camera.pan).dot(this.ball.floorMatrix()),new game.geometry.Mapping(game.utility.interpolate(game.Controller.ARROW_LENGTH_MIN,game.Controller.ARROW_LENGTH_MAX,this.arrow),game.Controller.ARROW_RADIUS),game.Controller.ARROW_COLOR_MIN.interpolate(game.Controller.ARROW_COLOR_MAX,this.arrow))},game.Controller.prototype.handleResize=function(){const t=this.gl.canvas.clientWidth*window.devicePixelRatio,e=this.gl.canvas.clientHeight*window.devicePixelRatio;this.gl.canvas.width=t,this.gl.canvas.height=e,this.gl.viewport(0,0,t,e),this.camera.ratio=t/e},game.Controller.prototype.handleMouseMove=function(t){this.camera.pan=game.utility.modPositive(this.camera.pan+game.Controller.CAMERA_SENSITIVITY*t.movementX,2*Math.PI),this.arrowVisible()?this.arrow=game.utility.clamp(this.arrow-game.Controller.ARROW_SENSITIVITY*t.movementY,0,1):this.camera.tilt=game.utility.clamp(this.camera.tilt+game.Controller.CAMERA_SENSITIVITY*t.movementY,-game.Controller.CAMERA_TILT_RANGE,game.Controller.CAMERA_TILT_RANGE)},game.Controller.prototype.handleWheel=function(t){this.camera.zoom=game.utility.clamp(this.camera.zoom*Math.pow(1.002,t.deltaY),.1,10)},game.Controller.prototype.handleLockedClick=function(t){2==t.button&&(this.arrowVisible()?this.arrowHide():document.exitPointerLock())},game.Controller.prototype.handleLockedMouseDown=function(t){0==t.button&&this.ball.resting()&&(this.arrow=0)},game.Controller.prototype.handleLockedMouseUp=function(t){if(0==t.button&&this.arrowVisible()){const t=this.arrow*game.Controller.ARROW_HIT_MAX;t>=game.Controller.ARROW_HIT_MIN&&(this.ball.hit(this.camera.pan,t),this.hud.strokes++,this.hud.updateStrokes()),this.arrowHide()}},game.Controller.prototype.handleUnlockedClick=function(){this.gl.canvas.requestPointerLock({unadjustedMovement:!0}).catch((function(t){}))},game.Controller.prototype.register=function(){this.handleResize(),window.addEventListener("resize",this.handleResize.bind(this)),document.addEventListener("pointerlockchange",function(){document.pointerLockElement?(window.removeEventListener("click",this.unlockedClickHandler),window.addEventListener("mousemove",this.mouseMoveHandler),window.addEventListener("wheel",this.wheelHandler),window.addEventListener("click",this.lockedClickHandler),window.addEventListener("mousedown",this.lockedMouseDownHandler),window.addEventListener("mouseup",this.lockedMouseUpHandler)):(window.removeEventListener("mousemove",this.mouseMoveHandler),window.removeEventListener("wheel",this.wheelHandler),window.removeEventListener("click",this.lockedClickHandler),window.removeEventListener("mousedown",this.lockedMouseDownHandler),window.removeEventListener("mouseup",this.lockedMouseUpHandler),window.addEventListener("click",this.unlockedClickHandler))}.bind(this)),window.addEventListener("click",this.unlockedClickHandler)},game.Hud.prototype.updateStrokes=function(){const t=document.getElementById("strokes");game.Runner.applyBackgroundColor(t,.5),t.innerText=this.strokes},game.Ball.GRAVITY=196.2,game.Ball.RESTING_THRESHOLD=2,game.Ball.RESTING_THRESHOLD_SQR=Math.pow(game.Ball.RESTING_THRESHOLD,2),game.Ball.prototype.delta=function(){return.005},game.Ball.prototype.addPosition=function(t){this.position=this.position.add(t)},game.Ball.prototype.addVelocity=function(t){this.velocity=this.velocity.add(t)},game.Ball.prototype.multiplyVelocity=function(t){this.velocity=this.velocity.multiply(t)},game.Ball.prototype.resting=function(){return this.velocity.sqrLength()<game.Ball.RESTING_THRESHOLD_SQR},game.Ball.prototype.advance=function(t,e){this.applyVelocity(e),this.resolveNearest(t,e),this.applyGravity(e)},game.Ball.prototype.applyVelocity=function(t){this.addPosition(this.velocity.multiply(t))},game.Ball.prototype.applyGravity=function(t){this.addVelocity(new game.geometry.Vector(0,0,-game.Ball.GRAVITY*t))},game.Ball.prototype.hit=function(t,e){this.addVelocity(new game.geometry.Vector(0,-e,0).transform(game.geometry.Matrix.rotationZ(t)))},game.Ball.prototype.resolveNearest=function(t,e){var o;t.queryCells(t.sphereCells(this.sphere())).forEach(function(t){const e={};e.triangle=t,e.coordinates=t.project(this.position),e.position=t.interpolatePosition(e.coordinates),e.vector=this.position.subtract(e.position),e.length=e.vector.length(),(!o||o.length>e.length)&&(o=e)}.bind(this)),o&&o.length<this.radius&&o.triangle.interpolateHandler(o.coordinates).handle(new game.collision.Contact(this,o.position,o.vector,o.length,e))},game.Ball.prototype.sphere=function(){return new game.collision.Sphere(this.position,this.radius)},game.Ball.prototype.originSphere=function(){return new game.collision.Sphere(new game.geometry.Vector(0,0,0),this.radius)},game.Ball.prototype.centerMatrix=function(){return game.geometry.Matrix.translation(this.position)},game.Ball.prototype.floorMatrix=function(){return game.geometry.Matrix.translation(this.position.subtract(new game.geometry.Vector(0,0,this.radius)))},game.Body.fromModel=function(t,e){return new game.Body(t,game.collision.Triangle.fromModel(t,e))},game.Body.prototype.merge=function(t){return new game.Body(this.model.concat(t.model),this.collision.concat(t.collision))},game.Body.prototype.transform=function(t){return new game.Body(game.model.Triangle.transform(this.model,t),game.collision.Triangle.transform(this.collision,t))},window.addEventListener("load",game.load);