const game={utility:{collection:{map:{entries:function(t){const e=[];return t.forEach((function(t,r){e.push([r,t])})),e},keys:function(t){const e=[];return t.forEach((function(t,r){e.push(r)})),e},object:function(t){const e={};return t.forEach((function(t,r){e[r]=t})),e},comparingKeys:function(t){return game.utility.comparators.mapped(t,(function(t){return t[0]}))},setNew:function(t,e,r){game.utility.assert(!t.has(e),"Key already exists"),t.set(e,r)},deleteExisting:function(t,e){game.utility.assert(t.delete(e),"Key does not exist")}},set:{addNew:function(t,e){game.utility.assert(!t.has(e),"Value already exists"),t.add(e)},deleteExisting:function(t,e){game.utility.assert(t.delete(e),"Value does not exist")}},values:function(t){const e=[];return t.forEach((function(t){e.push(t)})),e}},json:{isBoolean:function(t){return"boolean"==typeof t},isNumber:function(t){return Number.isFinite(t)},isString:function(t){return"string"==typeof t},isArray:function(t){return Array.isArray(t)},isObject:function(t){return"object"==typeof t&&!Array.isArray(t)&&null!==t},isPrimitive:function(t){return null===t||game.utility.json.isBoolean(t)||game.utility.json.isNumber(t)||game.utility.json.isString(t)},isAny:function(t){return game.utility.json.isArray(t)||game.utility.json.isObject(t)||game.utility.json.isPrimitive(t)}},random:{integer:function(t){return Math.floor(t*Math.random())},integerRange:function(t,e){return t+game.utility.random.integer(e-t)},closedRange:function(t,e){return game.utility.random.integerRange(t,e+1)},range:function(t,e){return t+(e-t)*Math.random()},character:function(t){return t.charAt(game.utility.random.integer(t.length))},string:function(t,e){return game.utility.array.generate((function(){return game.utility.random.character(t)}),e).join("")},generate:function(t,e){do{var r=t()}while(!e(r));return r}},comparators:{default:function(t,e){return t<e?-1:t>e?1:0},mapped:function(t,e){return function(r,n){return t(e(r),e(n))}},ordered:function(t){return function(e,r){for(var n=0;n<t.length;n++){const i=t[n](e,r);if(0!=i)return i}return 0}}},object:{inherited:function(t){const e={};for(var r in t)e[r]=t[r];return e},entries:function(t){return Object.keys(t).map((function(e){return[e,t[e]]}))},collect:function(t){const e={};return t.forEach((function(t){e[t[0]]=t[1]})),e},merge:function(t){return game.utility.object.collect(game.utility.array.flatten(t.map(game.utility.object.entries)))},mapValues:function(t,e){return game.utility.object.collect(game.utility.object.entries(t).map((function(t){return[t[0],e(t[1])]})))},filterKey:function(t,e){return game.utility.object.collect(game.utility.object.entries(t).filter((function(t){return t[0]!==e})))}},array:{assignLastN:function(t,e,r){t[t.length-e]=r},assignLast:function(t,e){game.utility.array.assignLastN(t,1,e)},lastN:function(t,e){return game.utility.assert(e>0&&e<=t.length,"Out of bounds"),t[t.length-e]},last:function(t){return game.utility.array.lastN(t,1)},pushFirst:function(t){return t.push(t[0]),t},equals:function(t,e,r){return 0==r?t===e:t.length==e.length&&t.every((function(t,n){return game.utility.array.equals(t,e[n],r-1)}))},flatten:function(t){const e=[];return t.forEach((function(t){t.forEach((function(t){e.push(t)}))})),e},minOrNull:function(t){return(t=t.filter((function(t){return null!==t}))).length>0?t.reduce((function(t,e){return Math.min(t,e)})):null},binarySearch:function(t,e){for(var r=0,n=t.length;r<n;){const i=Math.floor((r+n)/2);e(t[i])?r=i+1:n=i}return r},groupBy:function(t,e){const r=new Map;return t.forEach((function(t){const n=e(t);r.has(n)||r.set(n,[]),r.get(n).push(t)})),r},generate:function(t,e){const r=[];for(var n=0;n<e;n++)r.push(t(n));return r}},func:{identity:function(t){return t},constant:function(t){return function(){return t}},lazy:function(t){const e=[];return function(){return 0==e.length&&e.push(t()),e[0]}},concat:function(t){return function(){t.forEach(function(t,e){e.apply(this,t)}.bind(this,arguments))}},mapArgs:function(t,e){return function(){return t.apply(this,e(Array.prototype.slice.call(arguments)))}}},angle:{degToRad:function(t){return t*game.utility.angle.DEG_RAD_RATIO},radToDeg:function(t){return t/game.utility.angle.DEG_RAD_RATIO},DEG_RAD_RATIO:Math.PI/180},assert:function(t,e){if(!t)throw new Error(e)},discriminate:function(t,e,r,n){const i=new Map;return t.forEach((function(t){const r=e(t);var n=i.get(r);n||(n=[],i.set(r,n)),n.push(t)})),game.utility.collection.map.entries(i).sort(game.utility.collection.map.comparingKeys(r)).map((function(t){return t[1].sort(n)}))},interpolate:function(t,e,r){return t*(1-r)+e*r},clamp:function(t,e,r){return Math.min(Math.max(t,e),r)},towardsZero:function(t,e){return game.utility.assert(e>=0,"Offset must be non-negative"),t<-e?t+e:t>e?t-e:0},modPositive:function(t,e){return t-Math.floor(t/e)*e},parseNumber:function(t,e){const r=t(e);return game.utility.assert(!Number.isNaN(r)&&r.toString()===e,"Invalid number"),r}},geometry:{Vector:function(t,e,r){this.x=t,this.y=e,this.z=r},Mapping:function(t,e){this.u=t,this.v=e},Plane:function(t,e){this.normal=t,this.offset=e},Matrix:function(t){this.data=t}},model:{Color:function(t,e,r){this.r=t,this.g=e,this.b=r},Path:function(t,e){this.mapper=t,this.counter=e},Vertex:function(t,e){this.position=t,this.normal=e},Triangle:function(t,e,r,n){this.a=t,this.b=e,this.c=r,this.type=n,game.utility.assert(!this.degenerate(),"Degenerate triangle")}},collision:{handlers:{collection:function(t){return function(e){return t.forEach((function(t){e=e.withBall(t(e))})),e.ball}},rebound:function(t,e,r,n,i){return function(a){const o=a.ball.motion.velocity,s=a.direction(),m=Math.max(-o.dot(s),0),c=e*o.length(),u=Math.max(t,c),g=Math.max(m-c,0)*r,l=(1-u/Math.max(m,u))*r;return a.ball.addMotion(new game.physics.Motion(s.multiply(a.depth()*(1+l)),s.multiply(m+g).subtract(function(t,e,r){const a=t.add(e.multiply(r)),o=i*Math.max(r,n),s=o/Math.max(a.length(),o);return a.multiply(s)}(o,s,m))))}},motionRelative:function(t){return function(e){return t(new game.collision.Contact(e.ball.addVelocity(e.motion.velocity.negate()),new game.physics.Motion(e.motion.position,new game.geometry.Vector(0,0,0)),e.vector,e.length)).addVelocity(e.motion.velocity)}},ballCompletion:function(t){return t.ball.complete()}},Contact:function(t,e,r,n){this.ball=t,this.motion=e,this.vector=r,this.length=n},Triangle:function(t,e,r,n){this.a=t,this.b=e,this.c=r,this.ab=t.plane(e),this.bc=e.plane(r),this.ca=r.plane(t);const i=this.ab.normal.cross(this.bc.normal);this.abT=t.planeNormal(r,i.cross(this.ab.normal)),this.bcT=e.planeNormal(t,i.cross(this.bc.normal)),this.caT=r.planeNormal(e,i.cross(this.ca.normal)),this.handler=n},Sphere:function(t,e){this.center=t,this.radius=e,this.sqrRadius=Math.pow(e,2);const r=new game.geometry.Vector(e,e,e);this.min=t.subtract(r),this.max=t.add(r)},Index:function(t){this.size=t,this.bounds=[],this.map=new Map},Part:function(t,e){this.index=t,this.animation=e},Body:function(t){this.parts=t}},physics:{Motion:function(t,e){this.position=t,this.velocity=e},Ball:function(t,e,r,n){this.motion=t,this.deltas=e,this.resting=r,this.properties=n},Animation:function(t,e){this.id=t,this.mapper=e},Part:function(t,e,r,n){this.model=t,this.collision=e,this.animation=r,this.body=n},Body:function(t){this.parts=t},Course:function(t,e){this.origin=t,this.body=e},Material:function(t,e){this.type=t,this.collision=e},Generator:function(t,e){this.constraint=t,this.handler=e},Processor:function(t,e){this.mappers=t,this.parent=e,this.resolved=new Set}},constraints:{string:{lengthAtLeast:function(t){return function(e){return e.length>=t}},lengthAtMost:function(t){return function(e){return e.length<=t}},charsFrom:function(t){return function(e){for(var r=0;r<e.length;r++)if(t.indexOf(e[r])<0)return!1;return!0}},with:function(t,e,r){return game.constraints.allMatch([game.utility.json.isString,game.constraints.string.lengthAtLeast(t),game.constraints.string.lengthAtMost(e),game.constraints.string.charsFrom(r)])},PLAYER_KEY_CHARS:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",PLAYER_KEY_LENGTH:16,PLAYER_NAME_CHARS:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz",PLAYER_NAME_MAX_LENGTH:16,SESSION_KEY_CHARS:"abcdefghijklmnopqrstuvwxyz",SESSION_KEY_LENGTH:8},number:{isInteger:function(t){return Number.isInteger(t)},isIntegerWith:function(t){return game.constraints.allMatch([game.constraints.number.isInteger,t])},isFloat:function(t){return Number.isFinite(t)},inRange:function(t,e){return function(r){return r>=t&&r<=e}},inFloatRange:function(t,e){return game.constraints.number.inRange(t/game.constraints.number.FLOAT_TOLERANCE,e*game.constraints.number.FLOAT_TOLERANCE)},isFloatWith:function(t){return game.constraints.allMatch([game.constraints.number.isFloat,t])},isAtLeast:function(t){return function(e){return e>=t}},PLAYER_ID_MIN_EXP:2,FLOAT_TOLERANCE:1.000001},array:{isArrayWith:function(t){return game.constraints.allMatch([game.utility.json.isArray,t])},hasLength:function(t){return function(e){return e.length==t}},hasElements:function(t){return function(e){return t.every((function(t,r){return t(e[r])}))}},hasElementsExactly:function(t){return game.constraints.allMatch([game.constraints.array.hasLength(t.length),game.constraints.array.hasElements(t)])},withElementsExactly:function(t){return game.constraints.array.isArrayWith(game.constraints.array.hasElementsExactly(t))},withLengthElements:function(t,e){return game.constraints.array.isArrayWith(game.constraints.allMatch([game.constraints.array.hasLength(e),game.constraints.array.allElements(t)]))},allElements:function(t){return function(e){return e.every((function(e){return t(e)}))}},isDistinctBy:function(t){return function(e){return new Set(e.map(t)).size==e.length}},andDistinctBy:function(t,e){return game.constraints.allMatch([t,game.constraints.array.isDistinctBy(e)])},tableDistinctBy:function(t,e){return game.constraints.array.isArrayWith(game.constraints.array.andDistinctBy(game.constraints.array.allElements(game.constraints.array.withElementsExactly(t)),e))}},object:{isObjectWith:function(t){return game.constraints.allMatch([game.utility.json.isObject,t])},hasNumberOfFields:function(t){return function(e){return Object.keys(e).length==t}},hasKey:function(t){return function(e){return e.hasOwnProperty(t)}},hasValue:function(t,e){return function(r){return e(r[t])}},hasField:function(t,e){return game.constraints.allMatch([game.constraints.object.hasKey(t),game.constraints.object.hasValue(t,e)])},hasFieldOptional:function(t,e){return game.constraints.anyMatch([game.constraints.not(game.constraints.object.hasKey(t)),game.constraints.object.hasValue(t,e)])},hasFields:function(t){return game.constraints.allMatch(Object.keys(t).map((function(e){return game.constraints.object.hasField(e,t[e])})))},hasFieldsOnly:function(t){return function(e){return Object.keys(e).every((function(e){return t.has(e)}))}},withFields:function(t){return game.constraints.object.isObjectWith(game.constraints.object.hasFields(t))},hasFieldsExactly:function(t){return game.constraints.allMatch([game.constraints.object.hasNumberOfFields(Object.keys(t).length),game.constraints.object.hasFields(t)])},withFieldsExactly:function(t){return game.constraints.object.isObjectWith(game.constraints.object.hasFieldsExactly(t))},hasFieldsOptional:function(t){const e=Object.keys(t);return game.constraints.allMatch([game.constraints.object.hasFieldsOnly(new Set(e))].concat(e.map((function(e){return Array.isArray(t[e])?(game.utility.assert(1==t[e].length,"Exactly one element expected for an optional field"),game.constraints.object.hasFieldOptional(e,t[e][0])):game.constraints.object.hasField(e,t[e])}))))},withFieldsOptional:function(t){return game.constraints.object.isObjectWith(game.constraints.object.hasFieldsOptional(t))}},alwaysTrue:function(){return!0},allMatch:function(t){return function(e){return t.every((function(t){return t(e)}))}},anyMatch:function(t){return function(e){return t.some((function(t){return t(e)}))}},not:function(t){return function(e){return!t(e)}},equals:function(t){return function(e){return e===t}},contains:function(t){return function(e){return t.has(e)}}},network:{Procedure:function(t,e){this.name=t,this.constraints=e},Call:function(t,e){this.procedure=t,this.params=t.validate(e)},Parser:function(t){this.procedures=t,this.constraint=this.buildConstraint()},Player:function(t,e,r,n,i){this.id=t,this.key=e,this.name=r,this.rating=n,this.timestamps=i},PlayerState:function(t,e,r,n,i){this.player=t,this.ball=e,this.strength=r,this.strokes=n,this.left=i},PlayerResult:function(t,e,r,n){this.player=t,this.strokes=e,this.left=r,this.rating=n},Frame:function(t,e,r,n,i){this.index=t,this.timestamp=e,this.totalTime=r,this.endTime=n,this.playerActions=i},require:function(t,e,r){return game.utility.assert(e(t),r),t},DOMAIN:"4u7lyzh3h0kf7v5d.myfritz.net",PORT:43384},timing:{assertTicks:function(t){game.utility.assert(Number.isInteger(t),"Not an integer")},sToMs:function(t){return t*game.timing.MS_PER_S},sToTicks:function(t){return Math.round(t*game.timing.TICKS_PER_S)},sToTicksGap:function(t){return Math.max(game.timing.sToTicks(t),game.timing.TICKS_PER_GAP)},ticksToS:function(t){return game.timing.assertTicks(t),t/game.timing.TICKS_PER_S},ticksToMs:function(t){return game.timing.sToMs(game.timing.ticksToS(t))},msToS:function(t){return t/game.timing.MS_PER_S},msToTicks:function(t){return game.timing.sToTicks(game.timing.msToS(t))},nowTicks:function(t){return Math.max(game.timing.msToTicks(performance.now()-t),0)},nowS:function(t){return Math.max(game.timing.msToS(performance.now()-t),0)},driver:function(t,e,r,n){return new game.state.drivers.Referable(new game.state.drivers.Conditional(new game.state.drivers.Conditional(new game.state.drivers.Timer(e),t,(function(t,e){return t.time>=game.timing.GAME_START_DURATION&&t.time<=game.timing.PLAYABLE_END&&!n(e)})),new game.state.drivers.Timer(r),(function(t,e){return!t.satisfied&&t.unconditionalDriver.time>=game.timing.GAME_START_DURATION})))},playerDriver:function(t){return new game.state.drivers.Player(t,(function(t){return t.unconditionalDriver.unconditionalDriver.time}))},isPlayable:function(t){return t>=game.timing.GAME_START_DURATION&&t<=game.timing.PLAYABLE_END},GAME_START_DURATION:5,GAME_END_DURATION:3,PLAYABLE_DURATION:120,NORMAL_DELTA:.02,TICKS_PER_S:1e4,TICKS_PER_GAP:1,MS_PER_S:1e3},state:{drivers:{Player:function(t,e){this.state=t,this.time=e},Camera:function(t,e,r){this.driver=t,this.camera=e,this.position=r},RendererOverride:function(t,e){this.driver=t,this.fRenderer=e},Timer:function(t){this.time=t},Conditional:function(t,e,r){this.unconditionalDriver=t,this.conditionalDriver=e,this.condition=r,this.satisfied=r(t,e)},Multi:function(t){this.drivers=t},Data:function(t){this.data=t},Referable:function(t){this.driver=t},idle:{delta:function(){return game.timing.NORMAL_DELTA},drive:function(t){return this}}},renderers:{Optional:function(t){this.renderer=t},Wrapper:function(t,e){this.geometry=t,this.fRenderer=e},Multi:function(t){this.renderers=t},void:{dot:function(t){return this},interpolate:function(t,e){return game.utility.assert(this===t,"Should be both void"),this},render:function(){}},cross:function(t,e,r,n){return t.interpolate(e.interpolate(r,1/n),n)}},actions:{constant:function(t){return function(){return t}},conditional:function(t,e){return function(r){return e(r)?t(r):r}},ifExisting:function(t,e){return function(r){return(r?t:e)(r)}},illegal:function(t){throw new Error("Illegal action")},merge:function(t){return function(e){return t.forEach((function(t){e=t(e)})),e}},dynamic:function(t){return function(e){return t(e)(e)}}},updaters:{TimeEvent:function(){this.events=[]},IndexEvent:function(){this.events=[]},TimeSync:function(){this.syncs=[]},driver:function(t){t.push(game.utility.array.last(t).drive())},multi:function(t){return function(e){t.forEach((function(t){t(e)}))}},indexPruner:function(t,e,r){return function(n){game.state.Frame.pruneIndex(n,t(n),e,r)}},timestampPruner:function(t,e,r){return function(n){game.state.Frame.pruneTimestamp(n,t(n),e,r)}},ifLastChanged:function(t,e){return function(r){const n=game.utility.array.last(r);t(r);n!=game.utility.array.last(r)&&e(r)}},extrapolate:function(t){if(t.length>=3){const e=game.utility.array.last(t),r=game.utility.array.lastN(t,2),n=game.utility.array.lastN(t,3);game.utility.array.assignLastN(t,2,r.rendererOverride(game.utility.func.constant(game.state.renderers.cross(r.renderer(),n.renderer(),e.renderer(),2))))}},smoother:function(t,e,r,n){var i;function a(t){const r=game.utility.array.last(t),a=r.timestamp+game.timing.TICKS_PER_GAP;!function(t){for(;game.utility.array.last(i).timestamp<t;)e(i)}(a);const o=game.state.Frame.findByTimestamp(i,r.timestamp);game.utility.assert(o<i.length,"Not enough frames for interpolation");const s=i[o].timestamp<a?o+1:o;game.utility.assert(s<i.length,"Not enough frames for smoothing");const m=i[s];var c,u;game.utility.assert(m.timestamp>=a,"Gap not satisfied"),t.push(new game.state.Frame(r.index+1,m.timestamp,new game.state.drivers.RendererOverride(m.driver,game.utility.func.constant(game.state.renderers.cross((c=r,i[u=o].timestamp==c.timestamp?i[u].renderer():(game.utility.assert(u>0,"Inner frames are ahead"),i[u-1].interpolateRenderer(i[u],c.timestamp))),r.renderer(),m.renderer(),function(t,e){return Math.pow(n,game.timing.ticksToS(e.timestamp-t.timestamp))+1}(r,m))))))}return function(e){i||(i=e.slice()),t(i),a(e),r(i),e.splice(0,e.length-2)}}},TimeEvent:function(t,e){this.timestamp=t,this.action=e},IndexEvent:function(t,e){this.index=t,this.action=e},TimeSync:function(t,e){this.index=t,this.timestamp=e},Frame:function(t,e,r){this.index=t,this.timestamp=e,this.driver=r},Trace:function(t,e){this.frames=[t],this.updater=e}}};game.utility.collection.map.KEY_COMPARATOR=game.utility.comparators.mapped(game.utility.comparators.default,(function(t){return t[0]})),game.geometry.Vector.fromData=function(t){return new game.geometry.Vector(t[0],t[1],t[2])},game.geometry.Vector.fromXyz=function(t){return new game.geometry.Vector(t.x,t.y,t.z)},game.geometry.Vector.prototype.negate=function(){return new game.geometry.Vector(-this.x,-this.y,-this.z)},game.geometry.Vector.prototype.add=function(t){return new game.geometry.Vector(this.x+t.x,this.y+t.y,this.z+t.z)},game.geometry.Vector.prototype.subtract=function(t){return new game.geometry.Vector(this.x-t.x,this.y-t.y,this.z-t.z)},game.geometry.Vector.prototype.multiply=function(t){return new game.geometry.Vector(this.x*t,this.y*t,this.z*t)},game.geometry.Vector.prototype.multiplyVector=function(t){return new game.geometry.Vector(this.x*t.x,this.y*t.y,this.z*t.z)},game.geometry.Vector.prototype.divide=function(t){return new game.geometry.Vector(this.x/t,this.y/t,this.z/t)},game.geometry.Vector.prototype.divideVector=function(t){return new game.geometry.Vector(this.x/t.x,this.y/t.y,this.z/t.z)},game.geometry.Vector.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},game.geometry.Vector.prototype.cross=function(t){return new game.geometry.Vector(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)},game.geometry.Vector.prototype.componentWise=function(t,e){return new game.geometry.Vector(e(this.x,t.x),e(this.y,t.y),e(this.z,t.z))},game.geometry.Vector.prototype.min=function(t){return this.componentWise(t,Math.min)},game.geometry.Vector.prototype.max=function(t){return this.componentWise(t,Math.max)},game.geometry.Vector.prototype.towardsZero=function(t){return this.componentWise(t,game.utility.towardsZero)},game.geometry.Vector.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Vector.prototype.floor=function(){return new game.geometry.Vector(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))},game.geometry.Vector.prototype.sqrLength=function(){return this.dot(this)},game.geometry.Vector.prototype.length=function(){return Math.sqrt(this.sqrLength())},game.geometry.Vector.prototype.normalize=function(){return this.divide(this.length())},game.geometry.Vector.prototype.short=function(){return this.sqrLength()<game.geometry.SQR_EPSILON},game.geometry.Vector.prototype.transform=function(t){return game.geometry.Matrix.translation(this).dot(t).translation()},game.geometry.Vector.prototype.planeNormal=function(t,e){return game.geometry.Plane.throughScaled(this,t,e)},game.geometry.Vector.prototype.plane=function(t){return this.planeNormal(t,t.subtract(this))},game.geometry.Vector.prototype.xyMapping=function(){return new game.geometry.Mapping(this.x,this.y)},game.geometry.Vector.prototype.toShader=function(){return["vec3(",this.x.toExponential(),", ",this.y.toExponential(),", ",this.z.toExponential(),")"].join("")},game.geometry.Vector.prototype.data=function(){return[this.x,this.y,this.z]},game.geometry.Mapping.random=function(){return new game.geometry.Mapping(Math.random(),Math.random())},game.geometry.Mapping.angle=function(t){return new game.geometry.Mapping(Math.cos(t),Math.sin(t))},game.geometry.Mapping.rotator=function(t){const e=game.geometry.Mapping.angle(t),r=e.rotate90();return function(t){return t.multiply2(e,r)}},game.geometry.Mapping.prototype.angle=function(){return Math.atan2(this.v,this.u)},game.geometry.Mapping.prototype.rotate90=function(){return new game.geometry.Mapping(-this.v,this.u)},game.geometry.Mapping.prototype.negate=function(){return new game.geometry.Mapping(-this.u,-this.v)},game.geometry.Mapping.prototype.add=function(t){return new game.geometry.Mapping(this.u+t.u,this.v+t.v)},game.geometry.Mapping.prototype.subtract=function(t){return new game.geometry.Mapping(this.u-t.u,this.v-t.v)},game.geometry.Mapping.prototype.multiply=function(t){return new game.geometry.Mapping(this.u*t,this.v*t)},game.geometry.Mapping.prototype.multiply2=function(t,e){return t.multiply(this.u).add(e.multiply(this.v))},game.geometry.Mapping.prototype.multiplyMapping=function(t){return new game.geometry.Mapping(this.u*t.u,this.v*t.v)},game.geometry.Mapping.prototype.divide=function(t){return new game.geometry.Mapping(this.u/t,this.v/t)},game.geometry.Mapping.prototype.dot=function(t){return this.u*t.u+this.v*t.v},game.geometry.Mapping.prototype.sqrLength=function(){return this.dot(this)},game.geometry.Mapping.prototype.length=function(){return Math.sqrt(this.sqrLength())},game.geometry.Mapping.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Mapping.prototype.interpolateMapping=function(t,e){return this.add(t.subtract(this).multiplyMapping(e))},game.geometry.Mapping.prototype.toShader=function(){return["vec2(",this.u.toExponential(),", ",this.v.toExponential(),")"].join("")},game.geometry.Mapping.prototype.data=function(){return[this.u,this.v]},game.geometry.Plane.x=function(t){return new game.geometry.Plane(new game.geometry.Vector(1,0,0),t)},game.geometry.Plane.y=function(t){return new game.geometry.Plane(new game.geometry.Vector(0,1,0),t)},game.geometry.Plane.z=function(t){return new game.geometry.Plane(new game.geometry.Vector(0,0,1),t)},game.geometry.Plane.through=function(t,e){return new game.geometry.Plane(e,t.dot(e))},game.geometry.Plane.throughScaled=function(t,e,r){return game.geometry.Plane.through(t,r.divide(e.subtract(t).dot(r)))},game.geometry.Plane.prototype.dot=function(t){return this.normal.dot(t)},game.geometry.Plane.prototype.distance=function(t){return this.dot(t)-this.offset},game.geometry.Plane.prototype.section=function(t){return Math.floor(t/this.offset)},game.geometry.Plane.prototype.cut=function(t){const e=t.map(function(t){return this.dot(t)}.bind(this)),r=e.map(function(t){return this.section(t)}.bind(this)),n=new Map,i=r.reduce((function(t,e){return Math.min(t,e)})),a=r.reduce((function(t,e){return Math.max(t,e)}));for(var o=i;o<=a;o++)n.set(o,[]);for(var s=0;s<t.length;s++){const i=(s+1)%t.length;n.get(r[s]).push(t[s]);for(o=r[s];o<r[i];o++){const r=t[s].interpolate(t[i],((o+1)*this.offset-e[s])/(e[i]-e[s]));n.get(o).push(r),n.get(o+1).push(r)}for(o=r[s];o>r[i];o--){const r=t[s].interpolate(t[i],(o*this.offset-e[s])/(e[i]-e[s]));n.get(o).push(r),n.get(o-1).push(r)}}return n},game.geometry.Matrix.SIZE=4,game.geometry.Matrix.SIZE_1=game.geometry.Matrix.SIZE-1,game.geometry.Matrix.IDENTITY=new game.geometry.Matrix([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),game.geometry.Matrix.projection=function(t,e,r){const n=Math.pow(t,2);return new game.geometry.Matrix([Math.sqrt(1/n+1)/e,0,0,0,0,Math.sqrt(n+1)/e,0,0,0,0,1,1,0,0,-2*r,0])},game.geometry.Matrix.inverseProjection=function(t,e){const r=Math.pow(t,2);return new game.geometry.Matrix([e/Math.sqrt(1/r+1),0,0,0,0,e/Math.sqrt(r+1),0,0,0,0,1,0,0,0,0,1])},game.geometry.Matrix.translation=function(t){return new game.geometry.Matrix([1,0,0,0,0,1,0,0,0,0,1,0,t.x,t.y,t.z,1])},game.geometry.Matrix.scaling=function(t){return new game.geometry.Matrix([t.x,0,0,0,0,t.y,0,0,0,0,t.z,0,0,0,0,1])},game.geometry.Matrix.rotationX=function(t){return new game.geometry.Matrix([1,0,0,0,0,Math.cos(t),Math.sin(t),0,0,-Math.sin(t),Math.cos(t),0,0,0,0,1])},game.geometry.Matrix.rotationY=function(t){return new game.geometry.Matrix([Math.cos(t),0,-Math.sin(t),0,0,1,0,0,Math.sin(t),0,Math.cos(t),0,0,0,0,1])},game.geometry.Matrix.rotationZ=function(t){return new game.geometry.Matrix([Math.cos(t),Math.sin(t),0,0,-Math.sin(t),Math.cos(t),0,0,0,0,1,0,0,0,0,1])},game.geometry.Matrix.rotation=function(t,e){const r=t,n=Math.cos(e),i=Math.sin(e);return new game.geometry.Matrix([Math.pow(r.x,2)*(1-n)+n,r.x*r.y*(1-n)+r.z*i,r.x*r.z*(1-n)-r.y*i,0,r.x*r.y*(1-n)-r.z*i,Math.pow(r.y,2)*(1-n)+n,r.y*r.z*(1-n)+r.x*i,0,r.x*r.z*(1-n)+r.y*i,r.y*r.z*(1-n)-r.x*i,Math.pow(r.z,2)*(1-n)+n,0,0,0,0,1])},game.geometry.Matrix.indexOf=function(t,e){return game.geometry.Matrix.SIZE*t+e},game.geometry.Matrix.prototype.translation=function(){return new game.geometry.Vector(this.data[game.geometry.Matrix.indexOf(game.geometry.Matrix.SIZE_1,0)],this.data[game.geometry.Matrix.indexOf(game.geometry.Matrix.SIZE_1,1)],this.data[game.geometry.Matrix.indexOf(game.geometry.Matrix.SIZE_1,2)]).divide(this.data[game.geometry.Matrix.indexOf(game.geometry.Matrix.SIZE_1,game.geometry.Matrix.SIZE_1)])},game.geometry.Matrix.prototype.rotation=function(){const t=game.geometry.Matrix.IDENTITY.data.slice();for(var e=0;e<game.geometry.Matrix.SIZE_1;e++)for(var r=0;r<game.geometry.Matrix.SIZE_1;r++){const n=game.geometry.Matrix.indexOf(e,r);t[n]=this.data[n]}return new game.geometry.Matrix(t)},game.geometry.Matrix.prototype.add=function(t){return new game.geometry.Matrix(this.data.map((function(e,r){return e+t.data[r]})))},game.geometry.Matrix.prototype.dot=function(t){const e=this.data.slice();for(var r=0;r<game.geometry.Matrix.SIZE;r++)for(var n=0;n<game.geometry.Matrix.SIZE;n++){for(var i=0,a=0;a<game.geometry.Matrix.SIZE;a++)i+=this.data[game.geometry.Matrix.indexOf(r,a)]*t.data[game.geometry.Matrix.indexOf(a,n)];e[game.geometry.Matrix.indexOf(r,n)]=i}return new game.geometry.Matrix(e)},game.geometry.Matrix.prototype.multiply=function(t){return new game.geometry.Matrix(this.data.map((function(e){return e*t})))},game.geometry.Matrix.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Matrix.prototype.transpose=function(){const t=this.data.slice();for(var e=0;e<game.geometry.Matrix.SIZE;e++)for(var r=0;r<e;r++){const n=game.geometry.Matrix.indexOf(e,r),i=game.geometry.Matrix.indexOf(r,e);t[n]=this.data[i],t[i]=this.data[n]}return new game.geometry.Matrix(t)},game.geometry.Matrix.prototype.invert=function(){return game.geometry.Matrix.translation(this.translation().negate()).dot(this.rotation().transpose())},game.geometry.EPSILON=1e-4,game.geometry.SQR_EPSILON=Math.pow(game.geometry.EPSILON,2),game.model.Color.WHITE=new game.model.Color(1,1,1),game.model.Color.PRIMARIES=[new game.model.Color(1,0,0),new game.model.Color(1,1,0),new game.model.Color(0,1,0),new game.model.Color(0,1,1),new game.model.Color(0,0,1),new game.model.Color(1,0,1)],game.model.Color.interpolatePrimaries=function(t){const e=(t-Math.floor(t))*game.model.Color.PRIMARIES.length,r=Math.floor(e);return game.model.Color.PRIMARIES[r].interpolate(game.model.Color.PRIMARIES[(r+1)%game.model.Color.PRIMARIES.length],e-r)},game.model.Color.prototype.compress=function(t,e){return this.multiply(e-t).add(game.model.Color.WHITE.multiply(t))},game.model.Color.prototype.add=function(t){return new game.model.Color(this.r+t.r,this.g+t.g,this.b+t.b)},game.model.Color.prototype.subtract=function(t){return new game.model.Color(this.r-t.r,this.g-t.g,this.b-t.b)},game.model.Color.prototype.multiply=function(t){return new game.model.Color(this.r*t,this.g*t,this.b*t)},game.model.Color.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.model.Color.prototype.round=function(){return new game.model.Color(Math.round(this.r),Math.round(this.g),Math.round(this.b))},game.model.Color.prototype.toCss=function(){return["rgb(",this.r,", ",this.g,", ",this.b,")"].join("")},game.model.Color.prototype.toShader=function(){return["vec3(",this.r,", ",this.g,", ",this.b,")"].join("")},game.model.Color.prototype.glClear=function(t){t.clearColor(this.r,this.g,this.b,1)},game.model.Color.prototype.data=function(){return[this.r,this.g,this.b]},game.model.Path.AUTO_START_COUNT=8,game.model.Path.AUTO_MAX_ERROR=.1,game.model.Path.constant=function(t,e){return new game.model.Path(t,game.utility.func.constant(e))},game.model.Path.error=function(t,e){return t.cross(e).length()/t.length()},game.model.Path.positionCounter=function(t){return function(e){return t((function(t){return e(t).position}))}},game.model.Path.errorCounter=function(t){for(var e=game.model.Path.constant(t,1),r=game.model.Path.constant(t,game.model.Path.AUTO_START_COUNT);;){if(r.error()<=game.model.Path.AUTO_MAX_ERROR){for(;e.count()<r.count();){const n=game.model.Path.constant(t,Math.floor((e.count()+r.count())/2));n.error()<=game.model.Path.AUTO_MAX_ERROR?r=n:e=game.model.Path.constant(t,n.count()+1)}return r.count()}e=r,r=game.model.Path.constant(t,2*e.count())}},game.model.Path.auto=function(t){return new game.model.Path(t,game.model.Path.errorCounter)},game.model.Path.autoVertex=function(t){return new game.model.Path(t,game.model.Path.positionCounter(game.model.Path.errorCounter))},game.model.Path.point=function(t){return game.model.Path.constant((function(e){return t}),1)},game.model.Path.sphere=function(t,e){return game.model.Path.constant((function(r){const n=Math.PI*r,i=Math.sin(n);return game.model.Path.constant((function(e){const r=2*Math.PI*e,a=new game.geometry.Vector(Math.cos(r)*i,Math.sin(r)*i,Math.cos(n));return new game.model.Vertex(a.multiply(t),a)}),Math.round(2*Math.PI*i/e))}),Math.round(Math.PI/e))},game.model.Path.arc=function(t,e){return game.model.Path.autoVertex((function(r){const n=e*r,i=Math.cos(n),a=Math.sin(n);return new game.model.Vertex(new game.geometry.Vector(t*i,t*a,0),new game.geometry.Vector(-a,i,0).multiply(Math.sign(e)))}))},game.model.Path.functionOneToOne=function(t,e){return game.model.Path.autoVertex((function(r){return new game.model.Vertex(new game.geometry.Vector(r,0,t(r)),new game.geometry.Vector(1,0,e(r)))}))},game.model.Path.polynomial=function(t){return game.model.Path.functionOneToOne((function(e){for(var r=0,n=0;n<t.length;n++)r=r*e+t[n];return r}),(function(e){for(var r=0,n=1;n<t.length;n++)r=r*e+t[n-1]*(t.length-n);return r}))},game.model.Path.sinusoid=function(t,e,r){const n=2*Math.PI*e,i=2*Math.PI*r,a=n*t;return game.model.Path.functionOneToOne((function(e){return t*Math.sin(n*e+i)}),(function(t){return a*Math.cos(n*t+i)}))},game.model.Path.prototype.count=function(){return this.counter(this.mapper)},game.model.Path.prototype.fixCount=function(){return game.model.Path.constant(this.mapper,this.count())},game.model.Path.prototype.error=function(){const t=this.waypoints();if(2==t.length)return t[1].subtract(t[0]).length();for(var e=0,r=2;r<t.length;r++)e=Math.max(game.model.Path.error(t[r].subtract(t[r-2]),t[r-1].subtract(t[r-2])),e);return e},game.model.Path.prototype.map=function(t){return new game.model.Path(function(e){return t(this.mapper(e))}.bind(this),this.counter)},game.model.Path.prototype.transform=function(t){return this.map((function(e){return e.transform(t)}))},game.model.Path.prototype.negateNormals=function(){return this.map((function(t){return t.negateNormal()}))},game.model.Path.prototype.position=function(){return this.fixCount().map((function(t){return t.position}))},game.model.Path.prototype.waypoints=function(){const t=this.count();return game.utility.array.generate(function(e){return this.mapper(e/Math.max(t,1))}.bind(this),t+1)},game.model.Path.prototype.selfFan=function(t){const e=this.mapper(0),r=this.normalizedTo(game.model.Path.point(e.position)).waypoints();return game.model.Triangle.normalizeA(game.model.Triangle.fan([e].concat(t?r.slice(1,-1):r.slice(1))))},game.model.Path.prototype.vertexFan=function(t){return game.model.Triangle.normalizeA(game.model.Triangle.fan([t].concat(this.normalizedTo(game.model.Path.point(t.position)).waypoints())))},game.model.Path.prototype.strip=function(t){return game.model.Triangle.strip2(this.normalizedTo(t.position()).waypoints(),t.normalizedTo(this.position()).negateNormals().waypoints())},game.model.Path.prototype.radial=function(t){return this.fixCount().map((function(e){const r=e.position.xyMapping(),n=r.angle(),i=r.length();return t.transform(game.geometry.Matrix.scaling(new game.geometry.Vector(i,i,1)).dot(game.geometry.Matrix.rotationZ(n)).dot(game.geometry.Matrix.translation(new game.geometry.Vector(0,0,e.position.z)))).map((function(t){return t.withNormal(e.normal.transform(game.geometry.Matrix.rotationZ(t.position.xyMapping().angle()+n)).cross(t.normal).normalize())}))}))},game.model.Path.prototype.surface=function(){const t=this.waypoints(),e=[];for(var r,n=0;n<t.length;n++){const i=t[n].waypoints();r&&e.push(game.model.Triangle.strip2(r,i)),r=i}return game.utility.array.flatten(e)},game.model.Path.prototype.normalize=function(){return new game.model.Path(function(t){const e=this.mapper(t);var r=e.normal;return r.short()&&(r=this.mapper(game.utility.clamp(t,game.geometry.EPSILON,1-game.geometry.EPSILON)).normal),e.withNormal(r.normalize())}.bind(this),this.counter)},game.model.Path.prototype.normalizedTo=function(t){return new game.model.Path(function(e){const r=this.mapper(e);return r.withNormal(r.normal.cross(r.position.subtract(t.mapper(e))))}.bind(this),this.counter).normalize()},game.model.Vertex.prototype.flip=function(){return this.withNormal(this.normal.negate())},game.model.Vertex.prototype.transform=function(t){return new game.model.Vertex(this.position.transform(t),this.normal.transform(t).subtract(t.translation()))},game.model.Vertex.prototype.withNormal=function(t){return new game.model.Vertex(this.position,t)},game.model.Vertex.prototype.negateNormal=function(){return new game.model.Vertex(this.position,this.normal.negate())},game.model.Vertex.prototype.data=function(){return this.position.data().concat(this.normal.data())},game.model.Triangle.withType=function(t,e){return t.map((function(t){return t.withType(e)}))},game.model.Triangle.vertices=function(t){return game.utility.array.flatten(t.map((function(t){return t.vertices()})))},game.model.Triangle.strip1=function(t){return t.slice(2).map((function(e,r){const n=r%2;return new game.model.Triangle(t[r+n],t[r+1-n],e)}))},game.model.Triangle.strip2=function(t,e){const r=[];for(var n=0,i=0;n+1<t.length||i+1<e.length;)(2*n+1)*(e.length-1)>(2*i+1)*(t.length-1)?(r.push(new game.model.Triangle(e[i],t[n],e[i+1])),i++):(r.push(new game.model.Triangle(e[i],t[n],t[n+1])),n++);return r},game.model.Triangle.fan=function(t){const e=[];for(var r=2;r<t.length;r++)e.push(new game.model.Triangle(t[0],t[r-1],t[r]));return e},game.model.Triangle.flip=function(t){return t.map((function(t){return t.flip()}))},game.model.Triangle.normalize=function(t){return t.map((function(t){return t.normalize()}))},game.model.Triangle.normalizeA=function(t){return t.map((function(t){return t.normalizeA()}))},game.model.Triangle.transform=function(t,e){return t.map((function(t){return t.transform(e)}))},game.model.Triangle.groupByType=function(t){return game.utility.array.groupBy(t,(function(t){return t.type}))},game.model.Triangle.prototype.cross=function(){return this.a.position.subtract(this.b.position).cross(this.c.position.subtract(this.b.position))},game.model.Triangle.prototype.degenerate=function(){return this.cross().short()},game.model.Triangle.prototype.withABC=function(t,e,r){return new game.model.Triangle(t,e,r,this.type)},game.model.Triangle.prototype.withType=function(t){return new game.model.Triangle(this.a,this.b,this.c,t)},game.model.Triangle.prototype.flip=function(){return this.withABC(this.a.flip(),this.c.flip(),this.b.flip())},game.model.Triangle.prototype.normalize=function(){const t=this.cross().normalize();return this.withABC(this.a.withNormal(t),this.b.withNormal(t),this.c.withNormal(t))},game.model.Triangle.prototype.normalizeA=function(){return this.withABC(this.normalize().a,this.b,this.c)},game.model.Triangle.prototype.transform=function(t){return this.withABC(this.a.transform(t),this.b.transform(t),this.c.transform(t))},game.model.Triangle.prototype.vertices=function(){return[this.a,this.b,this.c]},game.model.Triangle.prototype.collision=function(t){return new game.collision.Triangle(this.a.position,this.b.position,this.c.position,t)},game.collision.Contact.prototype.depth=function(){return this.ball.properties.radius-this.length},game.collision.Contact.prototype.direction=function(){return this.vector.divide(this.length)},game.collision.Contact.prototype.withBall=function(t){return new game.collision.Contact(t,this.motion,this.vector,this.length)},game.collision.Triangle.fromModel=function(t,e){return t.map((function(t){return t.collision(e)}))},game.collision.Triangle.positions=function(t){return game.utility.array.flatten(t.map((function(t){return t.positions()})))},game.collision.Triangle.transform=function(t,e){return t.map((function(t){return t.transform(e)}))},game.collision.Triangle.prototype.project=function(t){const e=this.abT.distance(t),r=this.bcT.distance(t),n=this.caT.distance(t),i=Math.min(e,r,n);if(i>=0)return new game.geometry.Vector(r,n,e);if(i==e){const e=game.utility.clamp(this.ab.distance(t),0,1);return new game.geometry.Vector(1-e,e,0)}if(i==r){const e=game.utility.clamp(this.bc.distance(t),0,1);return new game.geometry.Vector(0,1-e,e)}if(i==n){const e=game.utility.clamp(this.ca.distance(t),0,1);return new game.geometry.Vector(e,0,1-e)}},game.collision.Triangle.prototype.interpolate=function(t){return this.a.multiply(t.x).add(this.b.multiply(t.y)).add(this.c.multiply(t.z))},game.collision.Triangle.prototype.positions=function(){return[this.a,this.b,this.c]},game.collision.Triangle.prototype.transform=function(t){return new game.collision.Triangle(this.a.transform(t),this.b.transform(t),this.c.transform(t),this.handler)},game.collision.Sphere.prototype.size=function(){return this.max.subtract(this.min)},game.collision.Sphere.prototype.contains=function(t){return t.subtract(this.center).sqrLength()<this.sqrRadius},game.collision.Sphere.prototype.model=function(t){return game.model.Triangle.transform(game.model.Path.sphere(this.radius,t).surface(),game.geometry.Matrix.translation(this.center))},game.collision.Sphere.prototype.transform=function(t){return new game.collision.Sphere(this.center.transform(t),this.radius)},game.collision.Index.key=function(t){return[t.x,t.y,t.z].join(",")},game.collision.Index.prototype.count=function(){return game.utility.collection.values(this.map).map((function(t){return t.size})).reduce((function(t,e){return t+e}),0)},game.collision.Index.prototype.pointCell=function(t){return t.divideVector(this.size).floor()},game.collision.Index.prototype.triangleCells=function(t){const e=[];return game.geometry.Plane.x(this.size.x).cut(t.positions()).forEach(function(t,r){game.geometry.Plane.y(this.size.y).cut(t).forEach(function(t,n){game.geometry.Plane.z(this.size.z).cut(t).forEach((function(t,i){e.push(new game.geometry.Vector(r,n,i))}))}.bind(this))}.bind(this)),e},game.collision.Index.prototype.sphereCells=function(t){const e=[],r=this.pointCell(t.min),n=this.pointCell(t.max),i=this.pointCell(t.center);for(var a=r.x;a<=n.x;a++)for(var o=r.y;o<=n.y;o++)for(var s=r.z;s<=n.z;s++)((a==i.x)+(o==i.y)+(s==i.z)>1||t.contains(new game.geometry.Vector(a+(a<i.x),o+(o<i.y),s+(s<i.z)).multiplyVector(this.size)))&&e.push(new game.geometry.Vector(a,o,s));return e},game.collision.Index.prototype.queryCell=function(t){return this.map.get(game.collision.Index.key(t))},game.collision.Index.prototype.addCell=function(t,e){const r=game.collision.Index.key(t);var n=this.map.get(r);n||(n=new Set,this.map.set(r,n)),n.add(e)},game.collision.Index.prototype.removeCell=function(t,e){const r=game.collision.Index.key(t),n=this.map.get(r);n&&n.delete(e)&&0==n.size&&this.map.delete(r)},game.collision.Index.prototype.queryCells=function(t){const e=new Set;return t.forEach(function(t){const r=this.queryCell(t);r&&r.forEach(e.add.bind(e))}.bind(this)),game.utility.collection.values(e)},game.collision.Index.prototype.addCells=function(t,e){t.forEach(function(t){this.addCell(t,e)}.bind(this))},game.collision.Index.prototype.removeCells=function(t,e){t.forEach(function(t){this.removeCell(t,e)}.bind(this))},game.collision.Index.prototype.updateBounds=function(t){0==this.bounds.length?this.bounds.push(t,t):(this.bounds[0]=this.bounds[0].min(t),this.bounds[1]=this.bounds[1].max(t))},game.collision.Index.prototype.boundVertices=function(){const t=[];for(var e=0;e<2;e++)for(var r=0;r<2;r++)for(var n=0;n<2;n++)t.push(new game.geometry.Vector(this.bounds[e].x,this.bounds[r].y,this.bounds[n].z));return t},game.collision.Index.prototype.addTriangle=function(t){this.addCells(this.triangleCells(t),t),t.positions().forEach(this.updateBounds.bind(this))},game.collision.Index.prototype.addTriangles=function(t){t.forEach(this.addTriangle.bind(this))},game.collision.Part.prototype.offsetBound=function(t,e,r){const n=this.animation.mapper(t),i=this.animation.mapper(e);return this.index.boundVertices().map((function(t){return t.transform(i).subtract(t.transform(n)).subtract(r).length()})).reduce((function(t,e){return Math.max(t,e)}),0)},game.collision.Body.fromPart=function(t){return new game.collision.Body([t])},game.collision.Body.merge=function(t){return new game.collision.Body(game.utility.array.flatten(t.map((function(t){return t.parts}))))},game.collision.Body.prototype.offsetBound=function(t,e,r){return this.parts.map((function(n){return n.offsetBound(t,e,r)})).reduce((function(t,e){return Math.max(t,e)}),0)},game.physics.Motion.fromData=function(t){return new game.physics.Motion(game.geometry.Vector.fromData(t[0]),game.geometry.Vector.fromData(t[1]))},game.physics.Motion.fromXyz=function(t){return new game.physics.Motion(game.geometry.Vector.fromXyz(t.position),game.geometry.Vector.fromXyz(t.velocity))},game.physics.Motion.prototype.add=function(t){return new game.physics.Motion(this.position.add(t.position),this.velocity.add(t.velocity))},game.physics.Motion.prototype.addPosition=function(t){return new game.physics.Motion(this.position.add(t),this.velocity)},game.physics.Motion.prototype.addVelocity=function(t){return new game.physics.Motion(this.position,this.velocity.add(t))},game.physics.Motion.prototype.integrate=function(t){return this.addPosition(this.velocity.multiply(t))},game.physics.Motion.prototype.data=function(){return[this.position.data(),this.velocity.data()]},game.physics.Ball.GRAVITY=196.2,game.physics.Ball.SPHERE=new game.collision.Sphere(new game.geometry.Vector(0,0,0),.5),game.physics.Ball.SPHERE_Z=new game.geometry.Vector(0,0,game.physics.Ball.SPHERE.radius),game.physics.Ball.MAX_RESOLVE_ITERATIONS=5,game.physics.Ball.MAX_RESOLVE_TOLERANCE=.01,game.physics.Ball.MAX_OFFSET_PER_RADIUS=.5,game.physics.Ball.DELTA_REDUCTION=.75,game.physics.Ball.RESTING_DISTANCE=.125,game.physics.Ball.RESTING_DISTANCE_SQR=Math.pow(game.physics.Ball.RESTING_DISTANCE,2),game.physics.Ball.RESTING_DELTA=.25,game.physics.Ball.HIT_MIN=5,game.physics.Ball.HIT_MAX=150,game.physics.Ball.HIT_EXP=1.5,game.physics.Ball.INITIAL_DELTAS={last:game.timing.NORMAL_DELTA},game.physics.Ball.initialResting=function(t){return{position:t.position,delta:game.physics.Ball.RESTING_DELTA}},game.physics.Ball.from=function(t,e,r,n){return new game.physics.Ball(t,game.physics.Ball.INITIAL_DELTAS,game.physics.Ball.initialResting(t),{radius:e,index:r,minZ:n,moved:!1,completed:!1})},game.physics.Ball.prototype.resetDelta=function(){return{last:this.deltas.hasOwnProperty("current")?this.deltas.current:this.deltas.last}},game.physics.Ball.prototype.updateRestingDelta=function(t){return new game.physics.Ball(this.motion,this.deltas,{position:this.resting.position,delta:Math.max(this.resting.delta-t,0)},this.properties)},game.physics.Ball.prototype.resetResting=function(){return new game.physics.Ball(this.motion,this.deltas,game.physics.Ball.initialResting(this.motion),this.updateMoved(!0))},game.physics.Ball.prototype.escapedResting=function(){return this.motion.position.subtract(this.resting.position).sqrLength()>game.physics.Ball.RESTING_DISTANCE_SQR},game.physics.Ball.prototype.updateResting=function(t){return this.escapedResting()?this.resetResting():this.updateRestingDelta(t)},game.physics.Ball.prototype.isResting=function(){return 0==this.resting.delta},game.physics.Ball.prototype.withMotion=function(t){return new game.physics.Ball(t,this.resetDelta(),this.resting,this.properties)},game.physics.Ball.prototype.addMotion=function(t){return this.withMotion(this.motion.add(t))},game.physics.Ball.prototype.addVelocity=function(t){return this.withMotion(this.motion.addVelocity(t))},game.physics.Ball.prototype.integrate=function(t){return this.isResting()?this:this.withMotion(this.motion.integrate(t))},game.physics.Ball.prototype.offsetBound=function(t,e){return this.properties.index.offsetBound(t,t+e,this.motion.velocity.multiply(e))},game.physics.Ball.prototype.lowerDelta=function(t,e,r,n){do{e*=game.physics.Ball.DELTA_REDUCTION,r=this.offsetBound(t,e)}while(r>n);return e},game.physics.Ball.prototype.upperDelta=function(t,e,r,n){var i;do{if(i=e,e>=game.timing.NORMAL_DELTA)return game.timing.NORMAL_DELTA;e=Math.min(e/game.physics.Ball.DELTA_REDUCTION,game.timing.NORMAL_DELTA),r=this.offsetBound(t,e)}while(r<=n);return i},game.physics.Ball.prototype.computeDelta=function(t){const e=this.properties.radius*game.physics.Ball.MAX_OFFSET_PER_RADIUS,r=this.offsetBound(t,this.deltas.last);return(r>e?this.lowerDelta:this.upperDelta).call(this,t,this.deltas.last,r,e)},game.physics.Ball.prototype.delta=function(t){return this.deltas.hasOwnProperty("current")||(this.deltas.current=this.computeDelta(t)),this.deltas.current},game.physics.Ball.prototype.advance=function(t,e){const r=this.integrate(e).resolve(t,e);if(r&&r.motion.position.z>=r.properties.minZ)return r.applyGravity(e).updateResting(e)},game.physics.Ball.prototype.applyGravity=function(t){return this.isResting()?this:this.addVelocity(new game.geometry.Vector(0,0,-game.physics.Ball.GRAVITY*t))},game.physics.Ball.prototype.isHittable=function(){return this.isResting()&&!this.isCompleted()},game.physics.Ball.prototype.hit=function(t,e){return this.resetResting().addVelocity(new game.geometry.Vector(0,-game.utility.interpolate(game.physics.Ball.HIT_MIN,game.physics.Ball.HIT_MAX,Math.pow(e,game.physics.Ball.HIT_EXP)),0).transform(game.geometry.Matrix.rotationZ(t)))},game.physics.Ball.prototype.isResettable=function(){return this.isMoved()&&!this.isCompleted()},game.physics.Ball.prototype.isPlaying=function(){return this.isMoved()&&(!this.isCompleted()||!this.isResting())},game.physics.Ball.prototype.resolve=function(t,e){for(var r=this,n=0;n<game.physics.Ball.MAX_RESOLVE_ITERATIONS;n++){const n=r.resolveOnce(t,e);if(!n)return r;r=n}},game.physics.Ball.prototype.resolveOnce=function(t,e){const r=this.resolveNearest(t+e);if(r)return this.resolveHandle(t,e,r)},game.physics.Ball.prototype.resolveNearest=function(t){return this.resolveFind(this.resolveCandidates(t))},game.physics.Ball.prototype.resolveCandidates=function(t){const e=this.sphere();return game.utility.array.flatten(this.properties.index.parts.map((function(r){const n=r.animation.mapper(t),i=e.transform(n.invert());return r.index.queryCells(r.index.sphereCells(i)).map((function(t){const e={};return e.animation=r.animation,e.matrix=n,e.triangle=t,e.position=t.interpolate(t.project(i.center)),e.length=i.center.subtract(e.position).length(),e}))})))},game.physics.Ball.prototype.resolveFind=function(t){if(t.length>0){const e=t.reduce((function(t,e){return t.length>e.length?e:t}));if(e.length+game.physics.Ball.MAX_RESOLVE_TOLERANCE<this.properties.radius)return e}},game.physics.Ball.prototype.resolveHandle=function(t,e,r){const n=[r.position.transform(r.matrix),r.position.transform(r.animation.mapper(t))];return r.triangle.handler(new game.collision.Contact(this,new game.physics.Motion(n[0],n[0].subtract(n[1]).divide(e)),this.motion.position.subtract(n[0]),r.length))},game.physics.Ball.prototype.updateMoved=function(t){return game.utility.object.merge([this.properties,{moved:t}])},game.physics.Ball.prototype.isMoved=function(){return this.properties.moved},game.physics.Ball.prototype.updateCompleted=function(t){return game.utility.object.merge([this.properties,{completed:t}])},game.physics.Ball.prototype.complete=function(){return new game.physics.Ball(this.motion,this.deltas,this.resting,this.updateCompleted(!0))},game.physics.Ball.prototype.isCompleted=function(){return this.properties.completed},game.physics.Ball.prototype.sphere=function(){return new game.collision.Sphere(this.motion.position,this.properties.radius)},game.physics.Ball.prototype.centerMatrix=function(){return game.geometry.Matrix.translation(this.motion.position)},game.physics.Ball.prototype.offsetMatrix=function(t){return game.geometry.Matrix.translation(this.motion.position.add(t.multiply(this.properties.radius)))},game.physics.Ball.prototype.fromData=function(t){return new game.physics.Ball(game.physics.Motion.fromData(t[0]),this.resetDelta(),{position:game.geometry.Vector.fromData(t[1]),delta:t[2]},game.utility.object.merge([this.properties,{moved:t[3],completed:t[4]}]))},game.physics.Ball.prototype.data=function(){return[this.motion.data(),this.resting.position.data(),this.resting.delta,this.properties.moved,this.properties.completed]},game.physics.Animation.STATIC=new game.physics.Animation(null,game.utility.func.constant(game.geometry.Matrix.IDENTITY)),game.physics.Animation.constant=function(t){return new game.physics.Animation(["CONSTANT",t.data],game.utility.func.constant(t))},game.physics.Animation.concat=function(t){switch((t=t.filter((function(t){return!t.isStatic()}))).length){case 0:return game.physics.Animation.STATIC;case 1:return t[0];default:return new game.physics.Animation(["CONCAT",t.map((function(t){return t.id}))],(function(e){return t.map((function(t){return t.mapper(e)})).reduce((function(t,e){return t.dot(e)}),game.geometry.Matrix.IDENTITY)}))}},game.physics.Animation.translation=function(t){return new game.physics.Animation(["TRANSLATION",t.data()],(function(e){return game.geometry.Matrix.translation(t.multiply(e))}))},game.physics.Animation.rotation=function(t,e){return new game.physics.Animation(["ROTATION",t.data(),e],(function(r){return game.geometry.Matrix.rotation(t,e*r)}))},game.physics.Animation.prototype.isStatic=function(){return this.serializeId()==game.physics.Animation.STATIC.serializeId()},game.physics.Animation.prototype.constant=function(t){return game.physics.Animation.constant(this.mapper(t))},game.physics.Animation.prototype.cached=function(t){if(this.isStatic())return this;const e=new Map;return new game.physics.Animation(this.id,function(r){if(!e.has(r)&&(e.set(r,this.mapper(r)),e.size>t)){const t=e.keys().next();game.utility.assert(!t.done,"Cache is expected to be non-empty"),game.utility.assert(e.delete(t.value),"Failed to remove first cache element")}return e.get(r)}.bind(this))},game.physics.Animation.prototype.repeat=function(t){return new game.physics.Animation(["REPEAT",this.id,t],function(e){return this.mapper(game.utility.modPositive(e,t))}.bind(this))},game.physics.Animation.prototype.split=function(t,e){return new game.physics.Animation(["SPLIT",this.id,t.id,e],function(r){return r<e?this.mapper(r):t.mapper(r)}.bind(this))},game.physics.Animation.prototype.offset=function(t){return new game.physics.Animation(["OFFSET",this.id,t],function(e){return this.mapper(e+t)}.bind(this))},game.physics.Animation.prototype.transform=function(t){return new game.physics.Animation(["TRANSFORM",this.id,t.data],function(e){return this.mapper(e).dot(t)}.bind(this))},game.physics.Animation.prototype.serializeId=function(){return JSON.stringify(this.id)},game.physics.Part.fromModel=function(t,e){return new game.physics.Part(game.model.Triangle.withType(t,e.type),game.collision.Triangle.fromModel(t,e.collision),game.physics.Animation.STATIC,game.physics.Body.EMPTY)},game.physics.Part.groupById=function(t){return game.utility.collection.values(game.utility.array.groupBy(t,(function(t){return t.animation.serializeId()})))},game.physics.Part.merge=function(t){return game.physics.Part.groupById(t).map((function(t){return new game.physics.Part(game.utility.array.flatten(t.map((function(t){return t.model}))),game.utility.array.flatten(t.map((function(t){return t.collision}))),t[0].animation,game.physics.Body.merge(t.map((function(t){return t.body}))))}))},game.physics.Part.prototype.index=function(t,e,r){const n=game.physics.Animation.concat([this.animation,e]).cached(r),i=new game.collision.Index(t);return i.addTriangles(this.collision),game.collision.Body.merge([game.collision.Body.fromPart(new game.collision.Part(i,n)),this.body.index(t,n,r)])},game.physics.Part.prototype.noModel=function(){return new game.physics.Part([],this.collision,this.animation,this.body.noModel())},game.physics.Part.prototype.flip=function(){return new game.physics.Part(game.model.Triangle.flip(this.model),this.collision,this.animation,this.body.flip())},game.physics.Part.prototype.transform=function(t){return this.animation.isStatic()?new game.physics.Part(game.model.Triangle.transform(this.model,t),game.collision.Triangle.transform(this.collision,t),this.animation,this.body.transform(t)):new game.physics.Part(this.model,this.collision,this.animation.transform(t),this.body)},game.physics.Part.prototype.animate=function(t){return new game.physics.Part(this.model,this.collision,game.physics.Animation.concat([this.animation,t]),this.body)},game.physics.Part.prototype.groupByType=function(){return game.model.Triangle.groupByType(this.model)},game.physics.Part.prototype.groupByAggregator=function(t){return game.utility.array.groupBy(game.utility.collection.map.entries(this.groupByType()),(function(e){return t.get(e[0]).aggregator}))},game.physics.Part.prototype.selfRenderer=function(t){return game.utility.func.concat(game.utility.collection.map.entries(this.groupByAggregator(t)).map((function(e){return e[0](game.utility.array.flatten(e[1].map((function(e){const r=t.get(e[0]).mapper;return e[1].map((function(t){return r(t)}))}))))})))},game.physics.Part.prototype.renderer=function(t){return game.utility.func.mapArgs(game.utility.func.concat([this.selfRenderer(t),this.body.renderer(t)]),function(t){return[t[0],this.animation.mapper(t[0]).dot(t[1])].concat(t.slice(2))}.bind(this))},game.physics.Part.prototype.minZ=function(t,e){const r=this.animation.mapper(t).dot(e);return game.utility.array.minOrNull(game.model.Triangle.vertices(this.model).map((function(t){return t.position})).concat(game.collision.Triangle.positions(this.collision)).map((function(t){return t.transform(r).z})).concat(this.body.minZ(t,r)))},game.physics.Body.EMPTY=new game.physics.Body([]),game.physics.Body.fromPart=function(t){return new game.physics.Body([t])},game.physics.Body.fromModel=function(t,e){return game.physics.Body.fromPart(game.physics.Part.fromModel(t,e))},game.physics.Body.merge=function(t){return new game.physics.Body(game.physics.Part.merge(game.utility.array.flatten(t.map((function(t){return t.parts})))))},game.physics.Body.prototype.index=function(t,e,r){return game.collision.Body.merge(this.parts.map((function(n){return n.index(t,e,r)})))},game.physics.Body.prototype.noModel=function(){return new game.physics.Body(this.parts.map((function(t){return t.noModel()})))},game.physics.Body.prototype.flip=function(){return new game.physics.Body(this.parts.map((function(t){return t.flip()})))},game.physics.Body.prototype.transform=function(t){return new game.physics.Body(this.parts.map((function(e){return e.transform(t)})))},game.physics.Body.prototype.animate=function(t){switch(this.parts.length){case 0:return this;case 1:return game.physics.Body.fromPart(this.parts[0].animate(t));default:return game.physics.Body.fromPart(new game.physics.Part([],[],t,this))}},game.physics.Body.prototype.renderer=function(t){return game.utility.func.concat(this.parts.map((function(e){return e.renderer(t)})))},game.physics.Body.prototype.minZ=function(t,e){return game.utility.array.minOrNull(this.parts.map((function(r){return r.minZ(t,e)})))},game.physics.Course.WATER_GAP=5,game.physics.Course.ANIMATION_CACHE_SIZE=2,game.physics.Course.prototype.ball=function(t){return game.physics.Ball.from(this.origin,t.radius,this.body.index(t.size(),game.physics.Animation.STATIC,game.physics.Course.ANIMATION_CACHE_SIZE),this.body.minZ(0,game.geometry.Matrix.IDENTITY)-game.physics.Course.WATER_GAP)},game.physics.Material.associate=function(t){return new Map(t.map((function(t){return[t.type,t]})))},game.physics.Material.find=function(t){return game.utility.assert(game.physics.Material.INSTANCES.has(t),"Unknown material"),game.physics.Material.INSTANCES.get(t)},game.physics.Material.collision=function(t,e){return game.collision.handlers.motionRelative(game.collision.handlers.rebound(game.physics.Ball.GRAVITY*game.timing.NORMAL_DELTA,.05,t,.1,e))},game.physics.Material.INSTANCES=game.physics.Material.associate([new game.physics.Material("GREEN",game.physics.Material.collision(.4,.05)),new game.physics.Material("BUNKER",game.physics.Material.collision(.1,.4)),new game.physics.Material("WALL",game.physics.Material.collision(.6,.02)),new game.physics.Material("WOOD",game.physics.Material.collision(.5,.04)),new game.physics.Material("HOLE",game.collision.handlers.collection([game.physics.Material.collision(.2,.1),game.collision.handlers.ballCompletion]))]),game.physics.Generator.FACTORIES={BODY:{TRANSLATE:function(t){return t.BODY.translate()},ROTATE:{X:function(t){return t.BODY.rotate(game.geometry.Matrix.rotationX)},Y:function(t){return t.BODY.rotate(game.geometry.Matrix.rotationY)},Z:function(t){return t.BODY.rotate(game.geometry.Matrix.rotationZ)}},MERGE:function(t){return new game.physics.Generator(game.utility.json.isArray,(function(e){return game.physics.Body.merge(e.map((function(e){return t.BODY.generate(e)})))})).byKey("sources")},NO_MODEL:function(t){return new game.physics.Generator(game.constraints.alwaysTrue,(function(e){return t.BODY.generate(e).noModel()})).byKey("source")},FLIP:function(t){return new game.physics.Generator(game.constraints.alwaysTrue,(function(e){return t.BODY.generate(e).flip()})).byKey("source")},TRIANGLE:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({positions:game.constraints.array.withLengthElements(game.constraints.object.isVector,3),material:game.constraints.string.isMaterial}),(function(t){const e=t.positions.map(game.geometry.Vector.fromXyz);return game.physics.Body.fromModel([new game.model.Triangle(new game.model.Vertex(e[0]),new game.model.Vertex(e[1]),new game.model.Vertex(e[2])).normalize()],game.physics.Material.find(t.material))}))},TRIANGLE_STRIP:function(t){return game.physics.Generator.vertexAccumulator(game.model.Triangle.strip1)},TRIANGLE_FAN:function(t){return game.physics.Generator.vertexAccumulator(game.model.Triangle.fan)},PATH_STRIP:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({paths:game.constraints.array.isArrayWith(game.constraints.array.hasLength(2)),material:game.constraints.string.isMaterial}),(function(e){return game.physics.Body.fromModel(t.PATH.generate(e.paths[0]).strip(t.PATH.generate(e.paths[1])),game.physics.Material.find(e.material))}))},PATH_SELF_FAN:function(t){return new game.physics.Generator(game.constraints.object.withFieldsOptional({path:game.constraints.alwaysTrue,material:game.constraints.string.isMaterial,closed:[game.utility.json.isBoolean]}),(function(e){return game.physics.Body.fromModel(t.PATH.generate(e.path).selfFan(e.closed),game.physics.Material.find(e.material))}))},PATH_POINT_FAN:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({path:game.constraints.alwaysTrue,point:game.constraints.object.isVector,material:game.constraints.string.isMaterial}),(function(e){return game.physics.Body.fromModel(t.PATH.generate(e.path).vertexFan(new game.model.Vertex(game.geometry.Vector.fromXyz(e.point))),game.physics.Material.find(e.material))}))},PATH_RADIAL:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({paths:game.constraints.array.isArrayWith(game.constraints.array.hasLength(2)),material:game.constraints.string.isMaterial}),(function(e){return game.physics.Body.fromModel(t.PATH.generate(e.paths[0]).radial(t.PATH.generate(e.paths[1])).surface(),game.physics.Material.find(e.material))}))},ANIMATE:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({body:game.constraints.alwaysTrue,animation:game.constraints.alwaysTrue}),(function(e){return t.BODY.generate(e.body).animate(t.ANIMATION.generate(e.animation))}))}},PATH:{TRANSLATE:function(t){return t.PATH.translate()},SCALE:function(t){return t.PATH.scale()},ROTATE:{X:function(t){return t.PATH.rotate(game.geometry.Matrix.rotationX)},Y:function(t){return t.PATH.rotate(game.geometry.Matrix.rotationY)},Z:function(t){return t.PATH.rotate(game.geometry.Matrix.rotationZ)}},ARC:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({angle:game.constraints.number.isAngleDeg,radius:game.constraints.number.isNonNegativeFloat}),(function(t){return game.model.Path.arc(t.radius,game.utility.angle.degToRad(t.angle))}))},POLYNOMIAL:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({coefficients:game.constraints.array.isArrayWith(game.constraints.array.allElements(game.constraints.number.isFloat))}),(function(t){return game.model.Path.polynomial(t.coefficients)}))},SINUSOID:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({amplitude:game.constraints.number.isFloat,frequency:game.constraints.number.isFloat,phase:game.constraints.number.isFloat}),(function(t){return game.model.Path.sinusoid(t.amplitude,t.frequency,t.phase)}))}},ANIMATION:{CONCAT:function(t){return new game.physics.Generator(game.utility.json.isArray,(function(e){return game.physics.Animation.concat(e.map((function(e){return t.ANIMATION.generate(e)})))})).byKey("sources")},TRANSLATION:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({velocity:game.constraints.object.isVector}),(function(t){return game.physics.Animation.translation(game.geometry.Vector.fromXyz(t.velocity))}))},ROTATION:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({axis:game.constraints.object.isVector}),(function(t){const e=game.geometry.Vector.fromXyz(t.axis);return e.short()?game.physics.Animation.STATIC:game.physics.Animation.rotation(e.normalize(),game.utility.angle.degToRad(e.length()))}))},REPEAT:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,period:game.constraints.number.isNonNegativeFloat}),(function(e){const r=t.ANIMATION.generate(e.source);return e.period<game.geometry.EPSILON?r.constant(0):r.repeat(e.period)}))},SPLIT:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({before:game.constraints.alwaysTrue,after:game.constraints.alwaysTrue,threshold:game.constraints.number.isNonNegativeFloat}),(function(e){return t.ANIMATION.generate(e.before).split(t.ANIMATION.generate(e.after),e.threshold)}))},OFFSET:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,value:game.constraints.number.isFloat}),(function(e){return t.ANIMATION.generate(e.source).offset(e.value)}))}}},game.physics.Generator.build=function(){return game.physics.Generator.course(game.physics.Generator.byFactories().BODY,game.physics.Ball.SPHERE_Z)},game.physics.Generator.byFactories=function(){const t={},e={};return Object.keys(game.physics.Generator.FACTORIES).forEach((function(r){t[r]=new Map,e[r]=game.physics.Generator.byName(t[r])})),Object.keys(game.physics.Generator.FACTORIES).forEach((function(r){game.physics.Generator.collect(t[r],e,game.physics.Generator.FACTORIES[r],[])})),e},game.physics.Generator.collect=function(t,e,r,n){"function"==typeof r?t.set(n.join("_"),r(e)):Object.keys(r).forEach((function(i){n.push(i),game.physics.Generator.collect(t,e,r[i],n),n.pop()}))},game.physics.Generator.course=function(t,e){return new game.physics.Generator(game.constraints.object.withFieldsExactly({motion:game.constraints.object.isMotion,body:game.constraints.alwaysTrue}),(function(r){return new game.physics.Course(game.physics.Motion.fromXyz(r.motion).addPosition(e),t.generate(r.body))}))},game.physics.Generator.byName=function(t){return new game.physics.Generator(game.constraints.allMatch([game.constraints.object.withFields({name:game.utility.json.isString}),function(e){return t.has(e.name)}]),(function(e){return t.get(e.name).generate(game.utility.object.filterKey(e,"name"))}))},game.physics.Generator.vertexAccumulator=function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({positions:game.constraints.array.isArrayWith(game.constraints.array.allElements(game.constraints.object.isVector)),material:game.constraints.string.isMaterial}),(function(e){return game.physics.Body.fromModel(game.model.Triangle.normalize(t(e.positions.map(game.geometry.Vector.fromXyz).map((function(t){return new game.model.Vertex(t)})))),game.physics.Material.find(e.material))}))},game.physics.Generator.prototype.generate=function(t){return this.constraint(t)||game.physics.Processor.throwWith("Invalid data",t),this.handler(t)},game.physics.Generator.prototype.byKey=function(t){const e={};return e[t]=game.constraints.alwaysTrue,new game.physics.Generator(game.constraints.object.withFieldsExactly(e),function(e){return this.generate(e[t])}.bind(this))},game.physics.Generator.prototype.translate=function(){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,vector:game.constraints.object.isVector}),function(t){return this.generate(t.source).transform(game.geometry.Matrix.translation(game.geometry.Vector.fromXyz(t.vector)))}.bind(this))},game.physics.Generator.prototype.scale=function(){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,vector:game.constraints.object.isVector}),function(t){return this.generate(t.source).transform(game.geometry.Matrix.scaling(game.geometry.Vector.fromXyz(t.vector)))}.bind(this))},game.physics.Generator.prototype.rotate=function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,angle:game.constraints.number.isAngleDeg}),function(e){return this.generate(e.source).transform(t(game.utility.angle.degToRad(e.angle)))}.bind(this))},game.physics.Processor.MAPPERS={OBJECT:{LITERAL:function(t){return function(e){return game.utility.object.mapValues(t,(function(t){return t(e)}))}},MERGE:function(t){return game.physics.Processor.requireArrayOfObjects(t),game.utility.object.merge(t)}},ARRAY:{LITERAL:function(t){return function(e){return t.map((function(t){return t(e)}))}},CONCATENATE:function(t){return game.physics.Processor.requireArrayOfArrays(t),game.utility.array.flatten(t)},SLICE:function(t){return game.physics.Processor.requireArrayOfLength(t,3),game.physics.Processor.requireArray(t[0]),game.physics.Processor.requireIntegerInRange(t[1],0,t[0].length),game.physics.Processor.requireIntegerInRange(t[2],t[1],t[0].length),t[0].slice(t[1],t[2])},COUNT:function(t){return game.physics.Processor.requireArray(t),t.length},TO_NUMBER:function(t,e){return function(r){return game.physics.Processor.requireArrayOfNumbers(r),game.physics.Processor.requireNumber(r.reduce(t,e))}}},PRIMITIVE:{EQUALS:function(t){return game.physics.Processor.requireArrayOfPrimitives(t),t.every((function(e){return e===t[0]}))},NUMBER_TO_NUMBER:function(t){return function(e){return game.physics.Processor.requireNumber(e),game.physics.Processor.requireNumber(t(e))}},RAD_TO_DEG:function(t){return game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER(game.physics.Processor.MAPPERS.COMPOSITION([t,game.utility.angle.radToDeg]))},DEG_TO_RAD:function(t){return game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER(game.physics.Processor.MAPPERS.COMPOSITION([game.utility.angle.degToRad,t]))}},EXTRACT:{REQUIRED:function(t){game.physics.Processor.requireArrayNotEmpty(t);try{return function(t,e){for(var r=0;r<e.length;r++)game.utility.json.isObject(t)?(game.utility.json.isString(e[r])||game.physics.Processor.throwWith("Expected string",t),t.hasOwnProperty(e[r])||game.physics.Processor.throwWith("Object has no key "+e[r],t),t=t[e[r]]):game.utility.json.isArray(t)?(Number.isInteger(e[r])||game.physics.Processor.throwWith("Expected integer",t),(e[r]<0||e[r]>=t.length)&&game.physics.Processor.throwWith("Index "+e[r]+" out of bounds",t),t=t[e[r]]):game.physics.Processor.throwWith("Cannot extract from primitive",t);return t}(t[0],t.slice(1))}catch(t){throw t.cause.type="NOT_FOUND",t}},OPTIONAL:function(t){game.physics.Processor.requireArrayNotEmpty(t);try{return game.physics.Processor.MAPPERS.EXTRACT.REQUIRED(t.slice(0,-1))}catch(e){if("NOT_FOUND"===e.cause.type)return game.utility.array.last(t);throw e}}},CONSTANT:game.utility.func.constant,ARGUMENT:game.utility.func.identity,NAMED:function(t,e){const r=new Set;return function(n){try{const t=JSON.stringify(n);r.has(t)&&game.physics.Processor.throwWith("Infinite recursion detected",n),r.add(t);try{return e[0](n)}finally{r.delete(t)}}catch(e){throw e.cause.trace||(e.cause.trace=[]),e.cause.trace.push(t),e}}},SEQUENCE:function(t){return function(e){const r=[];for(var n=0;n<t.length;n++)try{return t[n](e)}catch(t){r.push(t)}game.physics.Processor.throwWith("No mapper succeeded",e,{sequence:r})}},COMPOSITION:function(t){return function(e){for(var r=0;r<t.length;r++)e=t[r](e);return e}},CONDITIONAL:function(t,e,r){return function(n){return game.physics.Processor.requireBoolean(t(n))?e(n):r(n)}},RANGE:function(t,e){return function(r){return game.utility.array.generate((function(e){return t({ARG:r,INDEX:e})}),game.physics.Processor.requireIntegerInRange(e(r),0,null))}}},game.physics.Processor.COMPILERS={JSON:function(t){return function e(r,n){function i(t){return e(t,n)}try{return t(r,n)}catch(t){if(t.cause.propagate)throw t;return game.utility.json.isObject(r)?game.physics.Processor.MAPPERS.OBJECT.LITERAL(game.utility.object.mapValues(r,i)):game.utility.json.isArray(r)?game.physics.Processor.MAPPERS.ARRAY.LITERAL(r.map(i)):game.physics.Processor.MAPPERS.CONSTANT(r)}}},SEQUENCE:function(t){return function(e,r){for(var n=0;n<t.length;n++)try{return t[n](e,r)}catch(t){if(t.cause.propagate)throw t}game.physics.Processor.throwWith("No compiler succeeded",e)}},TYPED:function(t){return function(e,r){return game.physics.Processor.requireArrayNotEmpty(e),t.has(e[0])||game.physics.Processor.throwWith("Unknown type",e[0]),t.get(e[0])(e.slice(1),r)}},RESOLVER:function(t,e){return e.resolve(t)},REVERTER:function(t){return function(e,r){return game.physics.Processor.requireArrayOfLength(e,1),r.parent||game.physics.Processor.throwWith("No parent processor available",e,{propagate:!0}),t(e[0],r.parent)}},COMPOSITION:function(t){return function(e,r){return game.physics.Processor.requireArray(e),game.physics.Processor.MAPPERS.COMPOSITION(e.map((function(e){return t(e,r)})).reverse())}},CONDITIONAL:function(t){return function(e,r){return game.physics.Processor.requireArrayOfLength(e,3),game.physics.Processor.MAPPERS.CONDITIONAL(t(e[0],r),t(e[1],r),t(e[2],r))}},RANGE:function(t){return function(e,r){return game.physics.Processor.requireArrayOfLength(e,2),game.physics.Processor.MAPPERS.RANGE(t(e[0],r),t(e[1],r))}},DEFINER:function(t,e){return function(r,n){game.physics.Processor.requireObjectWithKey(r,e);const i=n.compile(game.utility.object.filterKey(r,e),t),a=t(r[e],i),o=i.unresolved();return o.length>0&&game.physics.Processor.throwWith("Unresolved mappers detected",r,{unresolved:o,propagate:!0}),a}}},game.physics.Processor.compiler=function(){const t=[],e=game.physics.Processor.COMPILERS.JSON(game.physics.Processor.COMPILERS.SEQUENCE(t));return t.push(game.physics.Processor.COMPILERS.TYPED(new Map([["^",game.physics.Processor.COMPILERS.REVERTER(e)],["()",game.physics.Processor.COMPILERS.COMPOSITION(e)],["?",game.physics.Processor.COMPILERS.CONDITIONAL(e)],["...",game.physics.Processor.COMPILERS.RANGE(e)]])),game.physics.Processor.COMPILERS.RESOLVER,game.physics.Processor.COMPILERS.DEFINER(e,"#")),e},game.physics.Processor.build=function(){return game.physics.Processor.constant(new Map([["$",game.physics.Processor.MAPPERS.ARGUMENT],[".",game.physics.Processor.MAPPERS.EXTRACT.REQUIRED],[".?",game.physics.Processor.MAPPERS.EXTRACT.OPTIONAL],["=",game.physics.Processor.MAPPERS.PRIMITIVE.EQUALS],["[]",game.physics.Processor.MAPPERS.SEQUENCE([game.physics.Processor.MAPPERS.ARRAY.ELEMENT,game.physics.Processor.MAPPERS.ARRAY.SLICE])],["#",game.physics.Processor.MAPPERS.ARRAY.COUNT],["+",game.physics.Processor.MAPPERS.SEQUENCE([game.physics.Processor.MAPPERS.ARRAY.TO_NUMBER((function(t,e){return t+e}),0),game.physics.Processor.MAPPERS.ARRAY.CONCATENATE,game.physics.Processor.MAPPERS.OBJECT.MERGE])],["-",game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER((function(t){return-t}))],["*",game.physics.Processor.MAPPERS.ARRAY.TO_NUMBER((function(t,e){return t*e}),1)],["/",game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER((function(t){return 1/t}))],["SQR",game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER((function(t){return t*t}))],["SQRT",game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER(Math.sqrt)],["FLOOR",game.physics.Processor.MAPPERS.PRIMITIVE.NUMBER_TO_NUMBER(Math.floor)],["SIN",game.physics.Processor.MAPPERS.PRIMITIVE.DEG_TO_RAD(Math.sin)],["COS",game.physics.Processor.MAPPERS.PRIMITIVE.DEG_TO_RAD(Math.cos)],["TAN",game.physics.Processor.MAPPERS.PRIMITIVE.DEG_TO_RAD(Math.tan)],["ASIN",game.physics.Processor.MAPPERS.PRIMITIVE.RAD_TO_DEG(Math.asin)],["ACOS",game.physics.Processor.MAPPERS.PRIMITIVE.RAD_TO_DEG(Math.acos)],["ATAN",game.physics.Processor.MAPPERS.PRIMITIVE.RAD_TO_DEG(Math.atan)]]))},game.physics.Processor.constant=function(t,e){return new game.physics.Processor(new Map(game.utility.collection.map.entries(t).map((function(t){return[t[0],game.utility.func.constant(t[1])]}))),e)},game.physics.Processor.requireObject=function(t){game.utility.json.isObject(t)||game.physics.Processor.throwWith("Object expected",t)},game.physics.Processor.requireObjectWithKey=function(t,e){game.physics.Processor.requireObject(t),t.hasOwnProperty(e)||game.physics.Processor.throwWith("Key "+e+" expected",t)},game.physics.Processor.requireArray=function(t){game.utility.json.isArray(t)||game.physics.Processor.throwWith("Array expected",t)},game.physics.Processor.requireArrayNotEmpty=function(t){game.physics.Processor.requireArray(t),0==t.length&&game.physics.Processor.throwWith("Expected non-empty array",t)},game.physics.Processor.requireArrayOfLength=function(t,e){game.physics.Processor.requireArray(t),t.length!=e&&game.physics.Processor.throwWith("Expected length "+e,t)},game.physics.Processor.requireArrayOfAll=function(t,e,r){game.physics.Processor.requireArray(t),t.every(e)||game.physics.Processor.throwWith("Expected all elements to be "+r,t)},game.physics.Processor.requireArrayOfPrimitives=function(t){game.physics.Processor.requireArrayOfAll(t,game.utility.json.isPrimitive,"primitives")},game.physics.Processor.requireArrayOfNumbers=function(t){game.physics.Processor.requireArrayOfAll(t,game.utility.json.isNumber,"numbers")},game.physics.Processor.requireArrayOfObjects=function(t){game.physics.Processor.requireArrayOfAll(t,game.utility.json.isObject,"objects")},game.physics.Processor.requireArrayOfArrays=function(t){game.physics.Processor.requireArrayOfAll(t,game.utility.json.isArray,"arrays")},game.physics.Processor.requireNumber=function(t){return game.utility.json.isNumber(t)||game.physics.Processor.throwWith("Expected number",t),t},game.physics.Processor.requireInteger=function(t){Number.isInteger(t)||game.physics.Processor.throwWith("Expected integer",t)},game.physics.Processor.requireIntegerInRange=function(t,e,r){return game.physics.Processor.requireInteger(t),(null!=e&&t<e||null!=r&&t>r)&&game.physics.Processor.throwWith("Expected to be in range ["+e+", "+r+"]",t),t},game.physics.Processor.requireBoolean=function(t){return game.utility.json.isBoolean(t)||game.physics.Processor.throwWith("Expected boolean",t),t},game.physics.Processor.throwWith=function(t,e,r){throw new Error(t,{cause:game.utility.object.merge([{data:e},r||{}])})},game.physics.Processor.prototype.resolve=function(t){return this.mappers.has(t)?(this.resolved.add(t),this.mappers.get(t)()):(this.parent||game.physics.Processor.throwWith("Unknown name",t),this.parent.resolve(t))},game.physics.Processor.prototype.unresolved=function(){return game.utility.collection.map.keys(this.mappers).filter(function(t){return!this.resolved.has(t)}.bind(this))},game.physics.Processor.prototype.compile=function(t,e){const r=new game.physics.Processor(new Map(Object.keys(t).map((function(n){const i=[],a=game.physics.Processor.MAPPERS.NAMED(n,i);return[n,function(){return 0==i.length&&(i.push(null),i[0]=e(t[n],r)),a}]}))),this);return r},game.constraints.number.isAngle=game.constraints.number.isFloatWith(game.constraints.number.inFloatRange(0,2*Math.PI)),game.constraints.number.isAngleDeg=game.constraints.number.isFloatWith(game.constraints.number.inRange(-360,360)),game.constraints.number.isNormal=game.constraints.number.isFloatWith(game.constraints.number.inRange(0,1)),game.constraints.number.isNonNegative=game.constraints.number.isAtLeast(0),game.constraints.number.isNonNegativeInteger=game.constraints.number.isIntegerWith(game.constraints.number.isNonNegative),game.constraints.number.isNonNegativeFloat=game.constraints.number.isFloatWith(game.constraints.number.isNonNegative),game.constraints.number.isTimestamp=game.constraints.number.isNonNegativeInteger,game.constraints.number.isFrameIndex=game.constraints.number.isNonNegativeInteger,game.constraints.number.PLAYER_ID_MIN=Math.pow(10,game.constraints.number.PLAYER_ID_MIN_EXP),game.constraints.number.isPlayerId=game.constraints.number.isIntegerWith(game.constraints.number.isAtLeast(game.constraints.number.PLAYER_ID_MIN)),game.constraints.number.isPlayerRating=game.constraints.number.isInteger,game.constraints.string.isPlayerKey=game.constraints.string.with(game.constraints.string.PLAYER_KEY_LENGTH,game.constraints.string.PLAYER_KEY_LENGTH,game.constraints.string.PLAYER_KEY_CHARS),game.constraints.string.isPlayerName=game.constraints.string.with(1,game.constraints.string.PLAYER_NAME_MAX_LENGTH,game.constraints.string.PLAYER_NAME_CHARS),game.constraints.string.isSessionKey=game.constraints.string.with(game.constraints.string.SESSION_KEY_LENGTH,game.constraints.string.SESSION_KEY_LENGTH,game.constraints.string.SESSION_KEY_CHARS),game.constraints.string.isMaterial=game.constraints.contains(game.physics.Material.INSTANCES),game.constraints.array.isVector=game.constraints.array.withLengthElements(game.constraints.number.isFloat,3),game.constraints.array.isMotion=game.constraints.array.withElementsExactly([game.constraints.array.isVector,game.constraints.array.isVector]),game.constraints.array.isBall=game.constraints.array.withElementsExactly([game.constraints.array.isMotion,game.constraints.array.isVector,game.constraints.number.isNonNegativeFloat,game.utility.json.isBoolean,game.utility.json.isBoolean]),game.constraints.array.PLAYER_PUBLIC=[game.constraints.number.isPlayerId,game.constraints.string.isPlayerName,game.constraints.number.isPlayerRating],game.constraints.array.PLAYER_PRIVATE=game.constraints.array.PLAYER_PUBLIC.concat(game.constraints.number.isTimestamp,game.constraints.number.isTimestamp),game.constraints.array.isPlayerPublic=game.constraints.array.withElementsExactly(game.constraints.array.PLAYER_PUBLIC),game.constraints.array.isPlayerPrivate=game.constraints.array.withElementsExactly(game.constraints.array.PLAYER_PRIVATE),game.constraints.array.isPlayerStates=game.constraints.array.tableDistinctBy([game.constraints.array.isPlayerPublic,game.constraints.array.isBall,game.constraints.array.isBall,game.constraints.number.isNormal,game.constraints.number.isNonNegativeInteger,game.constraints.number.isNonNegativeInteger,game.utility.json.isBoolean],(function(t){return t[0][0]})),game.constraints.array.isPlayerResults=game.constraints.array.tableDistinctBy([game.constraints.array.isPlayerPublic,game.constraints.number.isNonNegativeInteger,game.utility.json.isBoolean,game.constraints.number.isPlayerRating],(function(t){return t[0][0]})),game.constraints.array.FRAME=[game.constraints.number.isFrameIndex,game.constraints.number.isTimestamp,game.constraints.number.isNonNegativeFloat,game.constraints.number.isNonNegativeFloat,game.constraints.array.isPlayerStates],game.constraints.array.isFrame=game.constraints.array.withElementsExactly(game.constraints.array.FRAME),game.constraints.array.JOIN_FRAME=[game.constraints.number.isNonNegativeInteger,game.constraints.number.isTimestamp,game.constraints.array.isFrame],game.constraints.object.isVector=game.constraints.object.withFieldsExactly({x:game.constraints.number.isFloat,y:game.constraints.number.isFloat,z:game.constraints.number.isFloat}),game.constraints.object.isMotion=game.constraints.object.withFieldsExactly({position:game.constraints.object.isVector,velocity:game.constraints.object.isVector}),game.network.Procedure.PARAM_TREE={REGISTRATION:{REQUEST:[game.constraints.string.isPlayerName],RESPONSE:[game.constraints.number.isPlayerId,game.constraints.string.isPlayerKey,game.constraints.number.isTimestamp]},LOGIN:{REQUEST:[game.constraints.string.isPlayerKey],RESPONSE:{CONFIRM:{LOBBY:game.constraints.array.PLAYER_PRIVATE,GAME:[game.constraints.array.isPlayerPrivate,game.constraints.string.isSessionKey].concat(game.constraints.array.JOIN_FRAME)},MULTIPLE:[],UNKNOWN:[]}},LOBBY:{NAME:{CHANGE:{REQUEST:[game.constraints.string.isPlayerName],RESPONSE:[]}},CREATE:{REQUEST:[],RESPONSE:[game.constraints.string.isSessionKey]},JOIN:{REQUEST:[game.constraints.string.isSessionKey],RESPONSE:{CONFIRM:{SESSION:[game.constraints.array.tableDistinctBy(game.constraints.array.PLAYER_PUBLIC,(function(t){return t[0]}))],GAME:game.constraints.array.JOIN_FRAME},UNKNOWN:[]}}},SESSION:{ENTER:game.constraints.array.PLAYER_PUBLIC,LEAVE:{SELF:{REQUEST:[],RESPONSE:[]},OTHER:[game.constraints.number.isPlayerId]},START:{REQUEST:[],RESPONSE:[]}},GAME:{START:{REQUEST:[],RESPONSE:[game.constraints.number.isTimestamp]},ENTER:[game.constraints.number.isTimestamp,game.constraints.array.isPlayerPublic],LEAVE:{OTHER:[game.constraints.number.isTimestamp,game.constraints.number.isPlayerId]},RESET:{SELF:[game.constraints.number.isTimestamp],OTHER:[game.constraints.number.isTimestamp,game.constraints.number.isPlayerId]},FRAME:game.constraints.array.FRAME,HIT:{SELF:[game.constraints.number.isTimestamp,game.constraints.number.isAngle,game.constraints.number.isNormal],OTHER:[game.constraints.number.isTimestamp,game.constraints.number.isPlayerId,game.constraints.number.isAngle,game.constraints.number.isNormal]},END:[game.constraints.array.isPlayerResults]}},game.network.Procedure.mapTree=function(t,e,r){if(Array.isArray(t)){const n=new game.network.Procedure(r.join("_"),t);return e.push(n),n}const n={};return Object.keys(t).forEach((function(i){r.push(i),n[i]=game.network.Procedure.mapTree(t[i],e,r),r.pop()})),n},game.network.Procedure.LIST=[],game.network.Procedure.TREE=game.network.Procedure.mapTree(game.network.Procedure.PARAM_TREE,game.network.Procedure.LIST,[]),game.network.Procedure.map=function(t){return new Map(t.map((function(t){return[t.name,t]})))},game.network.Procedure.prototype.validate=function(t){return game.utility.assert(t.length==this.constraints.length,"Wrong number of parameters"),this.constraints.forEach((function(e,r){game.network.require(t[r],e,"Illegal value for parameter "+r)})),t},game.network.Procedure.prototype.bind=function(){return this.bindArray(Array.prototype.slice.call(arguments))},game.network.Procedure.prototype.bindArray=function(t){return new game.network.Call(this,t)},game.network.Call.METHOD_PREFIX="handle_",game.network.Call.prototype.json=function(){return{name:this.procedure.name,params:this.params}},game.network.Call.prototype.handle=function(t){const e=game.network.Call.METHOD_PREFIX+this.procedure.name;game.utility.assert(e in t,"No handler for procedure '"+this.procedure.name+"'"),t[e].apply(t,this.params)},game.network.Parser.prototype.buildConstraint=function(){return game.constraints.object.withFieldsExactly({name:game.constraints.contains(this.procedures),params:game.utility.json.isArray})},game.network.Parser.prototype.parse=function(t,e){const r=game.network.require(JSON.parse(t,e),this.constraint,"Invalid JSON for parsing");return this.procedures.get(r.name).bindArray(r.params)},game.network.Parser.prototype.unparse=function(t,e){return JSON.stringify(game.network.require(t.json(),this.constraint,"Invalid JSON for unparsing"),e)},game.network.Parser.INSTANCE=new game.network.Parser(game.network.Procedure.map(game.network.Procedure.LIST)),game.network.Player.AVERAGE_RATING=1e3,game.network.Player.COMPARATOR=game.utility.comparators.ordered([game.utility.comparators.mapped(game.utility.comparators.default,(function(t){return t.name})),game.utility.comparators.mapped(game.utility.comparators.default,(function(t){return t.id}))]),game.network.Player.fromDataPublic=function(t){return new game.network.Player(t[0],null,t[1],t[2],null)},game.network.Player.fromDataPrivate=function(t){return game.network.Player.fromDataPublic(t).withTimestamps({registration:t[3],login:t[4]})},game.network.Player.prototype.withKey=function(t){return new game.network.Player(this.id,t,this.name,this.rating,this.timestamps)},game.network.Player.prototype.withTimestamps=function(t){return new game.network.Player(this.id,this.key,this.name,this.rating,t)},game.network.Player.prototype.findResult=function(t){const e=t.filter(function(t){return t.player.id==this.id}.bind(this));return game.utility.assert(1==e.length,"Self expected exactly once"),e[0]},game.network.Player.prototype.dataPublic=function(){return[this.id,this.name,this.rating]},game.network.Player.prototype.dataPrivate=function(){return this.dataPublic().concat(this.timestamps.registration,this.timestamps.login)},game.network.PlayerState.MAX_STROKES=10,game.network.PlayerState.MAX_STROKES_PENALTY=1,game.network.PlayerState.MAX_STROKES_WITH_PENALTY=game.network.PlayerState.MAX_STROKES+game.network.PlayerState.MAX_STROKES_PENALTY,game.network.PlayerState.PLAYER_COMPARATOR=game.utility.comparators.mapped(game.network.Player.COMPARATOR,(function(t){return t.player})),game.network.PlayerState.sort=function(t){return game.utility.discriminate(t,(function(t){return t.strokes.total}),game.utility.comparators.default,game.network.PlayerState.PLAYER_COMPARATOR)},game.network.PlayerState.prototype.withPlayer=function(t){return new game.network.PlayerState(t,this.ball,this.strength,this.strokes,this.left)},game.network.PlayerState.prototype.withBall=function(t){return new game.network.PlayerState(this.player,t,this.strength,this.strokes,this.left)},game.network.PlayerState.prototype.withBallCurrent=function(t){return this.withBall({current:t,last:this.ball.last,origin:this.ball.origin})},game.network.PlayerState.prototype.withBallBoth=function(t){return this.withBall({current:t,last:t,origin:this.ball.origin})},game.network.PlayerState.prototype.withStrokes=function(t){return new game.network.PlayerState(this.player,this.ball,this.strength,t,this.left)},game.network.PlayerState.prototype.withLeft=function(t){return new game.network.PlayerState(this.player,this.ball,this.strength,this.strokes,t)},game.network.PlayerState.prototype.maxStrokes=function(){if(this.ball.current.isCompleted())return this;const t=game.network.PlayerState.MAX_STROKES_WITH_PENALTY-this.strokes.current;return this.withStrokes({total:this.strokes.total+t,current:this.strokes.current+t})},game.network.PlayerState.prototype.hasMaxStrokes=function(){return this.strokes.current>=game.network.PlayerState.MAX_STROKES},game.network.PlayerState.prototype.endedMaxStrokes=function(){return this.ball.current.isHittable()&&this.hasMaxStrokes()},game.network.PlayerState.prototype.ended=function(){return(this.ball.current.isCompleted()||this.hasMaxStrokes())&&this.ball.current.isResting()},game.network.PlayerState.prototype.advance=function(t,e){const r=this.ball.current.advance(t,e);return r?r.isResting()?this.withBallBoth(r):this.withBallCurrent(r):this.ball.last.resolveNearest(t+e)?this.withBallBoth(this.ball.origin):this.withBallCurrent(this.ball.last)},game.network.PlayerState.prototype.isHittable=function(){return this.ball.current.isHittable()&&!this.hasMaxStrokes()},game.network.PlayerState.prototype.hit=function(t,e){return this.isHittable()?new game.network.PlayerState(this.player,{current:this.ball.current.hit(t,e),last:this.ball.last,origin:this.ball.origin},e,{total:this.strokes.total+1,current:this.strokes.current+1},this.left):this},game.network.PlayerState.prototype.isResettable=function(){return this.ball.current.isResettable()&&!this.hasMaxStrokes()},game.network.PlayerState.prototype.reset=function(){return this.isResettable()?this.withBallBoth(this.ball.origin):this},game.network.PlayerState.prototype.toResult=function(){return new game.network.PlayerResult(this.player,this.strokes.total,this.left,this.player.rating)},game.network.PlayerState.prototype.fromData=function(t){return new game.network.PlayerState(game.network.Player.fromDataPublic(t[0]),{current:this.ball.current.fromData(t[1]),last:this.ball.last.fromData(t[2]),origin:this.ball.origin},t[3],{total:t[4],current:t[5]},t[6])},game.network.PlayerState.prototype.data=function(){return[this.player.dataPublic(),this.ball.current.data(),this.ball.last.data(),this.strength,this.strokes.total,this.strokes.current,this.left]},game.network.PlayerResult.PLAYER_COMPARATOR=game.utility.comparators.mapped(game.network.Player.COMPARATOR,(function(t){return t.player})),game.network.PlayerResult.sort=function(t){return game.utility.discriminate(t,(function(t){return t.strokes}),game.utility.comparators.default,game.network.PlayerResult.PLAYER_COMPARATOR)},game.network.PlayerResult.initial=function(t,e){return new game.network.PlayerResult(t,e*game.network.PlayerState.MAX_STROKES_WITH_PENALTY,!1,t.rating)},game.network.PlayerResult.fromData=function(t){return new game.network.PlayerResult(game.network.Player.fromDataPublic(t[0]),t[1],t[2],t[3])},game.network.PlayerResult.prototype.ratingAdjustment=function(){return this.player.rating-this.rating},game.network.PlayerResult.prototype.toStateBoth=function(t){return this.toState({current:t,last:t,origin:t})},game.network.PlayerResult.prototype.toState=function(t){return new game.network.PlayerState(this.player,t,0,{total:this.strokes,current:0},this.left)},game.network.PlayerResult.prototype.data=function(){return[this.player.dataPublic(),this.strokes,this.left,this.rating]},game.network.Frame.from=function(t,e,r,n,i){return new game.network.Frame(t,e,r,n,i.map((function(t){return game.state.drivers.Player.map((function(e){return e.fromData(t)}))})))},game.network.Frame.fromData=function(t){return game.network.Frame.from(t[0],t[1],t[2],t[3],t[4])},game.network.Frame.prototype.mapActions=function(t){return new game.network.Frame(this.index,this.timestamp,this.totalTime,this.endTime,this.playerActions.map(t))},game.network.COURSES=game.utility.func.lazy((function(){const t=game.physics.Processor.compiler(),e=game.physics.Processor.build().compile(courses,t),r=game.physics.Generator.build();return["COMPOSITE/SIMPLE_STRAIGHT","COMPOSITE/VERTICAL_CURVE_OVER","COMPOSITE/VOLCANO","COMPOSITE/CROSS_JUMP","COMPOSITE/BRIDGED_ISLANDS","COMPOSITE/S_CURVE","COMPOSITE/RAMP_OVER","COMPOSITE/BUNKER_JUMP","COMPOSITE/JUMP_OVAL","COMPOSITE/CIRCULAR_TIERS","COMPOSITE/S_RAILS","COMPOSITE/DOUBLE_JUMP","COMPOSITE/PITFALLS","COMPOSITE/MOGUL_RUN","COMPOSITE/STAIRWELL","COMPOSITE/PITFALL_JUMP","COMPOSITE/PEDESTAL","COMPOSITE/JETTY_JUMP","COMPOSITE/ROTATOR_GATE"].map((function(n){return function(){return r.generate(t(n,e)(null))}}))})),game.timing.PLAYABLE_END=game.timing.GAME_START_DURATION+game.timing.PLAYABLE_DURATION,game.state.drivers.Player.map=function(t){return function(e){return new game.state.drivers.Player(t(e.state),e.time)}},game.state.drivers.Player.prototype.getTime=function(){return this.time(game.state.drivers.Referable.get())},game.state.drivers.Player.prototype.delta=function(){return this.state.ball.current.delta(this.getTime())},game.state.drivers.Player.prototype.drive=function(t){return new game.state.drivers.Player(this.state.advance(this.getTime(),t),this.time)},game.state.drivers.Camera.map=function(t,e){return function(r){return new game.state.drivers.Camera(t(r.driver),e(r.camera),r.position)}},game.state.drivers.Camera.prototype.delta=function(){return this.driver.delta()},game.state.drivers.Camera.prototype.drive=function(t){const e=this.driver.drive(t),r=this.position(e);return new game.state.drivers.Camera(e,r?this.camera.follow(r,t):this.camera,this.position)},game.state.drivers.Camera.prototype.renderer=function(){return this.driver.renderer().dot(this.camera.matrix())},game.state.drivers.RendererOverride.map=function(t){return function(e){return new game.state.drivers.RendererOverride(t(e.driver),e.fRenderer)}},game.state.drivers.RendererOverride.empty=function(t){return new game.state.drivers.RendererOverride(t,game.utility.func.constant(game.state.renderers.void))},game.state.drivers.RendererOverride.wrappedRenderer=function(t){return function(e){return t(e.driver)}},game.state.drivers.RendererOverride.sequenceRenderer=function(t){return function(e){return new game.state.renderers.Multi(new Map(t.map((function(t,r){return[r,t(e)]}))))}},game.state.drivers.RendererOverride.discreteRenderer=function(t){return function(e){return game.state.renderers.Wrapper.void(t.bind(null,e))}},game.state.drivers.RendererOverride.geometryRenderer=function(t,e){return function(r){const n=t(r);if(n)return new game.state.renderers.Wrapper(n,e)}},game.state.drivers.RendererOverride.optionalRenderer=function(t){return function(e){const r=t(e);return r?new game.state.renderers.Optional(r):game.state.renderers.Optional.EMPTY}},game.state.drivers.RendererOverride.postRenderer=function(t){return function(e){return new game.state.renderers.Wrapper(e.renderer(),function(t,e){e.render(),t(e)}.bind(null,t(e)))}},game.state.drivers.RendererOverride.discretePostRenderer=function(t){return game.state.drivers.RendererOverride.postRenderer((function(e){return t}))},game.state.drivers.RendererOverride.prototype.delta=function(){return this.driver.delta()},game.state.drivers.RendererOverride.prototype.drive=function(t){return new game.state.drivers.RendererOverride(this.driver.drive(t),this.fRenderer)},game.state.drivers.RendererOverride.prototype.renderer=function(){return this.fRenderer(this.driver)},game.state.drivers.Timer.action=function(t){return game.state.actions.ifExisting((function(){return new game.state.drivers.Timer(t)}),game.state.actions.illegal)},game.state.drivers.Timer.prototype.delta=function(){return game.timing.NORMAL_DELTA},game.state.drivers.Timer.prototype.drive=function(t){return new game.state.drivers.Timer(this.time+t)},game.state.drivers.Timer.prototype.renderer=function(){return game.state.renderers.void},game.state.drivers.Conditional.mapUnconditional=function(t){return function(e){return new game.state.drivers.Conditional(t(e.unconditionalDriver),e.conditionalDriver,e.condition)}},game.state.drivers.Conditional.mapConditional=function(t){return function(e){return new game.state.drivers.Conditional(e.unconditionalDriver,t(e.conditionalDriver),e.condition)}},game.state.drivers.Conditional.mapBoth=function(t,e){return function(r){return new game.state.drivers.Conditional(t(r.unconditionalDriver),e(r.conditionalDriver),r.condition)}},game.state.drivers.Conditional.ifSatisfied=function(t){return game.state.actions.conditional(t,(function(t){return game.utility.assert(game.utility.json.isBoolean(t.satisfied),"Flag not valid"),t.satisfied}))},game.state.drivers.Conditional.prototype.delta=function(){return Math.min(this.unconditionalDriver.delta(),this.conditionalDriver.delta())},game.state.drivers.Conditional.prototype.drive=function(t){return new game.state.drivers.Conditional(this.unconditionalDriver.drive(t),this.satisfied?this.conditionalDriver.drive(t):this.conditionalDriver,this.condition)},game.state.drivers.Conditional.prototype.renderer=function(){return new game.state.renderers.Multi(new Map([["unconditional",this.unconditionalDriver.renderer()],["conditional",this.conditionalDriver.renderer()]]))},game.state.drivers.Multi.OTHERS={KEEP:function(t){return t},DISCARD:function(t){return[t[0],null]},ASSERT_NONE:function(t){throw new Error("No other entry allowed")}},game.state.drivers.Multi.ORDERED={OTHERS_FIRST:function(t,e){return!1},ASCENDING:function(t,e){return t<e}},game.state.drivers.Multi.map=function(t,e,r){return function(n){const i=new Map,a=game.utility.collection.map.entries(t),o=game.utility.collection.map.entries(n.drivers);for(var s=0,m=0;s<a.length||m<o.length;){var c;s<a.length&&m<o.length&&a[s][0]===o[m][0]?(c=[a[s][0],a[s][1](o[m][1])],s++,m++):m==o.length||t.has(o[m][0])||s<a.length&&r(a[s][0],o[m][0])?(game.utility.assert(!n.drivers.has(a[s][0]),"Keys out of order"),c=[a[s][0],a[s][1]()],s++):(c=e(o[m]),m++),c[1]&&i.set(c[0],c[1])}return new game.state.drivers.Multi(i)}},game.state.drivers.Multi.prototype.delta=function(){return game.utility.collection.values(this.drivers).map((function(t){return t.delta()})).reduce((function(t,e){return Math.min(t,e)}),game.timing.NORMAL_DELTA)},game.state.drivers.Multi.prototype.drive=function(t){return new game.state.drivers.Multi(new Map(game.utility.collection.map.entries(this.drivers).map((function(e){return[e[0],e[1].drive(t)]}))))},game.state.drivers.Multi.prototype.renderer=function(){return new game.state.renderers.Multi(new Map(game.utility.collection.map.entries(this.drivers).map((function(t){return[t[0],t[1].renderer()]}))))},game.state.drivers.Data.map=function(t){return function(e){return game.utility.assert(e.hasOwnProperty("data"),"No data on driver"),new game.state.drivers.Data(t(e.data))}},game.state.drivers.Data.merge=function(t){return game.state.drivers.Data.map((function(e){return game.utility.object.merge([e,t(e)])}))},game.state.drivers.Data.prototype.delta=function(){return game.timing.NORMAL_DELTA},game.state.drivers.Data.prototype.drive=function(t){return this},game.state.drivers.Referable.STACK=[],game.state.drivers.Referable.map=function(t){return function(e){return new game.state.drivers.Referable(t(e.driver))}},game.state.drivers.Referable.get=function(){return game.utility.assert(game.state.drivers.Referable.STACK.length>0,"No referable exists"),game.utility.array.last(game.state.drivers.Referable.STACK).driver},game.state.drivers.Referable.prototype.delta=function(){return this.run((function(){return this.driver.delta()}))},game.state.drivers.Referable.prototype.drive=function(t){return this.run((function(){return new game.state.drivers.Referable(this.driver.drive(t))}))},game.state.drivers.Referable.prototype.renderer=function(){return this.run((function(){return this.driver.renderer()}))},game.state.drivers.Referable.prototype.run=function(t){game.state.drivers.Referable.STACK.push(this);try{return t.call(this)}finally{game.utility.assert(game.state.drivers.Referable.STACK.pop()===this,"Unexpected stack element")}},game.state.renderers.Optional.EMPTY=new game.state.renderers.Optional(null),game.state.renderers.Optional.prototype.dot=function(t){return this.renderer?new game.state.renderers.Optional(this.renderer.dot(t)):game.state.renderers.Optional.EMPTY},game.state.renderers.Optional.prototype.interpolate=function(t,e){return this.renderer&&t.renderer?new game.state.renderers.Optional(this.renderer.interpolate(t.renderer,e)):t},game.state.renderers.Optional.prototype.render=function(){this.renderer&&this.renderer.render()},game.state.renderers.Wrapper.void=function(t){return new game.state.renderers.Wrapper(game.state.renderers.void,t)},game.state.renderers.Wrapper.prototype.dot=function(t){return new game.state.renderers.Wrapper(this.geometry.dot(t),this.fRenderer)},game.state.renderers.Wrapper.prototype.interpolate=function(t,e){return new game.state.renderers.Wrapper(this.geometry.interpolate(t.geometry,e),this.fRenderer)},game.state.renderers.Wrapper.prototype.render=function(){this.fRenderer(this.geometry)},game.state.renderers.Multi.prototype.dot=function(t){return new game.state.renderers.Multi(new Map(game.utility.collection.map.entries(this.renderers).map((function(e){return[e[0],e[1].dot(t)]}))))},game.state.renderers.Multi.prototype.interpolate=function(t,e){return new game.state.renderers.Multi(new Map(game.utility.collection.map.entries(t.renderers).map(function(t){return[t[0],this.renderers.has(t[0])?this.renderers.get(t[0]).interpolate(t[1],e):t[1]]}.bind(this))))},game.state.renderers.Multi.prototype.render=function(){this.renderers.forEach((function(t){t.render()}))},game.state.updaters.TimeEvent.prototype.pruner=function(){return this.prune.bind(this)},game.state.updaters.TimeEvent.prototype.applier=function(){return this.apply.bind(this)},game.state.updaters.TimeEvent.prototype.prune=function(t){if(this.events.splice(0,this.find(t[0].timestamp)),null!=this.lastInsert){const e=game.state.Frame.findByTimestamp(t,this.lastInsert);t.splice(Math.max(e,1)),this.lastInsert=null}},game.state.updaters.TimeEvent.prototype.apply=function(t){const e=game.utility.array.last(t),r=game.utility.array.lastN(t,2);game.utility.array.assignLast(t,e.apply(game.state.actions.merge(this.events.slice(this.find(r.timestamp),this.find(e.timestamp)).map((function(t){return t.action})))))},game.state.updaters.TimeEvent.prototype.find=function(t){return game.utility.array.binarySearch(this.events,(function(e){return e.timestamp<t}))},game.state.updaters.TimeEvent.prototype.insert=function(t){this.events.splice(this.find(t.timestamp+1),0,t),(null==this.lastInsert||t.timestamp<this.lastInsert)&&(this.lastInsert=t.timestamp)},game.state.updaters.TimeEvent.prototype.driveLast=function(t){this.events.length&&t.drive(game.utility.array.last(this.events).timestamp)},game.state.updaters.IndexEvent.prototype.pruner=function(){return this.pruner.bind(this)},game.state.updaters.IndexEvent.prototype.applier=function(){return this.apply.bind(this)},game.state.updaters.IndexEvent.prototype.prune=function(t){if(this.events.splice(0,this.find(t[0].index)),null!=this.lastInsert){const e=game.state.Frame.findByIndex(t,this.lastInsert);game.utility.assert(e>0,"Index event occurred before first frame"),t.splice(e),this.lastInsert=null}},game.state.updaters.IndexEvent.prototype.apply=function(t){for(var e=game.utility.array.last(t),r=this.find(e.index);r<this.events.length&&this.events[r].index==e.index;)e=e.apply(this.events[r].action),r++;game.utility.array.assignLast(t,e)},game.state.updaters.IndexEvent.prototype.find=function(t){return game.utility.array.binarySearch(this.events,(function(e){return e.index<t}))},game.state.updaters.IndexEvent.prototype.insert=function(t){this.events.splice(this.find(t.index+1),0,t),(null==!this.lastInsert||t.index<this.lastInsert)&&(this.lastInsert=t.index)},game.state.updaters.TimeSync.prototype.pruner=function(){return this.prune.bind(this)},game.state.updaters.TimeSync.prototype.applier=function(){return this.apply.bind(this)},game.state.updaters.TimeSync.prototype.prune=function(t){if(this.syncs.splice(0,this.find(t[0].index)),this.lastInsert){var e=game.state.Frame.findByIndex(t,this.lastInsert.index);for(game.utility.assert(e>0,"Time sync occurred before first frame");e>0&&this.lastInsert.affectsFrame(t[e-1]);)e--;t.splice(e),this.lastInsert=null}},game.state.updaters.TimeSync.prototype.apply=function(t){const e=game.utility.array.last(t),r=this.find(e.index);r<this.syncs.length&&(game.utility.array.assignLast(t,this.syncs[r].apply(e)),game.utility.assert(1==t.length||game.utility.array.lastN(t,2).isConsecutive(game.utility.array.last(t)),"Only the last frame may be affected"))},game.state.updaters.TimeSync.prototype.find=function(t){return game.utility.array.binarySearch(this.syncs,(function(e){return e.index<t}))},game.state.updaters.TimeSync.prototype.insert=function(t){const e=this.find(t.index);game.utility.assert(e==this.syncs.length||this.syncs[e].index!=t.index,"Sync for index already exists"),game.utility.assert(0==e||!t.affectsOther(this.syncs[e-1]),"Sync timestamp affects previous one"),game.utility.assert(e==this.syncs.length||!this.syncs[e].affectsOther(t),"Next sync timestamp affects new one"),this.syncs.splice(e,0,t),(!this.lastInsert||t.index<this.lastInsert.index)&&(this.lastInsert=t)},game.state.updaters.indexPruner.reference=function(t){return function(e){return t.index}},game.state.updaters.timestampPruner.delta=function(t){return function(e){return game.utility.array.last(e).timestamp-t}},game.state.TimeSync.prototype.maxTimestamp=function(t){return game.utility.assert(this.index>=t,"Cannot compute for greater index"),this.timestamp-(this.index-t)*game.timing.TICKS_PER_GAP},game.state.TimeSync.prototype.affectsOther=function(t){return t.timestamp>this.maxTimestamp(t.index)},game.state.TimeSync.prototype.affectsFrame=function(t){return t.timestamp>this.maxTimestamp(t.index)},game.state.TimeSync.prototype.apply=function(t){return new game.state.Frame(t.index,this.index==t.index?this.timestamp:Math.min(t.timestamp,this.maxTimestamp(t.index)),t.driver)},game.state.Frame.zero=function(t){return new game.state.Frame(0,0,t)},game.state.Frame.findByIndex=function(t,e){return game.utility.array.binarySearch(t,(function(t){return t.index<e}))},game.state.Frame.findByTimestamp=function(t,e){return game.utility.array.binarySearch(t,(function(t){return t.timestamp<e}))},game.state.Frame.pruneIndex=function(t,e,r,n){e>t[0].index&&t.splice(0,Math.min(game.state.Frame.findByIndex(t,e)-r,t.length-n))},game.state.Frame.pruneTimestamp=function(t,e,r,n){e>t[0].timestamp&&t.splice(0,Math.min(game.state.Frame.findByTimestamp(t,e)-r,t.length-n))},game.state.Frame.prototype.isConsecutive=function(t){return this.index+1==t.index&&this.timestamp+game.timing.TICKS_PER_GAP<=t.timestamp},game.state.Frame.prototype.renderer=function(){return this.driver.renderer()},game.state.Frame.prototype.render=function(){this.renderer().render()},game.state.Frame.prototype.interpolateRenderer=function(t,e){return game.utility.assert(this.isConsecutive(t),"Frames not consecutive"),e==this.timestamp?this.renderer():e==t.timestamp?t.renderer():this.renderer().interpolate(t.renderer(),(e-this.timestamp)/(t.timestamp-this.timestamp))},game.state.Frame.prototype.drive=function(){const t=game.timing.sToTicksGap(this.driver.delta());return new game.state.Frame(this.index+1,this.timestamp+t,this.driver.drive(game.timing.ticksToS(t)))},game.state.Frame.prototype.apply=function(t){return new game.state.Frame(this.index,this.timestamp,t(this.driver))},game.state.Frame.prototype.rendererOverride=function(t){return new game.state.Frame(this.index,this.timestamp,new game.state.drivers.RendererOverride(this.driver,t))},game.state.Trace.prototype.minTimestamp=function(){return this.frames[0].timestamp+1},game.state.Trace.prototype.maxTimestamp=function(){return this.lastFrame().timestamp+1},game.state.Trace.prototype.timeEventAfter=function(t){return new game.state.TimeEvent(this.maxTimestamp(),t)},game.state.Trace.prototype.timeEventClamped=function(t,e,r){return new game.state.TimeEvent(game.utility.clamp(e,this.minTimestamp(),this.maxTimestamp()+t),r)},game.state.Trace.prototype.lastFrame=function(){return game.utility.array.last(this.frames)},game.state.Trace.prototype.findByTimestamp=function(t){return game.state.Frame.findByTimestamp(this.frames,t)},game.state.Trace.prototype.drive=function(t){for(;this.lastFrame().timestamp<t;)this.updater(this.frames)},game.state.Trace.prototype.renderer=function(t){const e=this.findByTimestamp(t);return 0==e?this.frames[e]:e==this.frames.length?this.frames[e-1]:this.frames[e-1].interpolateRenderer(this.frames[e],t)},game.state.Trace.prototype.render=function(t){this.renderer(t).render()},"undefined"!=typeof exports&&(module.exports=game);