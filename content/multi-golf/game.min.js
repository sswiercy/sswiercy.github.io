const game={utility:{collection:{map:{entries:function(t){const e=[];return t.forEach((function(t,n){e.push([n,t])})),e},keys:function(t){const e=[];return t.forEach((function(t,n){e.push(n)})),e},object:function(t){const e={};return t.forEach((function(t,n){e[n]=t})),e},comparingKeys:function(t){return game.utility.comparators.mapped(t,(function(t){return t[0]}))},setNew:function(t,e,n){game.utility.assert(!t.has(e),"Key already exists"),t.set(e,n)},deleteExisting:function(t,e){game.utility.assert(t.delete(e),"Key does not exist")}},set:{addNew:function(t,e){game.utility.assert(!t.has(e),"Value already exists"),t.add(e)},deleteExisting:function(t,e){game.utility.assert(t.delete(e),"Value does not exist")}},values:function(t){const e=[];return t.forEach((function(t){e.push(t)})),e}},json:{isBoolean:function(t){return"boolean"==typeof t},isNumber:function(t){return"number"==typeof t},isString:function(t){return"string"==typeof t},isArray:function(t){return Array.isArray(t)},isObject:function(t){return"object"==typeof t&&!Array.isArray(t)&&null!==t},isPrimitive:function(t){return null===t||game.utility.json.isBoolean(t)||game.utility.json.isNumber(t)||game.utility.json.isString(t)},isAny:function(t){return game.utility.json.isArray(t)||game.utility.json.isObject(t)||game.utility.json.isPrimitive(t)}},random:{integer:function(t){return Math.floor(t*Math.random())},integerRange:function(t,e){return t+game.utility.random.integer(e-t)},closedRange:function(t,e){return game.utility.random.integerRange(t,e+1)},range:function(t,e){return t+(e-t)*Math.random()},character:function(t){return t.charAt(game.utility.random.integer(t.length))},string:function(t,e){const n=[];for(var r=0;r<e;r++)n.push(game.utility.random.character(t));return n.join("")},generate:function(t,e){do{var n=t()}while(!e(n));return n}},comparators:{default:function(t,e){return t<e?-1:t>e?1:0},mapped:function(t,e){return function(n,r){return t(e(n),e(r))}},ordered:function(t){return function(e,n){for(var r=0;r<t.length;r++){const i=t[r](e,n);if(0!=i)return i}return 0}}},array:{assignLastN:function(t,e,n){t[t.length-e]=n},assignLast:function(t,e){game.utility.array.assignLastN(t,1,e)},lastN:function(t,e){return game.utility.assert(e>0&&e<=t.length,"Out of bounds"),t[t.length-e]},last:function(t){return game.utility.array.lastN(t,1)},pushFirst:function(t){return t.push(t[0]),t},equals:function(t,e,n){return 0==n?t===e:t.length==e.length&&t.every((function(t,r){return game.utility.array.equals(t,e[r],n-1)}))},flatten:function(t){const e=[];return t.forEach((function(t){t.forEach((function(t){e.push(t)}))})),e},binarySearch:function(t,e){for(var n=0,r=t.length;n<r;){const i=Math.floor((n+r)/2);e(t[i])?n=i+1:r=i}return n}},angle:{degToRad:function(t){return t*game.utility.angle.DEG_RAD_RATIO},radToDeg:function(t){return t/game.utility.angle.DEG_RAD_RATIO},DEG_RAD_RATIO:Math.PI/180},assert:function(t,e){if(!t)throw new Error(e)},identity:function(t){return t},constant:function(t){return function(){return t}},lazy:function(t){const e=[];return function(){return 0==e.length&&e.push(t()),e[0]}},discriminate:function(t,e,n,r){const i=new Map;return t.forEach((function(t){const n=e(t);var r=i.get(n);r||(r=[],i.set(n,r)),r.push(t)})),game.utility.collection.map.entries(i).sort(game.utility.collection.map.comparingKeys(n)).map((function(t){return t[1].sort(r)}))},mergeObjects:function(t){const e={};return t.forEach((function(t){Object.keys(t).forEach((function(n){e[n]=t[n]}))})),e},interpolate:function(t,e,n){return t*(1-n)+e*n},clamp:function(t,e,n){return Math.min(Math.max(t,e),n)},towardsZero:function(t,e){return game.utility.assert(e>=0,"Offset must be non-negative"),t<-e?t+e:t>e?t-e:0},modPositive:function(t,e){return t-Math.floor(t/e)*e},parseNumber:function(t,e){const n=t(e);return game.utility.assert(!Number.isNaN(n)&&n.toString()===e,"Invalid number"),n}},geometry:{Vector:function(t,e,n){this.x=t,this.y=e,this.z=n},Mapping:function(t,e){this.u=t,this.v=e},Plane:function(t,e){this.normal=t,this.offset=e},Matrix:function(t){this.data=t},void:{dot:function(t){return this},interpolate:function(t,e){return game.utility.assert(this===t,"Should be both void"),this}}},model:{Color:function(t,e,n){this.r=t,this.g=e,this.b=n},Path:function(t,e){this.mapper=t,this.count=e},Vertex:function(t,e,n,r){this.position=t,this.normal=e,this.color=n,this.checker=r?1:0},Triangle:function(t,e,n){this.a=t,this.b=e,this.c=n}},collision:{handlers:{Collection:function(t){this.handlers=t},Rebound:function(t,e,n,r,i){this.minVelocity=t,this.minAngle=e,this.restitution=n,this.minFriction=r,this.friction=i},Static:function(t){this.callable=t}},Contact:function(t,e,n,r){this.ball=t,this.position=e,this.vector=n,this.length=r},Vertex:function(t,e){this.position=t,this.handler=e},Triangle:function(t,e,n){this.a=t,this.b=e,this.c=n,this.ab=t.position.plane(e.position),this.bc=e.position.plane(n.position),this.ca=n.position.plane(t.position);const r=this.ab.normal.cross(this.bc.normal);this.abT=t.position.planeNormal(n.position,r.cross(this.ab.normal)),this.bcT=e.position.planeNormal(t.position,r.cross(this.bc.normal)),this.caT=n.position.planeNormal(e.position,r.cross(this.ca.normal))},Sphere:function(t,e){this.center=t,this.radius=e,this.sqrRadius=Math.pow(e,2);const n=new game.geometry.Vector(e,e,e);this.min=t.subtract(n),this.max=t.add(n)},Index:function(t){this.size=t,this.map=new Map}},physics:{Motion:function(t,e){this.position=t,this.velocity=e},Ball:function(t,e,n){this.motion=t,this.resting=e,this.properties=n},Body:function(t,e){this.model=t,this.collision=e},Course:function(t,e){this.origin=t,this.body=e},Material:function(t,e,n){this.collision=t,this.color=e,this.checker=n},Generator:function(t,e){this.constraint=t,this.handler=e}},constraints:{string:{lengthAtLeast:function(t){return function(e){return e.length>=t}},lengthAtMost:function(t){return function(e){return e.length<=t}},charsFrom:function(t){return function(e){for(var n=0;n<e.length;n++)if(t.indexOf(e[n])<0)return!1;return!0}},with:function(t,e,n){return game.constraints.allMatch([game.utility.json.isString,game.constraints.string.lengthAtLeast(t),game.constraints.string.lengthAtMost(e),game.constraints.string.charsFrom(n)])},PLAYER_KEY_CHARS:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",PLAYER_KEY_LENGTH:16,PLAYER_NAME_CHARS:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz",PLAYER_NAME_MAX_LENGTH:16,SESSION_KEY_CHARS:"abcdefghijklmnopqrstuvwxyz",SESSION_KEY_LENGTH:8},number:{isInteger:function(t){return Number.isInteger(t)},isIntegerWith:function(t){return game.constraints.allMatch([game.constraints.number.isInteger,t])},isFloat:function(t){return Number.isFinite(t)},inRange:function(t,e){return function(n){return n>=t&&n<=e}},inFloatRange:function(t,e){return game.constraints.number.inRange(t/game.constraints.number.FLOAT_TOLERANCE,e*game.constraints.number.FLOAT_TOLERANCE)},isFloatWith:function(t){return game.constraints.allMatch([game.constraints.number.isFloat,t])},isAtLeast:function(t){return function(e){return e>=t}},PLAYER_ID_MIN_EXP:2,FLOAT_TOLERANCE:1.000001},array:{isArrayWith:function(t){return game.constraints.allMatch([game.utility.json.isArray,t])},hasLength:function(t){return function(e){return e.length==t}},hasElements:function(t){return function(e){return t.every((function(t,n){return t(e[n])}))}},hasElementsExactly:function(t){return game.constraints.allMatch([game.constraints.array.hasLength(t.length),game.constraints.array.hasElements(t)])},withElementsExactly:function(t){return game.constraints.array.isArrayWith(game.constraints.array.hasElementsExactly(t))},withLengthElements:function(t,e){return game.constraints.array.isArrayWith(game.constraints.allMatch([game.constraints.array.hasLength(e),game.constraints.array.allElements(t)]))},allElements:function(t){return function(e){return e.every((function(e){return t(e)}))}},isDistinctBy:function(t){return function(e){return new Set(e.map(t)).size==e.length}},andDistinctBy:function(t,e){return game.constraints.allMatch([t,game.constraints.array.isDistinctBy(e)])},tableDistinctBy:function(t,e){return game.constraints.array.isArrayWith(game.constraints.array.andDistinctBy(game.constraints.array.allElements(game.constraints.array.withElementsExactly(t)),e))}},object:{isObjectWith:function(t){return game.constraints.allMatch([game.utility.json.isObject,t])},hasNumberOfFields:function(t){return function(e){return Object.keys(e).length==t}},hasKey:function(t){return function(e){return e.hasOwnProperty(t)}},hasValue:function(t,e){return function(n){return e(n[t])}},hasField:function(t,e){return game.constraints.allMatch([game.constraints.object.hasKey(t),game.constraints.object.hasValue(t,e)])},hasFieldOptional:function(t,e){return game.constraints.anyMatch([game.constraints.not(game.constraints.object.hasKey(t)),game.constraints.object.hasValue(t,e)])},hasFields:function(t){return game.constraints.allMatch(Object.keys(t).map((function(e){return game.constraints.object.hasField(e,t[e])})))},hasFieldsOnly:function(t){return function(e){return Object.keys(e).every((function(e){return t.has(e)}))}},withFields:function(t){return game.constraints.object.isObjectWith(game.constraints.object.hasFields(t))},hasFieldsExactly:function(t){return game.constraints.allMatch([game.constraints.object.hasNumberOfFields(Object.keys(t).length),game.constraints.object.hasFields(t)])},withFieldsExactly:function(t){return game.constraints.object.isObjectWith(game.constraints.object.hasFieldsExactly(t))},hasFieldsOptional:function(t){const e=Object.keys(t);return game.constraints.allMatch([game.constraints.object.hasFieldsOnly(new Set(e))].concat(e.map((function(e){return Array.isArray(t[e])?(game.utility.assert(1==t[e].length,"Exactly one element expected for an optional field"),game.constraints.object.hasFieldOptional(e,t[e][0])):game.constraints.object.hasField(e,t[e])}))))},withFieldsOptional:function(t){return game.constraints.object.isObjectWith(game.constraints.object.hasFieldsOptional(t))}},alwaysTrue:function(){return!0},allMatch:function(t){return function(e){return t.every((function(t){return t(e)}))}},anyMatch:function(t){return function(e){return t.some((function(t){return t(e)}))}},not:function(t){return function(e){return!t(e)}},equals:function(t){return function(e){return e===t}},contains:function(t){return function(e){return t.has(e)}},containsKey:function(t){return game.constraints.contains(new Set(Object.keys(t)))}},network:{Procedure:function(t,e){this.name=t,this.constraints=e},Call:function(t,e){this.procedure=t,this.params=t.validate(e)},Parser:function(t){this.procedures=t,this.constraint=this.buildConstraint()},Player:function(t,e,n,r,i){this.id=t,this.key=e,this.name=n,this.rating=r,this.timestamps=i},PlayerState:function(t,e,n,r){this.player=t,this.ball=e,this.strokes=n,this.left=r},PlayerResult:function(t,e,n,r){this.player=t,this.strokes=e,this.left=n,this.rating=r},Frame:function(t,e,n,r,i){this.index=t,this.timestamp=e,this.totalTime=n,this.endTime=r,this.playerActions=i},require:function(t,e,n){return game.utility.assert(e(t),n),t},COURSES:function(){const t=game.physics.Generator.build();return[courses.COMPOSITE.SIMPLE_STRAIGHT,courses.COMPOSITE.VERTICAL_CURVE_OVER,courses.COMPOSITE.VOLCANO,courses.COMPOSITE.CROSS_JUMP,courses.COMPOSITE.BRIDGED_ISLANDS,courses.COMPOSITE.S_CURVE].map((function(e){return t.generate.bind(t,e)}))},DOMAIN:"4u7lyzh3h0kf7v5d.myfritz.net",PORT:43384},timing:{assertTicks:function(t){game.utility.assert(Number.isInteger(t),"Not an integer")},sToMs:function(t){return t*game.timing.MS_PER_S},sToTicks:function(t){return Math.round(t*game.timing.TICKS_PER_S)},sToTicksGap:function(t){return Math.max(game.timing.sToTicks(t),game.timing.TICKS_PER_GAP)},ticksToS:function(t){return game.timing.assertTicks(t),t/game.timing.TICKS_PER_S},ticksToMs:function(t){return game.timing.sToMs(game.timing.ticksToS(t))},msToS:function(t){return t/game.timing.MS_PER_S},msToTicks:function(t){return game.timing.sToTicks(game.timing.msToS(t))},nowTicks:function(t){return Math.max(game.timing.msToTicks(performance.now()-t),0)},nowS:function(t){return Math.max(game.timing.msToS(performance.now()-t),0)},driver:function(t,e,n,r){return new game.state.drivers.Conditional(new game.state.drivers.Conditional(new game.state.drivers.Timer(e),t,(function(t,e){return t.time>=game.timing.GAME_START_DURATION&&t.time<=game.timing.PLAYABLE_END&&!r(e)})),new game.state.drivers.Timer(n),(function(t,e){return!t.satisfied&&t.unconditionalDriver.time>=game.timing.GAME_START_DURATION}))},GAME_START_DURATION:5,GAME_END_DURATION:3,PLAYABLE_DURATION:120,NORMAL_DELTA:.02,TICKS_PER_S:1e4,TICKS_PER_GAP:1,MS_PER_S:1e3},state:{drivers:{Player:function(t){this.state=t},Camera:function(t,e,n){this.driver=t,this.camera=e,this.position=n},Actioning:function(t,e){this.driver=e(t),this.action=e},RendererWrapper:function(t,e){this.driver=t,this.fRenderer=e},RendererOverride:function(t,e){this.driver=t,this.fRenderer=e,this.dRenderer=e(t)},Timer:function(t){this.time=t},Conditional:function(t,e,n){this.unconditionalDriver=t,this.conditionalDriver=e,this.condition=n,this.satisfied=n(t,e)},Multi:function(t){this.drivers=t},idle:{delta:function(){return game.timing.NORMAL_DELTA},drive:function(t){return this}}},renderers:{Wrapper:function(t,e){this.geometry=t,this.fRenderer=e},Discrete:function(t){this.fRenderer=t},Multi:function(t){this.renderers=t},cross:function(t,e,n,r){return t.interpolate(e.interpolate(n,1/r),r)}},actions:{constant:function(t){return function(){return t}},conditional:function(t,e){return function(n){return e(n)?t(n):n}},ifExisting:function(t,e){return function(n){return(n?t:e)(n)}},illegal:function(t){throw new Error("Illegal action")},merge:function(t){return function(e){return t.forEach((function(t){e=t(e)})),e}},dynamic:function(t){return function(e){return t(e)(e)}}},updaters:{TimeEvent:function(){this.events=[]},IndexEvent:function(){this.events=[]},TimeSync:function(){this.syncs=[]},driver:function(t){t.push(game.utility.array.last(t).drive())},multi:function(t){return function(e){t.forEach((function(t){t(e)}))}},indexPruner:function(t,e,n){return function(r){game.state.Frame.pruneIndex(r,t(r),e,n)}},timestampPruner:function(t,e,n){return function(r){game.state.Frame.pruneTimestamp(r,t(r),e,n)}},ifLastChanged:function(t,e){return function(n){const r=game.utility.array.last(n);t(n);r!=game.utility.array.last(n)&&e(n)}},extrapolate:function(t){if(t.length>=3){const e=game.utility.array.last(t),n=game.utility.array.lastN(t,2),r=game.utility.array.lastN(t,3);game.utility.array.assignLastN(t,2,n.rendererOverride(game.utility.constant(game.state.renderers.cross(n.renderer(),r.renderer(),e.renderer(),2))))}},smoother:function(t,e,n,r){var i;function a(t){const n=game.utility.array.last(t),a=n.timestamp+game.timing.TICKS_PER_GAP;!function(t){for(;game.utility.array.last(i).timestamp<t;)e(i)}(a);const o=game.state.Frame.findByTimestamp(i,n.timestamp);game.utility.assert(o<i.length,"Not enough frames for interpolation");const s=i[o].timestamp<a?o+1:o;game.utility.assert(s<i.length,"Not enough frames for smoothing");const m=i[s];var c,u;game.utility.assert(m.timestamp>=a,"Gap not satisfied"),t.push(new game.state.Frame(n.index+1,m.timestamp,new game.state.drivers.RendererOverride(m.driver,game.utility.constant(game.state.renderers.cross((c=n,i[u=o].timestamp==c.timestamp?i[u].renderer():(game.utility.assert(u>0,"Inner frames are ahead"),i[u-1].interpolateRenderer(i[u],c.timestamp))),n.renderer(),m.renderer(),function(t,e){return Math.pow(r,game.timing.ticksToS(e.timestamp-t.timestamp))+1}(n,m))))))}return function(e){i||(i=e.slice()),t(i),a(e),n(i),e.splice(0,e.length-2)}}},TimeEvent:function(t,e){this.timestamp=t,this.action=e},IndexEvent:function(t,e){this.index=t,this.action=e},TimeSync:function(t,e){this.index=t,this.timestamp=e},Frame:function(t,e,n){this.index=t,this.timestamp=e,this.driver=n},Trace:function(t,e){this.frames=[t],this.updater=e}}};game.utility.collection.map.KEY_COMPARATOR=game.utility.comparators.mapped(game.utility.comparators.default,(function(t){return t[0]})),game.geometry.Vector.fromData=function(t){return new game.geometry.Vector(t[0],t[1],t[2])},game.geometry.Vector.fromXyz=function(t){return new game.geometry.Vector(t.x,t.y,t.z)},game.geometry.Vector.prototype.negate=function(){return new game.geometry.Vector(-this.x,-this.y,-this.z)},game.geometry.Vector.prototype.add=function(t){return new game.geometry.Vector(this.x+t.x,this.y+t.y,this.z+t.z)},game.geometry.Vector.prototype.subtract=function(t){return new game.geometry.Vector(this.x-t.x,this.y-t.y,this.z-t.z)},game.geometry.Vector.prototype.multiply=function(t){return new game.geometry.Vector(this.x*t,this.y*t,this.z*t)},game.geometry.Vector.prototype.multiplyVector=function(t){return new game.geometry.Vector(this.x*t.x,this.y*t.y,this.z*t.z)},game.geometry.Vector.prototype.divide=function(t){return new game.geometry.Vector(this.x/t,this.y/t,this.z/t)},game.geometry.Vector.prototype.divideVector=function(t){return new game.geometry.Vector(this.x/t.x,this.y/t.y,this.z/t.z)},game.geometry.Vector.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},game.geometry.Vector.prototype.cross=function(t){return new game.geometry.Vector(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)},game.geometry.Vector.prototype.componentWise=function(t,e){return new game.geometry.Vector(e(this.x,t.x),e(this.y,t.y),e(this.z,t.z))},game.geometry.Vector.prototype.min=function(t){return this.componentWise(t,Math.min)},game.geometry.Vector.prototype.max=function(t){return this.componentWise(t,Math.max)},game.geometry.Vector.prototype.towardsZero=function(t){return this.componentWise(t,game.utility.towardsZero)},game.geometry.Vector.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Vector.prototype.floor=function(){return new game.geometry.Vector(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))},game.geometry.Vector.prototype.sqrLength=function(){return this.dot(this)},game.geometry.Vector.prototype.length=function(){return Math.sqrt(this.sqrLength())},game.geometry.Vector.prototype.normalize=function(){return this.divide(this.length())},game.geometry.Vector.prototype.transform=function(t){return game.geometry.Matrix.translation(this).dot(t).translation()},game.geometry.Vector.prototype.planeNormal=function(t,e){return game.geometry.Plane.throughScaled(this,t,e)},game.geometry.Vector.prototype.plane=function(t){return this.planeNormal(t,t.subtract(this))},game.geometry.Vector.prototype.xyMapping=function(){return new game.geometry.Mapping(this.x,this.y)},game.geometry.Vector.prototype.toShader=function(){return["vec3(",this.x.toExponential(),",",this.y.toExponential(),",",this.z.toExponential(),")"].join("")},game.geometry.Vector.prototype.data=function(){return[this.x,this.y,this.z]},game.geometry.Mapping.random=function(){return new game.geometry.Mapping(Math.random(),Math.random())},game.geometry.Mapping.angle=function(t){return new game.geometry.Mapping(Math.cos(t),Math.sin(t))},game.geometry.Mapping.rotator=function(t){const e=game.geometry.Mapping.angle(t),n=e.rotate90();return function(t){return t.multiply2(e,n)}},game.geometry.Mapping.prototype.angle=function(){return Math.atan2(this.v,this.u)},game.geometry.Mapping.prototype.rotate90=function(){return new game.geometry.Mapping(-this.v,this.u)},game.geometry.Mapping.prototype.negate=function(){return new game.geometry.Mapping(-this.u,-this.v)},game.geometry.Mapping.prototype.add=function(t){return new game.geometry.Mapping(this.u+t.u,this.v+t.v)},game.geometry.Mapping.prototype.subtract=function(t){return new game.geometry.Mapping(this.u-t.u,this.v-t.v)},game.geometry.Mapping.prototype.multiply=function(t){return new game.geometry.Mapping(this.u*t,this.v*t)},game.geometry.Mapping.prototype.multiply2=function(t,e){return t.multiply(this.u).add(e.multiply(this.v))},game.geometry.Mapping.prototype.multiplyMapping=function(t){return new game.geometry.Mapping(this.u*t.u,this.v*t.v)},game.geometry.Mapping.prototype.divide=function(t){return new game.geometry.Mapping(this.u/t,this.v/t)},game.geometry.Mapping.prototype.dot=function(t){return this.u*t.u+this.v*t.v},game.geometry.Mapping.prototype.sqrLength=function(){return this.dot(this)},game.geometry.Mapping.prototype.length=function(){return Math.sqrt(this.sqrLength())},game.geometry.Mapping.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.geometry.Mapping.prototype.interpolateMapping=function(t,e){return this.add(t.subtract(this).multiplyMapping(e))},game.geometry.Mapping.prototype.data=function(){return[this.u,this.v]},game.geometry.Plane.x=function(t){return new game.geometry.Plane(new game.geometry.Vector(1,0,0),t)},game.geometry.Plane.y=function(t){return new game.geometry.Plane(new game.geometry.Vector(0,1,0),t)},game.geometry.Plane.z=function(t){return new game.geometry.Plane(new game.geometry.Vector(0,0,1),t)},game.geometry.Plane.through=function(t,e){return new game.geometry.Plane(e,t.dot(e))},game.geometry.Plane.throughScaled=function(t,e,n){return game.geometry.Plane.through(t,n.divide(e.subtract(t).dot(n)))},game.geometry.Plane.prototype.dot=function(t){return this.normal.dot(t)},game.geometry.Plane.prototype.distance=function(t){return this.dot(t)-this.offset},game.geometry.Plane.prototype.section=function(t){return Math.floor(t/this.offset)},game.geometry.Plane.prototype.cut=function(t){const e=t.map(function(t){return this.dot(t)}.bind(this)),n=e.map(function(t){return this.section(t)}.bind(this)),r=new Map,i=n.reduce((function(t,e){return Math.min(t,e)})),a=n.reduce((function(t,e){return Math.max(t,e)}));for(var o=i;o<=a;o++)r.set(o,[]);for(var s=0;s<t.length;s++){const i=(s+1)%t.length;r.get(n[s]).push(t[s]);for(o=n[s];o<n[i];o++){const n=t[s].interpolate(t[i],((o+1)*this.offset-e[s])/(e[i]-e[s]));r.get(o).push(n),r.get(o+1).push(n)}for(o=n[s];o>n[i];o--){const n=t[s].interpolate(t[i],(o*this.offset-e[s])/(e[i]-e[s]));r.get(o).push(n),r.get(o-1).push(n)}}return r},game.geometry.Matrix.SIZE=4,game.geometry.Matrix.IDENTITY=new game.geometry.Matrix([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),game.geometry.Matrix.projection=function(t,e,n,r){const i=Math.pow(t,2),a=r-n;return new game.geometry.Matrix([Math.sqrt(1/i+1)/e,0,0,0,0,Math.sqrt(i+1)/e,0,0,0,0,1+2*n/a,1,0,0,n*r*-2/a,0])},game.geometry.Matrix.translation=function(t){return new game.geometry.Matrix([1,0,0,0,0,1,0,0,0,0,1,0,t.x,t.y,t.z,1])},game.geometry.Matrix.scaling=function(t){return new game.geometry.Matrix([t.x,0,0,0,0,t.y,0,0,0,0,t.z,0,0,0,0,1])},game.geometry.Matrix.rotationX=function(t){return new game.geometry.Matrix([1,0,0,0,0,Math.cos(t),Math.sin(t),0,0,-Math.sin(t),Math.cos(t),0,0,0,0,1])},game.geometry.Matrix.rotationY=function(t){return new game.geometry.Matrix([Math.cos(t),0,-Math.sin(t),0,0,1,0,0,Math.sin(t),0,Math.cos(t),0,0,0,0,1])},game.geometry.Matrix.rotationZ=function(t){return new game.geometry.Matrix([Math.cos(t),Math.sin(t),0,0,-Math.sin(t),Math.cos(t),0,0,0,0,1,0,0,0,0,1])},game.geometry.Matrix.indexOf=function(t,e){return game.geometry.Matrix.SIZE*t+e},game.geometry.Matrix.prototype.translation=function(){return new game.geometry.Vector(this.data[game.geometry.Matrix.indexOf(3,0)],this.data[game.geometry.Matrix.indexOf(3,1)],this.data[game.geometry.Matrix.indexOf(3,2)]).divide(this.data[game.geometry.Matrix.indexOf(3,3)])},game.geometry.Matrix.prototype.add=function(t){return new game.geometry.Matrix(this.data.map((function(e,n){return e+t.data[n]})))},game.geometry.Matrix.prototype.dot=function(t){const e=this.data.slice();for(var n=0;n<game.geometry.Matrix.SIZE;n++)for(var r=0;r<game.geometry.Matrix.SIZE;r++){for(var i=0,a=0;a<game.geometry.Matrix.SIZE;a++)i+=this.data[game.geometry.Matrix.indexOf(n,a)]*t.data[game.geometry.Matrix.indexOf(a,r)];e[game.geometry.Matrix.indexOf(n,r)]=i}return new game.geometry.Matrix(e)},game.geometry.Matrix.prototype.multiply=function(t){return new game.geometry.Matrix(this.data.map((function(e){return e*t})))},game.geometry.Matrix.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.model.Color.WHITE=new game.model.Color(1,1,1),game.model.Color.PRIMARIES=[new game.model.Color(1,0,0),new game.model.Color(1,1,0),new game.model.Color(0,1,0),new game.model.Color(0,1,1),new game.model.Color(0,0,1),new game.model.Color(1,0,1)],game.model.Color.interpolatePrimaries=function(t){const e=(t-Math.floor(t))*game.model.Color.PRIMARIES.length,n=Math.floor(e);return game.model.Color.PRIMARIES[n].interpolate(game.model.Color.PRIMARIES[(n+1)%game.model.Color.PRIMARIES.length],e-n)},game.model.Color.prototype.compress=function(t,e){return this.multiply(e-t).add(game.model.Color.WHITE.multiply(t))},game.model.Color.prototype.add=function(t){return new game.model.Color(this.r+t.r,this.g+t.g,this.b+t.b)},game.model.Color.prototype.subtract=function(t){return new game.model.Color(this.r-t.r,this.g-t.g,this.b-t.b)},game.model.Color.prototype.multiply=function(t){return new game.model.Color(this.r*t,this.g*t,this.b*t)},game.model.Color.prototype.interpolate=function(t,e){return this.multiply(1-e).add(t.multiply(e))},game.model.Color.prototype.round=function(){return new game.model.Color(Math.round(this.r),Math.round(this.g),Math.round(this.b))},game.model.Color.prototype.glClear=function(t){t.clearColor(this.r,this.g,this.b,1)},game.model.Color.prototype.data=function(){return[this.r,this.g,this.b]},game.model.Path.AUTO_START=8,game.model.Path.AUTO_MAX_ERROR=.1,game.model.Path.NORMAL_DELTA=.01,game.model.Path.error=function(t,e){return t.cross(e).length()/t.length()},game.model.Path.auto=function(t){for(var e=new game.model.Path(t,1),n=new game.model.Path(t,game.model.Path.AUTO_START);;){if(n.error()<=game.model.Path.AUTO_MAX_ERROR){for(;e.count<n.count;){const r=new game.model.Path(t,Math.floor((e.count+n.count)/2));r.error()<=game.model.Path.AUTO_MAX_ERROR?n=r:e=new game.model.Path(t,r.count+1)}return n}e=n,n=new game.model.Path(t,2*e.count)}},game.model.Path.autoVertex=function(t){return new game.model.Path(t,1).autoVertex()},game.model.Path.point=function(t){return new game.model.Path((function(e){return t}),1)},game.model.Path.sphere=function(t,e){return new game.model.Path((function(n){const r=Math.PI*n,i=Math.sin(r);return new game.model.Path((function(e){const n=2*Math.PI*e,a=new game.geometry.Vector(Math.cos(n)*i,Math.sin(n)*i,Math.cos(r));return new game.model.Vertex(a.multiply(t),a)}),Math.ceil(2*Math.PI*i/e))}),Math.ceil(Math.PI/e))},game.model.Path.arc=function(t,e){return game.model.Path.autoVertex((function(n){const r=e*n,i=Math.cos(r),a=Math.sin(r);return new game.model.Vertex(new game.geometry.Vector(t*i,t*a,0),new game.geometry.Vector(-a,i,0).multiply(Math.sign(e)))}))},game.model.Path.functionOneToOne=function(t,e){return game.model.Path.autoVertex((function(n){return new game.model.Vertex(new game.geometry.Vector(n,0,t(n)),new game.geometry.Vector(1,0,e(n)))}))},game.model.Path.polynomial=function(t){return game.model.Path.functionOneToOne((function(e){for(var n=0,r=0;r<t.length;r++)n=n*e+t[r];return n}),(function(e){for(var n=0,r=1;r<t.length;r++)n=n*e+t[r-1]*(t.length-r);return n}))},game.model.Path.sinusoid=function(t,e,n){const r=2*Math.PI*e,i=2*Math.PI*n,a=r*t;return game.model.Path.functionOneToOne((function(e){return t*Math.sin(r*e+i)}),(function(t){return a*Math.cos(r*t+i)}))},game.model.Path.prototype.error=function(){const t=this.waypoints();for(var e=0,n=2;n<t.length;n++)e=Math.max(game.model.Path.error(t[n].subtract(t[n-2]),t[n-1].subtract(t[n-2])),e);return e},game.model.Path.prototype.map=function(t){return new game.model.Path(function(e){return t(this.mapper(e))}.bind(this),this.count)},game.model.Path.prototype.transform=function(t){return this.map((function(e){return e.transform(t)}))},game.model.Path.prototype.negateNormals=function(){return this.map((function(t){return t.negateNormal()}))},game.model.Path.prototype.withNormal=function(t){return this.map((function(e){return e.withNormal(t)}))},game.model.Path.prototype.withColor=function(t){return this.map((function(e){return e.withColor(t)}))},game.model.Path.prototype.withChecker=function(t){return this.map((function(e){return e.withChecker(t)}))},game.model.Path.prototype.waypoints=function(){const t=[];for(var e=0;e<=this.count;e++)t.push(this.mapper(e/Math.max(this.count,1)));return t},game.model.Path.prototype.selfFan=function(){const t=this.mapper(0),e=this.normalizedTo(game.model.Path.point(t.position)).waypoints();return game.model.Triangle.fan(t,e.slice(1))},game.model.Path.prototype.fan=function(t){return game.model.Triangle.fan(t,this.normalizedTo(game.model.Path.point(t.position)).waypoints())},game.model.Path.prototype.strip=function(t){return game.model.Triangle.strip2(this.normalizedTo(t.position()).waypoints(),t.normalizedTo(this.position()).negateNormals().waypoints())},game.model.Path.prototype.radial=function(t){return this.map((function(e){const n=e.position.xyMapping(),r=n.angle(),i=n.length();return t.transform(game.geometry.Matrix.scaling(new game.geometry.Vector(i,i,1)).dot(game.geometry.Matrix.rotationZ(r)).dot(game.geometry.Matrix.translation(new game.geometry.Vector(0,0,e.position.z)))).map((function(t){return t.withNormal(e.normal.transform(game.geometry.Matrix.rotationZ(t.position.xyMapping().angle()+r)).cross(t.normal).normalize())})).autoVertex()}))},game.model.Path.prototype.surface=function(){const t=this.waypoints(),e=[];for(var n,r=0;r<t.length;r++){const i=t[r].waypoints();n&&e.push(game.model.Triangle.strip2(n,i)),n=i}return game.utility.array.flatten(e)},game.model.Path.prototype.auto=function(){return game.model.Path.auto(this.mapper)},game.model.Path.prototype.autoVertex=function(){return new game.model.Path(this.mapper,this.position().auto().count)},game.model.Path.prototype.vertex=function(){return this.map((function(t){return new game.model.Vertex(t)}))},game.model.Path.prototype.position=function(){return this.map((function(t){return t.position}))},game.model.Path.prototype.normalize=function(){return new game.model.Path(function(t){return this.mapper(t).withNormal(this.mapper(t+game.model.Path.NORMAL_DELTA).position.subtract(this.mapper(t-game.model.Path.NORMAL_DELTA).position).normalize())}.bind(this),this.count)},game.model.Path.prototype.normalizedTo=function(t){return new game.model.Path(function(e){const n=this.mapper(e);return n.withNormal(n.normal.cross(n.position.subtract(t.mapper(e))).normalize())}.bind(this),this.count)},game.model.Vertex.prototype.flip=function(){return this.withNormal(this.normal.negate())},game.model.Vertex.prototype.transform=function(t){return new game.model.Vertex(this.position.transform(t),this.normal.transform(t).subtract(t.translation()),this.color,this.checker)},game.model.Vertex.prototype.withNormal=function(t){return new game.model.Vertex(this.position,t,this.color,this.checker)},game.model.Vertex.prototype.withColor=function(t){return new game.model.Vertex(this.position,this.normal,t,this.checker)},game.model.Vertex.prototype.withChecker=function(t){return new game.model.Vertex(this.position,this.normal,this.color,t)},game.model.Vertex.prototype.negateNormal=function(){return new game.model.Vertex(this.position,this.normal.negate(),this.color,this.checker)},game.model.Vertex.prototype.collision=function(t){return new game.collision.Vertex(this.position,t)},game.model.Vertex.prototype.data=function(){return game.utility.array.flatten([this.position.data(),this.normal.data(),this.color.data(),[this.checker]])},game.model.Triangle.vertices=function(t){return game.utility.array.flatten(t.map((function(t){return t.vertices()})))},game.model.Triangle.strip1=function(t){return t.slice(2).map((function(e,n){const r=n%2;return new game.model.Triangle(t[n+r],t[n+1-r],e)}))},game.model.Triangle.strip2=function(t,e){const n=[];for(var r=0,i=0;r+1<t.length||i+1<e.length;)(2*r+1)*(e.length-1)>(2*i+1)*(t.length-1)?(n.push(new game.model.Triangle(e[i],t[r],e[i+1])),i++):(n.push(new game.model.Triangle(e[i],t[r],t[r+1])),r++);return n},game.model.Triangle.fan=function(t,e){const n=[];for(var r=1;r<e.length;r++){const i=new game.model.Triangle(t,e[r-1],e[r]);n.push(new game.model.Triangle(i.normalize().a,i.b,i.c))}return n},game.model.Triangle.flip=function(t){return t.map((function(t){return t.flip()}))},game.model.Triangle.transform=function(t,e){return t.map((function(t){return t.transform(e)}))},game.model.Triangle.prototype.flip=function(){return new game.model.Triangle(this.a.flip(),this.c.flip(),this.b.flip())},game.model.Triangle.prototype.normalize=function(){const t=this.a.position.subtract(this.b.position).cross(this.c.position.subtract(this.b.position)).normalize();return new game.model.Triangle(this.a.withNormal(t),this.b.withNormal(t),this.c.withNormal(t))},game.model.Triangle.prototype.transform=function(t){return new game.model.Triangle(this.a.transform(t),this.b.transform(t),this.c.transform(t))},game.model.Triangle.prototype.vertices=function(){return[this.a,this.b,this.c]},game.model.Triangle.prototype.collision=function(t){return new game.collision.Triangle(this.a.collision(t),this.b.collision(t),this.c.collision(t))},game.collision.handlers.Collection.prototype.add=function(t){if(this.handlers.length!==t.handlers.length)throw new Error("Different sizes of collections");return new game.collision.handlers.Collection(this.handlers.map((function(e,n){return e.add(t.handlers[n])})))},game.collision.handlers.Collection.prototype.multiply=function(t){return new game.collision.handlers.Collection(this.handlers.map((function(e){return e.multiply(t)})))},game.collision.handlers.Collection.prototype.handle=function(t){return this.handlers.forEach((function(e){t=t.withBall(e.handle(t))})),t.ball},game.collision.handlers.Rebound.prototype.add=function(t){return new game.collision.handlers.Rebound(this.minVelocity+t.minVelocity,this.minAngle+t.minAngle,this.restitution+t.restitution,this.minFriction+t.minFriction,this.friction+t.friction)},game.collision.handlers.Rebound.prototype.multiply=function(t){return new game.collision.handlers.Rebound(this.minVelocity*t,this.minAngle*t,this.restitution*t,this.minFriction*t,this.friction*t)},game.collision.handlers.Rebound.prototype.threshold=function(t){return Math.max(this.minVelocity,this.minAngle*t)},game.collision.handlers.Rebound.prototype.handle=function(t){const e=t.ball.motion.velocity,n=t.direction(),r=Math.max(-e.dot(n),0),i=this.threshold(e.length()),a=Math.max(r-i,0)*this.restitution,o=a/Math.max(r,i);return t.ball.addMotion(new game.physics.Motion(n.multiply(t.depth()*(1+o)),n.multiply(r+a).subtract(this.frictionVelocity(e,n,r))))},game.collision.handlers.Rebound.prototype.frictionVelocity=function(t,e,n){const r=t.add(e.multiply(n)),i=Math.max(this.friction*n,this.minFriction),a=i/Math.max(r.length(),i);return r.multiply(a)},game.collision.handlers.Static.BALL_COMPLETION=new game.collision.handlers.Static((function(t){return t.ball.complete()})),game.collision.handlers.Static.prototype.add=function(t){return this},game.collision.handlers.Static.prototype.multiply=function(t){return this},game.collision.handlers.Static.prototype.handle=function(t){return this.callable(t)},game.collision.Contact.prototype.depth=function(){return this.ball.properties.radius-this.length},game.collision.Contact.prototype.direction=function(){return this.vector.divide(this.length)},game.collision.Contact.prototype.withBall=function(t){return new game.collision.Contact(t,this.position,this.vector,this.length)},game.collision.Vertex.prototype.transform=function(t){return new game.collision.Vertex(this.position.transform(t),this.handler)},game.collision.Triangle.fromModel=function(t,e){return t.map((function(t){return t.collision(e)}))},game.collision.Triangle.transform=function(t,e){return t.map((function(t){return t.transform(e)}))},game.collision.Triangle.prototype.project=function(t){const e=this.abT.distance(t),n=this.bcT.distance(t),r=this.caT.distance(t),i=Math.min(e,n,r);if(i>=0)return new game.geometry.Vector(n,r,e);if(i==e){const e=game.utility.clamp(this.ab.distance(t),0,1);return new game.geometry.Vector(1-e,e,0)}if(i==n){const e=game.utility.clamp(this.bc.distance(t),0,1);return new game.geometry.Vector(0,1-e,e)}if(i==r){const e=game.utility.clamp(this.ca.distance(t),0,1);return new game.geometry.Vector(e,0,1-e)}},game.collision.Triangle.prototype.interpolatePosition=function(t){return this.a.position.multiply(t.x).add(this.b.position.multiply(t.y)).add(this.c.position.multiply(t.z))},game.collision.Triangle.prototype.interpolateHandler=function(t){return this.a.handler.multiply(t.x).add(this.b.handler.multiply(t.y)).add(this.c.handler.multiply(t.z))},game.collision.Triangle.prototype.vertices=function(){return[this.a,this.b,this.c]},game.collision.Triangle.prototype.positions=function(){return this.vertices().map((function(t){return t.position}))},game.collision.Triangle.prototype.transform=function(t){return new game.collision.Triangle(this.a.transform(t),this.b.transform(t),this.c.transform(t))},game.collision.Sphere.prototype.size=function(){return this.max.subtract(this.min)},game.collision.Sphere.prototype.contains=function(t){return t.subtract(this.center).sqrLength()<this.sqrRadius},game.collision.Sphere.prototype.model=function(t,e){return game.model.Triangle.transform(game.model.Path.sphere(this.radius,t).withColor(e).surface(),game.geometry.Matrix.translation(this.center))},game.collision.Sphere.prototype.renderer=function(t,e,n,r){const i=t.gl,a=t.renderer(this.model(e,n)),o=t.renderer(this.model(e,r));return function(t){a.render(t),i.depthFunc(i.GREATER),o.render(t),i.depthFunc(i.LESS)}},game.collision.Index.key=function(t){return[t.x,t.y,t.z].join(",")},game.collision.Index.prototype.count=function(){return game.utility.collection.values(this.map).map((function(t){return t.size})).reduce((function(t,e){return t+e}),0)},game.collision.Index.prototype.pointCell=function(t){return t.divideVector(this.size).floor()},game.collision.Index.prototype.triangleCells=function(t){const e=[];return game.geometry.Plane.x(this.size.x).cut(t.positions()).forEach(function(t,n){game.geometry.Plane.y(this.size.y).cut(t).forEach(function(t,r){game.geometry.Plane.z(this.size.z).cut(t).forEach((function(t,i){e.push(new game.geometry.Vector(n,r,i))}))}.bind(this))}.bind(this)),e},game.collision.Index.prototype.sphereCells=function(t){const e=[],n=this.pointCell(t.min),r=this.pointCell(t.max),i=this.pointCell(t.center);for(var a=n.x;a<=r.x;a++)for(var o=n.y;o<=r.y;o++)for(var s=n.z;s<=r.z;s++)((a==i.x)+(o==i.y)+(s==i.z)>1||t.contains(new game.geometry.Vector(a+(a<i.x),o+(o<i.y),s+(s<i.z)).multiplyVector(this.size)))&&e.push(new game.geometry.Vector(a,o,s));return e},game.collision.Index.prototype.queryCell=function(t){return this.map.get(game.collision.Index.key(t))},game.collision.Index.prototype.addCell=function(t,e){const n=game.collision.Index.key(t);var r=this.map.get(n);r||(r=new Set,this.map.set(n,r)),r.add(e)},game.collision.Index.prototype.removeCell=function(t,e){const n=game.collision.Index.key(t),r=this.map.get(n);r&&r.delete(e)&&0==r.size&&this.map.delete(n)},game.collision.Index.prototype.queryCells=function(t){const e=new Set;return t.forEach(function(t){const n=this.queryCell(t);n&&n.forEach(e.add.bind(e))}.bind(this)),game.utility.collection.values(e)},game.collision.Index.prototype.addCells=function(t,e){t.forEach(function(t){this.addCell(t,e)}.bind(this))},game.collision.Index.prototype.removeCells=function(t,e){t.forEach(function(t){this.removeCell(t,e)}.bind(this))},game.collision.Index.prototype.addTriangle=function(t){this.addCells(this.triangleCells(t),t)},game.collision.Index.prototype.addTriangles=function(t){t.forEach(this.addTriangle.bind(this))},game.physics.Motion.fromData=function(t){return new game.physics.Motion(game.geometry.Vector.fromData(t[0]),game.geometry.Vector.fromData(t[1]))},game.physics.Motion.fromXyz=function(t){return new game.physics.Motion(game.geometry.Vector.fromXyz(t.position),game.geometry.Vector.fromXyz(t.velocity))},game.physics.Motion.prototype.add=function(t){return new game.physics.Motion(this.position.add(t.position),this.velocity.add(t.velocity))},game.physics.Motion.prototype.addPosition=function(t){return new game.physics.Motion(this.position.add(t),this.velocity)},game.physics.Motion.prototype.addVelocity=function(t){return new game.physics.Motion(this.position,this.velocity.add(t))},game.physics.Motion.prototype.integrate=function(t){return this.addPosition(this.velocity.multiply(t))},game.physics.Motion.prototype.data=function(){return[this.position.data(),this.velocity.data()]},game.physics.Ball.GRAVITY=196.2,game.physics.Ball.SPHERE=new game.collision.Sphere(new game.geometry.Vector(0,0,0),.5),game.physics.Ball.MAX_RESOLVE_ITERATIONS=5,game.physics.Ball.MAX_RESOLVE_TOLERANCE=.01,game.physics.Ball.MAX_STEP_PER_RADIUS=1/3,game.physics.Ball.RESTING_DISTANCE=.125,game.physics.Ball.RESTING_DISTANCE_SQR=Math.pow(game.physics.Ball.RESTING_DISTANCE,2),game.physics.Ball.RESTING_DELTA=.25,game.physics.Ball.HIT_MIN=5,game.physics.Ball.HIT_MAX=150,game.physics.Ball.HIT_EXP=1.5,game.physics.Ball.from=function(t,e,n){return game.physics.Ball.fromProperties(t,{radius:e,index:n,moved:!1,completed:!1})},game.physics.Ball.fromProperties=function(t,e){return new game.physics.Ball(t,{position:t.position,delta:game.physics.Ball.RESTING_DELTA},e)},game.physics.Ball.prototype.updateRestingDelta=function(t){return new game.physics.Ball(this.motion,{position:this.resting.position,delta:Math.max(this.resting.delta-t,0)},this.properties)},game.physics.Ball.prototype.resetResting=function(){return game.physics.Ball.fromProperties(this.motion,this.updateMoved(!0))},game.physics.Ball.prototype.escapedResting=function(){return this.motion.position.subtract(this.resting.position).sqrLength()>game.physics.Ball.RESTING_DISTANCE_SQR},game.physics.Ball.prototype.updateResting=function(t){return this.escapedResting()?this.resetResting():this.updateRestingDelta(t)},game.physics.Ball.prototype.isResting=function(){return 0==this.resting.delta},game.physics.Ball.prototype.withMotion=function(t){return new game.physics.Ball(t,this.resting,this.properties)},game.physics.Ball.prototype.addMotion=function(t){return this.withMotion(this.motion.add(t))},game.physics.Ball.prototype.addVelocity=function(t){return this.withMotion(this.motion.addVelocity(t))},game.physics.Ball.prototype.integrate=function(t){return this.isResting()?this:this.withMotion(this.motion.integrate(t))},game.physics.Ball.prototype.delta=function(){const t=this.properties.radius*game.physics.Ball.MAX_STEP_PER_RADIUS,e=this.motion.velocity.length();return t<e*game.timing.NORMAL_DELTA?t/e:game.timing.NORMAL_DELTA},game.physics.Ball.prototype.advance=function(t){const e=this.integrate(t).resolve();if(e&&e.motion.position.z>=-5)return e.applyGravity(t).updateResting(t)},game.physics.Ball.prototype.applyGravity=function(t){return this.isResting()?this:this.addVelocity(new game.geometry.Vector(0,0,-game.physics.Ball.GRAVITY*t))},game.physics.Ball.prototype.isHittable=function(){return this.isResting()&&!this.isCompleted()},game.physics.Ball.prototype.hit=function(t,e){return this.resetResting().addVelocity(new game.geometry.Vector(0,-game.utility.interpolate(game.physics.Ball.HIT_MIN,game.physics.Ball.HIT_MAX,Math.pow(e,game.physics.Ball.HIT_EXP)),0).transform(game.geometry.Matrix.rotationZ(t)))},game.physics.Ball.prototype.isResettable=function(){return this.properties.moved&&!this.isCompleted()},game.physics.Ball.prototype.resolve=function(){for(var t=this,e=0;e<game.physics.Ball.MAX_RESOLVE_ITERATIONS;e++){const e=t.resolveNearest();if(!e)return t;t=e}},game.physics.Ball.prototype.resolveNearest=function(){const t=this.properties.index.queryCells(this.properties.index.sphereCells(this.sphere())).map(function(t){const e={};return e.triangle=t,e.coordinates=t.project(this.motion.position),e.position=t.interpolatePosition(e.coordinates),e.vector=this.motion.position.subtract(e.position),e.length=e.vector.length(),e}.bind(this));if(t.length>0){const e=t.reduce((function(t,e){return t.length>e.length?e:t}));if(e.length+game.physics.Ball.MAX_RESOLVE_TOLERANCE<this.properties.radius)return e.triangle.interpolateHandler(e.coordinates).handle(new game.collision.Contact(this,e.position,e.vector,e.length))}},game.physics.Ball.prototype.updateMoved=function(t){return game.utility.mergeObjects([this.properties,{moved:t}])},game.physics.Ball.prototype.updateCompleted=function(t){return game.utility.mergeObjects([this.properties,{completed:t}])},game.physics.Ball.prototype.complete=function(){return new game.physics.Ball(this.motion,this.resting,this.updateCompleted(!0))},game.physics.Ball.prototype.isCompleted=function(){return this.properties.completed},game.physics.Ball.prototype.sphere=function(){return new game.collision.Sphere(this.motion.position,this.properties.radius)},game.physics.Ball.prototype.centerMatrix=function(){return game.geometry.Matrix.translation(this.motion.position)},game.physics.Ball.prototype.floorMatrix=function(){return game.geometry.Matrix.translation(this.motion.position.subtract(new game.geometry.Vector(0,0,this.properties.radius)))},game.physics.Ball.prototype.fromData=function(t){return new game.physics.Ball(game.physics.Motion.fromData(t[0]),{position:game.geometry.Vector.fromData(t[1]),delta:t[2]},game.utility.mergeObjects([this.properties,{moved:t[3],completed:t[4]}]))},game.physics.Ball.prototype.data=function(){return[this.motion.data(),this.resting.position.data(),this.resting.delta,this.properties.moved,this.properties.completed]},game.physics.Body.EMPTY=new game.physics.Body([],[]),game.physics.Body.fromModel=function(t,e){return new game.physics.Body(t,game.collision.Triangle.fromModel(t,e))},game.physics.Body.merge=function(t){return new game.physics.Body(game.utility.array.flatten(t.map((function(t){return t.model}))),game.utility.array.flatten(t.map((function(t){return t.collision}))))},game.physics.Body.prototype.flip=function(){return new game.physics.Body(game.model.Triangle.flip(this.model),this.collision)},game.physics.Body.prototype.transform=function(t){return new game.physics.Body(game.model.Triangle.transform(this.model,t),game.collision.Triangle.transform(this.collision,t))},game.physics.Course.prototype.renderer=function(t){const e=t.renderer(this.body.model);return function(t){e.render(t)}},game.physics.Material.MIN_VELOCITY=1,game.physics.Material.MIN_ANGLE=.05,game.physics.Material.from=function(t){return game.utility.assert(game.physics.Material.INSTANCES.hasOwnProperty(t),"Unknown material"),game.physics.Material.INSTANCES[t]},game.physics.Material.rebound=function(t,e,n){return new game.collision.handlers.Rebound(game.physics.Material.MIN_VELOCITY,game.physics.Material.MIN_ANGLE,t,e,n)},game.physics.Material.INSTANCES={GREEN:new game.physics.Material(game.physics.Material.rebound(.4,.001,.05),new game.model.Color(.4,.8,.2),!0),WALL:new game.physics.Material(game.physics.Material.rebound(.6,.001,.02),new game.model.Color(.8,.8,.8),!1),WOOD:new game.physics.Material(game.physics.Material.rebound(.5,.001,.04),new game.model.Color(.7,.5,0),!1),HOLE:new game.physics.Material(new game.collision.handlers.Collection([game.physics.Material.rebound(.2,.001,.2),game.collision.handlers.Static.BALL_COMPLETION]),new game.model.Color(0,0,.8),!1)},game.physics.Material.prototype.apply=function(t){return t.withColor(this.color).withChecker(this.checker)},game.physics.Generator.FACTORIES={BODY:{SUBSTITUTE:function(t){return t.BODY.substitute()},TRANSLATE:function(t){return t.BODY.translate()},ROTATE:{X:function(t){return t.BODY.rotate(game.geometry.Matrix.rotationX)},Y:function(t){return t.BODY.rotate(game.geometry.Matrix.rotationY)},Z:function(t){return t.BODY.rotate(game.geometry.Matrix.rotationZ)}},MERGE:function(t){return new game.physics.Generator(game.utility.json.isArray,(function(e){return game.physics.Body.merge(e.map((function(e){return t.BODY.generate(e)})))})).byKey("sources")},FLIP:function(t){return new game.physics.Generator(game.constraints.alwaysTrue,(function(e){return t.BODY.generate(e).flip()})).byKey("source")},TRIANGLE:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({positions:game.constraints.array.withLengthElements(game.constraints.object.isVector,3),material:game.constraints.string.isMaterial}),(function(t){const e=t.positions.map(game.geometry.Vector.fromXyz),n=game.physics.Material.from(t.material);return game.physics.Body.fromModel([new game.model.Triangle(new game.model.Vertex(e[0],null,n.color,n.checker),new game.model.Vertex(e[1],null,n.color,n.checker),new game.model.Vertex(e[2],null,n.color,n.checker)).normalize()],n.collision)}))},TRIANGLE_STRIP:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({positions:game.constraints.array.isArrayWith(game.constraints.array.allElements(game.constraints.object.isVector)),material:game.constraints.string.isMaterial}),(function(t){const e=t.positions.map(game.geometry.Vector.fromXyz),n=game.physics.Material.from(t.material);return game.physics.Body.fromModel(game.model.Triangle.strip1(e.map((function(t){return new game.model.Vertex(t,null,n.color,n.checker)}))).map((function(t){return t.normalize()})),n.collision)}))},PATH_STRIP:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({paths:game.constraints.array.isArrayWith(game.constraints.array.hasLength(2)),material:game.constraints.string.isMaterial}),(function(e){const n=game.physics.Material.from(e.material);return game.physics.Body.fromModel(n.apply(t.PATH.generate(e.paths[0])).strip(n.apply(t.PATH.generate(e.paths[1]))),n.collision)}))},PATH_SELF_FAN:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({path:game.constraints.alwaysTrue,material:game.constraints.string.isMaterial}),(function(e){const n=game.physics.Material.from(e.material);return game.physics.Body.fromModel(n.apply(t.PATH.generate(e.path)).selfFan(),n.collision)}))},PATH_POINT_FAN:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({path:game.constraints.alwaysTrue,point:game.constraints.object.isVector,material:game.constraints.string.isMaterial}),(function(e){const n=game.physics.Material.from(e.material);return game.physics.Body.fromModel(n.apply(t.PATH.generate(e.path)).fan(n.apply(new game.model.Vertex(game.geometry.Vector.fromXyz(e.point)))),n.collision)}))},PATH_RADIAL:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({paths:game.constraints.array.isArrayWith(game.constraints.array.hasLength(2)),material:game.constraints.string.isMaterial}),(function(e){const n=game.physics.Material.from(e.material);return game.physics.Body.fromModel(n.apply(t.PATH.generate(e.paths[0])).radial(n.apply(t.PATH.generate(e.paths[1]))).surface(),n.collision)}))}},PATH:{SUBSTITUTE:function(t){return t.PATH.substitute()},TRANSLATE:function(t){return t.PATH.translate()},SCALE:function(t){return t.PATH.scale()},ROTATE:{X:function(t){return t.PATH.rotate(game.geometry.Matrix.rotationX)},Y:function(t){return t.PATH.rotate(game.geometry.Matrix.rotationY)},Z:function(t){return t.PATH.rotate(game.geometry.Matrix.rotationZ)}},ARC:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({angle:game.constraints.number.isAngleDeg,radius:game.constraints.number.isNonNegativeFloat}),(function(t){return game.model.Path.arc(t.radius,game.utility.angle.degToRad(t.angle))}))},POLYNOMIAL:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({coefficients:game.constraints.array.isArrayWith(game.constraints.array.allElements(game.constraints.number.isFloat))}),(function(t){return game.model.Path.polynomial(t.coefficients)}))},SINUSOID:function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({amplitude:game.constraints.number.isFloat,frequency:game.constraints.number.isFloat,phase:game.constraints.number.isFloat}),(function(t){return game.model.Path.sinusoid(t.amplitude,t.frequency,t.phase)}))}}},game.physics.Generator.build=function(){return game.physics.Generator.course(game.physics.Generator.byFactories().BODY)},game.physics.Generator.byFactories=function(){const t={},e={};return Object.keys(game.physics.Generator.FACTORIES).forEach((function(n){t[n]=new Map,e[n]=game.physics.Generator.byName(t[n])})),Object.keys(game.physics.Generator.FACTORIES).forEach((function(n){game.physics.Generator.collect(t[n],e,game.physics.Generator.FACTORIES[n],[])})),e},game.physics.Generator.collect=function(t,e,n,r){"function"==typeof n?t.set(r.join("_"),n(e)):Object.keys(n).forEach((function(i){r.push(i),game.physics.Generator.collect(t,e,n[i],r),r.pop()}))},game.physics.Generator.course=function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({motion:game.constraints.object.isMotion,body:game.constraints.alwaysTrue}),(function(e){return new game.physics.Course(game.physics.Motion.fromXyz(e.motion),t.generate({name:"SUBSTITUTE",source:e.body,referable:courses,unreferred:!0,global:!0}))}))},game.physics.Generator.byName=function(t){return new game.physics.Generator(game.constraints.allMatch([game.constraints.object.withFields({name:game.utility.json.isString}),function(e){return t.has(e.name)}]),(function(e){const n=game.utility.mergeObjects([e]);return delete n.name,t.get(e.name).generate(n)}))},game.physics.Generator.prototype.generate=function(t){if(!this.constraint(t))throw new Error("Invalid data "+JSON.stringify(t));return this.handler(t)},game.physics.Generator.prototype.byKey=function(t){const e={};return e[t]=game.constraints.alwaysTrue,new game.physics.Generator(game.constraints.object.withFieldsExactly(e),function(e){return this.generate(e[t])}.bind(this))},game.physics.Generator.prototype.substitute=function(){const t=game.constraints.object.withFields({name:game.constraints.equals("SUBSTITUTE"),referable:game.constraints.alwaysTrue});return this.substituteLocalized((function(e,n){if(t(e)){const t=game.utility.mergeObjects([e]);return t.referable=n(t.referable),t}return n(e)}))},game.physics.Generator.prototype.substituteLocalized=function(t){function e(t){return t.join(".")}function n(t,e){return t+e}function r(t,e){return t*e}function i(t){return function(e){const n=t(e);return Number.isFinite(n)?n:e}}function a(t){return i((function(e){if(2==e.length&&game.utility.json.isNumber(e[1]))return t(e[1])}))}function o(t){return a((function(e){return game.utility.angle.radToDeg(t(e))}))}function s(t,e,n){return i((function(r){for(var i=n,a=1;a<r.length;a++){if(!game.utility.json.isNumber(r[a]))return r;i=(a<r.length-1?e:t)(i,r[a])}return i}))}const m={"#":function(t,n,r){for(var i=1;i<t.length;i++)if(game.utility.json.isString(t[i])&&game.utility.json.isObject(n)&&n.hasOwnProperty(t[i]))n=n[t[i]];else{if(!(game.constraints.number.isInteger(t[i])&&game.utility.json.isArray(n)&&t[i]>=0&&t[i]<n.length))return t;n=n[t[i]]}return r.add(e(t.slice(1))),n},"+":s(n,n,0),"-":s((function(t,e){return t-e}),n,0),"*":s(r,r,1),"/":s((function(t,e){return t/e}),r,1),SQR:a((function(t){return Math.pow(t,2)})),SQRT:a(Math.sqrt),ASIN:o(Math.asin),ACOS:o(Math.acos),ATAN:o(Math.atan)};return new game.physics.Generator(game.constraints.object.withFieldsOptional({source:game.constraints.alwaysTrue,referable:game.constraints.alwaysTrue,unreferred:[game.utility.json.isBoolean],global:[game.utility.json.isBoolean]}),function(n){const r=new Set,i=new Set;function a(e){return n.global?o(e):t(e,o)}function o(t){if(i.has(t))throw new Error("Circular reference detected on "+JSON.stringify(t));i.add(t);try{const e=function(t){if(game.utility.json.isObject(t)){const e={};return Object.keys(t).forEach((function(n){e[n]=a(t[n])})),e}return game.utility.json.isArray(t)?t.map(a):t}(t),i=function(t){return game.utility.json.isArray(t)&&t.length>0&&m.hasOwnProperty(t[0])?m[t[0]](t,n.referable,r):t}(e);return i!==e?a(i):i}finally{i.delete(t)}}const s=a(n.source);return n.unreferred||function t(n,i){const a=e(i);if(!r.has(a))if(game.utility.json.isObject(n))Object.keys(n).forEach((function(e){i.push(e),t(n[e],i),i.pop()}));else{if(!game.utility.json.isArray(n))throw new Error(a+" is unreferred");n.forEach((function(e,n){i.push(n),t(e,i),i.pop()}))}}(n.referable,[]),this.generate(s)}.bind(this))},game.physics.Generator.prototype.translate=function(){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,vector:game.constraints.object.isVector}),function(t){return this.generate(t.source).transform(game.geometry.Matrix.translation(game.geometry.Vector.fromXyz(t.vector)))}.bind(this))},game.physics.Generator.prototype.scale=function(){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,vector:game.constraints.object.isVector}),function(t){return this.generate(t.source).transform(game.geometry.Matrix.scaling(game.geometry.Vector.fromXyz(t.vector))).autoVertex()}.bind(this))},game.physics.Generator.prototype.rotate=function(t){return new game.physics.Generator(game.constraints.object.withFieldsExactly({source:game.constraints.alwaysTrue,angle:game.constraints.number.isAngleDeg}),function(e){return this.generate(e.source).transform(t(game.utility.angle.degToRad(e.angle)))}.bind(this))},game.constraints.number.isAngle=game.constraints.number.isFloatWith(game.constraints.number.inFloatRange(0,2*Math.PI)),game.constraints.number.isAngleDeg=game.constraints.number.isFloatWith(game.constraints.number.inRange(-360,360)),game.constraints.number.isNormal=game.constraints.number.isFloatWith(game.constraints.number.inFloatRange(0,1)),game.constraints.number.isNonNegative=game.constraints.number.isAtLeast(0),game.constraints.number.isNonNegativeInteger=game.constraints.number.isIntegerWith(game.constraints.number.isNonNegative),game.constraints.number.isNonNegativeFloat=game.constraints.number.isFloatWith(game.constraints.number.isNonNegative),game.constraints.number.isTimestamp=game.constraints.number.isNonNegativeInteger,game.constraints.number.isFrameIndex=game.constraints.number.isNonNegativeInteger,game.constraints.number.PLAYER_ID_MIN=Math.pow(10,game.constraints.number.PLAYER_ID_MIN_EXP),game.constraints.number.isPlayerId=game.constraints.number.isIntegerWith(game.constraints.number.isAtLeast(game.constraints.number.PLAYER_ID_MIN)),game.constraints.number.isPlayerRating=game.constraints.number.isInteger,game.constraints.string.isPlayerKey=game.constraints.string.with(game.constraints.string.PLAYER_KEY_LENGTH,game.constraints.string.PLAYER_KEY_LENGTH,game.constraints.string.PLAYER_KEY_CHARS),game.constraints.string.isPlayerName=game.constraints.string.with(1,game.constraints.string.PLAYER_NAME_MAX_LENGTH,game.constraints.string.PLAYER_NAME_CHARS),game.constraints.string.isSessionKey=game.constraints.string.with(game.constraints.string.SESSION_KEY_LENGTH,game.constraints.string.SESSION_KEY_LENGTH,game.constraints.string.SESSION_KEY_CHARS),game.constraints.string.isMaterial=game.constraints.containsKey(game.physics.Material.INSTANCES),game.constraints.array.isVector=game.constraints.array.withLengthElements(game.constraints.number.isFloat,3),game.constraints.array.isMotion=game.constraints.array.withElementsExactly([game.constraints.array.isVector,game.constraints.array.isVector]),game.constraints.array.isBall=game.constraints.array.withElementsExactly([game.constraints.array.isMotion,game.constraints.array.isVector,game.constraints.number.isNonNegativeFloat,game.utility.json.isBoolean,game.utility.json.isBoolean]),game.constraints.array.PLAYER_PUBLIC=[game.constraints.number.isPlayerId,game.constraints.string.isPlayerName,game.constraints.number.isPlayerRating],game.constraints.array.PLAYER_PRIVATE=game.constraints.array.PLAYER_PUBLIC.concat(game.constraints.number.isTimestamp,game.constraints.number.isTimestamp),game.constraints.array.isPlayerPublic=game.constraints.array.withElementsExactly(game.constraints.array.PLAYER_PUBLIC),game.constraints.array.isPlayerPrivate=game.constraints.array.withElementsExactly(game.constraints.array.PLAYER_PRIVATE),game.constraints.array.isPlayerStates=game.constraints.array.tableDistinctBy([game.constraints.array.isPlayerPublic,game.constraints.array.isBall,game.constraints.array.isBall,game.constraints.number.isNonNegativeInteger,game.constraints.number.isNonNegativeInteger,game.utility.json.isBoolean],(function(t){return t[0][0]})),game.constraints.array.isPlayerResults=game.constraints.array.tableDistinctBy([game.constraints.array.isPlayerPublic,game.constraints.number.isNonNegativeInteger,game.utility.json.isBoolean,game.constraints.number.isPlayerRating],(function(t){return t[0][0]})),game.constraints.array.FRAME=[game.constraints.number.isFrameIndex,game.constraints.number.isTimestamp,game.constraints.number.isNonNegativeFloat,game.constraints.number.isNonNegativeFloat,game.constraints.array.isPlayerStates],game.constraints.array.isFrame=game.constraints.array.withElementsExactly(game.constraints.array.FRAME),game.constraints.array.JOIN_FRAME=[game.constraints.number.isNonNegativeInteger,game.constraints.number.isTimestamp,game.constraints.array.isFrame],game.constraints.object.isVector=game.constraints.object.withFieldsExactly({x:game.constraints.number.isFloat,y:game.constraints.number.isFloat,z:game.constraints.number.isFloat}),game.constraints.object.isMotion=game.constraints.object.withFieldsExactly({position:game.constraints.object.isVector,velocity:game.constraints.object.isVector}),game.network.Procedure.PARAM_TREE={REGISTRATION:{REQUEST:[game.constraints.string.isPlayerName],RESPONSE:[game.constraints.number.isPlayerId,game.constraints.string.isPlayerKey,game.constraints.number.isTimestamp]},LOGIN:{REQUEST:[game.constraints.string.isPlayerKey],RESPONSE:{CONFIRM:{LOBBY:game.constraints.array.PLAYER_PRIVATE,GAME:[game.constraints.array.isPlayerPrivate,game.constraints.string.isSessionKey].concat(game.constraints.array.JOIN_FRAME)},MULTIPLE:[],UNKNOWN:[]}},LOBBY:{NAME:{CHANGE:{REQUEST:[game.constraints.string.isPlayerName],RESPONSE:[]}},CREATE:{REQUEST:[],RESPONSE:[game.constraints.string.isSessionKey]},JOIN:{REQUEST:[game.constraints.string.isSessionKey],RESPONSE:{CONFIRM:{SESSION:[game.constraints.array.tableDistinctBy(game.constraints.array.PLAYER_PUBLIC,(function(t){return t[0]}))],GAME:game.constraints.array.JOIN_FRAME},UNKNOWN:[]}}},SESSION:{ENTER:game.constraints.array.PLAYER_PUBLIC,LEAVE:{SELF:{REQUEST:[],RESPONSE:[]},OTHER:[game.constraints.number.isPlayerId]},START:{REQUEST:[],RESPONSE:[]}},GAME:{START:{REQUEST:[],RESPONSE:[game.constraints.number.isTimestamp]},ENTER:[game.constraints.number.isTimestamp,game.constraints.array.isPlayerPublic],LEAVE:{OTHER:[game.constraints.number.isTimestamp,game.constraints.number.isPlayerId]},RESET:{SELF:[game.constraints.number.isTimestamp],OTHER:[game.constraints.number.isTimestamp,game.constraints.number.isPlayerId]},FRAME:game.constraints.array.FRAME,HIT:{SELF:[game.constraints.number.isTimestamp,game.constraints.number.isAngle,game.constraints.number.isNormal],OTHER:[game.constraints.number.isTimestamp,game.constraints.number.isPlayerId,game.constraints.number.isAngle,game.constraints.number.isNormal]},END:[game.constraints.array.isPlayerResults]}},game.network.Procedure.mapTree=function(t,e,n){if(Array.isArray(t)){const r=new game.network.Procedure(n.join("_"),t);return e.push(r),r}const r={};return Object.keys(t).forEach((function(i){n.push(i),r[i]=game.network.Procedure.mapTree(t[i],e,n),n.pop()})),r},game.network.Procedure.LIST=[],game.network.Procedure.TREE=game.network.Procedure.mapTree(game.network.Procedure.PARAM_TREE,game.network.Procedure.LIST,[]),game.network.Procedure.map=function(t){return new Map(t.map((function(t){return[t.name,t]})))},game.network.Procedure.prototype.validate=function(t){return game.utility.assert(t.length==this.constraints.length,"Wrong number of parameters"),this.constraints.forEach((function(e,n){game.network.require(t[n],e,"Illegal value for parameter "+n)})),t},game.network.Procedure.prototype.bind=function(){return this.bindArray(Array.prototype.slice.call(arguments))},game.network.Procedure.prototype.bindArray=function(t){return new game.network.Call(this,t)},game.network.Call.METHOD_PREFIX="handle_",game.network.Call.prototype.json=function(){return{name:this.procedure.name,params:this.params}},game.network.Call.prototype.handle=function(t){const e=game.network.Call.METHOD_PREFIX+this.procedure.name;game.utility.assert(e in t,"No handler for procedure '"+this.procedure.name+"'"),t[e].apply(t,this.params)},game.network.Parser.prototype.buildConstraint=function(){return game.constraints.object.withFieldsExactly({name:game.constraints.contains(this.procedures),params:game.utility.json.isArray})},game.network.Parser.prototype.parse=function(t,e){const n=game.network.require(JSON.parse(t,e),this.constraint,"Invalid JSON for parsing");return this.procedures.get(n.name).bindArray(n.params)},game.network.Parser.prototype.unparse=function(t,e){return JSON.stringify(game.network.require(t.json(),this.constraint,"Invalid JSON for unparsing"),e)},game.network.Parser.INSTANCE=new game.network.Parser(game.network.Procedure.map(game.network.Procedure.LIST)),game.network.Player.AVERAGE_RATING=1e3,game.network.Player.COMPARATOR=game.utility.comparators.ordered([game.utility.comparators.mapped(game.utility.comparators.default,(function(t){return t.name})),game.utility.comparators.mapped(game.utility.comparators.default,(function(t){return t.id}))]),game.network.Player.fromDataPublic=function(t){return new game.network.Player(t[0],null,t[1],t[2],null)},game.network.Player.fromDataPrivate=function(t){return game.network.Player.fromDataPublic(t).withTimestamps({registration:t[3],login:t[4]})},game.network.Player.prototype.withKey=function(t){return new game.network.Player(this.id,t,this.name,this.rating,this.timestamps)},game.network.Player.prototype.withTimestamps=function(t){return new game.network.Player(this.id,this.key,this.name,this.rating,t)},game.network.Player.prototype.findResult=function(t){const e=t.filter(function(t){return t.player.id==this.id}.bind(this));return game.utility.assert(1==e.length,"Self expected exactly once"),e[0]},game.network.Player.prototype.dataPublic=function(){return[this.id,this.name,this.rating]},game.network.Player.prototype.dataPrivate=function(){return this.dataPublic().concat(this.timestamps.registration,this.timestamps.login)},game.network.PlayerState.MAX_STROKES=10,game.network.PlayerState.MAX_STROKES_PENALTY=1,game.network.PlayerState.MAX_STROKES_WITH_PENALTY=game.network.PlayerState.MAX_STROKES+game.network.PlayerState.MAX_STROKES_PENALTY,game.network.PlayerState.PLAYER_COMPARATOR=game.utility.comparators.mapped(game.network.Player.COMPARATOR,(function(t){return t.player})),game.network.PlayerState.sort=function(t){return game.utility.discriminate(t,(function(t){return t.strokes.total}),game.utility.comparators.default,game.network.PlayerState.PLAYER_COMPARATOR)},game.network.PlayerState.prototype.withPlayer=function(t){return new game.network.PlayerState(t,this.ball,this.strokes,this.left)},game.network.PlayerState.prototype.withBall=function(t){return new game.network.PlayerState(this.player,t,this.strokes,this.left)},game.network.PlayerState.prototype.withBallCurrent=function(t){return this.withBall({current:t,last:this.ball.last})},game.network.PlayerState.prototype.withBallBoth=function(t){return this.withBall({current:t,last:t})},game.network.PlayerState.prototype.withStrokes=function(t){return new game.network.PlayerState(this.player,this.ball,t,this.left)},game.network.PlayerState.prototype.withLeft=function(t){return new game.network.PlayerState(this.player,this.ball,this.strokes,t)},game.network.PlayerState.prototype.maxStrokes=function(){if(this.ball.current.isCompleted())return this;const t=game.network.PlayerState.MAX_STROKES_WITH_PENALTY-this.strokes.current;return this.withStrokes({total:this.strokes.total+t,current:this.strokes.current+t})},game.network.PlayerState.prototype.hasMaxStrokes=function(){return this.strokes.current>=game.network.PlayerState.MAX_STROKES},game.network.PlayerState.prototype.endedMaxStrokes=function(){return this.hasMaxStrokes()&&this.ball.current.isResting()},game.network.PlayerState.prototype.ended=function(){return this.ball.current.isCompleted()||this.endedMaxStrokes()},game.network.PlayerState.prototype.advance=function(t){const e=this.ball.current.advance(t);return e?e.isResting()?this.withBallBoth(e):this.withBallCurrent(e):this.withBallCurrent(this.ball.last)},game.network.PlayerState.prototype.isHittable=function(){return this.ball.current.isHittable()&&!this.hasMaxStrokes()},game.network.PlayerState.prototype.hit=function(t,e){return this.isHittable()?new game.network.PlayerState(this.player,{current:this.ball.current.hit(t,e),last:this.ball.last},{total:this.strokes.total+1,current:this.strokes.current+1},this.left):this},game.network.PlayerState.prototype.isResettable=function(){return this.ball.current.isResettable()&&!this.hasMaxStrokes()},game.network.PlayerState.prototype.reset=function(t){return this.isResettable()?this.withBallBoth(t):this},game.network.PlayerState.prototype.toResult=function(){return new game.network.PlayerResult(this.player,this.strokes.total,this.left,this.player.rating)},game.network.PlayerState.prototype.fromData=function(t){return new game.network.PlayerState(game.network.Player.fromDataPublic(t[0]),{current:this.ball.current.fromData(t[1]),last:this.ball.last.fromData(t[2])},{total:t[3],current:t[4]},t[5])},game.network.PlayerState.prototype.data=function(){return[this.player.dataPublic(),this.ball.current.data(),this.ball.last.data(),this.strokes.total,this.strokes.current,this.left]},game.network.PlayerResult.PLAYER_COMPARATOR=game.utility.comparators.mapped(game.network.Player.COMPARATOR,(function(t){return t.player})),game.network.PlayerResult.sort=function(t){return game.utility.discriminate(t,(function(t){return t.strokes}),game.utility.comparators.default,game.network.PlayerResult.PLAYER_COMPARATOR)},game.network.PlayerResult.initial=function(t,e){return new game.network.PlayerResult(t,e*game.network.PlayerState.MAX_STROKES_WITH_PENALTY,!1,t.rating)},game.network.PlayerResult.fromData=function(t){return new game.network.PlayerResult(game.network.Player.fromDataPublic(t[0]),t[1],t[2],t[3])},game.network.PlayerResult.prototype.ratingAdjustment=function(){return this.player.rating-this.rating},game.network.PlayerResult.prototype.toStateBoth=function(t){return this.toState({current:t,last:t})},game.network.PlayerResult.prototype.toState=function(t){return new game.network.PlayerState(this.player,t,{total:this.strokes,current:0},this.left)},game.network.PlayerResult.prototype.data=function(){return[this.player.dataPublic(),this.strokes,this.left,this.rating]},game.network.Frame.from=function(t,e,n,r,i){return new game.network.Frame(t,e,n,r,i.map((function(t){return game.state.drivers.Player.map((function(e){return e.fromData(t)}))})))},game.network.Frame.fromData=function(t){return game.network.Frame.from(t[0],t[1],t[2],t[3],t[4])},game.network.Frame.prototype.mapActions=function(t){return new game.network.Frame(this.index,this.timestamp,this.totalTime,this.endTime,this.playerActions.map(t))},game.timing.PLAYABLE_END=game.timing.GAME_START_DURATION+game.timing.PLAYABLE_DURATION,game.state.drivers.Player.map=function(t){return function(e){return new game.state.drivers.Player(t(e.state))}},game.state.drivers.Player.prototype.delta=function(){return this.state.ball.current.delta()},game.state.drivers.Player.prototype.drive=function(t){return new game.state.drivers.Player(this.state.advance(t))},game.state.drivers.Player.prototype.geometry=function(){return this.state.ball.current.centerMatrix()},game.state.drivers.Camera.map=function(t,e){return function(n){return new game.state.drivers.Camera(t(n.driver),e(n.camera),n.position)}},game.state.drivers.Camera.prototype.delta=function(){return this.driver.delta()},game.state.drivers.Camera.prototype.drive=function(t){const e=this.driver.drive(t),n=this.position(e);return new game.state.drivers.Camera(e,n?this.camera.follow(n,t):this.camera,this.position)},game.state.drivers.Camera.prototype.renderer=function(){return this.driver.renderer().dot(this.camera.matrix())},game.state.drivers.Actioning.map=function(t){return function(e){return new game.state.drivers.Actioning(t(e.driver),e.action)}},game.state.drivers.Actioning.prototype.delta=function(){return this.driver.delta()},game.state.drivers.Actioning.prototype.drive=function(t){return new game.state.drivers.Actioning(this.driver.drive(t),this.action)},game.state.drivers.Actioning.prototype.renderer=function(){return this.driver.renderer()},game.state.drivers.RendererWrapper.map=function(t){return function(e){return new game.state.drivers.RendererWrapper(t(e.driver),e.fRenderer)}},game.state.drivers.RendererWrapper.prototype.delta=function(){return this.driver.delta()},game.state.drivers.RendererWrapper.prototype.drive=function(t){return new game.state.drivers.RendererWrapper(this.driver.drive(t),this.fRenderer)},game.state.drivers.RendererWrapper.prototype.renderer=function(){return new game.state.renderers.Wrapper(this.driver.geometry(),this.fRenderer)},game.state.drivers.RendererOverride.map=function(t){return function(e){return new game.state.drivers.RendererOverride(t(e.driver),e.fRenderer)}},game.state.drivers.RendererOverride.empty=function(t){return new game.state.drivers.RendererOverride(t,game.utility.constant(game.state.renderers.Wrapper.EMPTY))},game.state.drivers.RendererOverride.discrete=function(t,e){return new game.state.drivers.RendererOverride(t,(function(t){return new game.state.renderers.Multi(new Map([["driver",t.renderer()],["discrete",new game.state.renderers.Discrete(e.bind(null,t))]]))}))},game.state.drivers.RendererOverride.prototype.delta=function(){return this.driver.delta()},game.state.drivers.RendererOverride.prototype.drive=function(t){return new game.state.drivers.RendererOverride(this.driver.drive(t),this.fRenderer)},game.state.drivers.RendererOverride.prototype.renderer=function(){return this.dRenderer},game.state.drivers.Timer.action=function(t){return game.state.actions.ifExisting((function(){return new game.state.drivers.Timer(t)}),game.state.actions.illegal)},game.state.drivers.Timer.prototype.delta=function(){return game.timing.NORMAL_DELTA},game.state.drivers.Timer.prototype.drive=function(t){return new game.state.drivers.Timer(this.time+t)},game.state.drivers.Timer.prototype.renderer=function(){return game.state.renderers.Wrapper.EMPTY},game.state.drivers.Conditional.mapUnconditional=function(t){return function(e){return new game.state.drivers.Conditional(t(e.unconditionalDriver),e.conditionalDriver,e.condition)}},game.state.drivers.Conditional.mapConditional=function(t){return function(e){return new game.state.drivers.Conditional(e.unconditionalDriver,t(e.conditionalDriver),e.condition)}},game.state.drivers.Conditional.mapBoth=function(t,e){return function(n){return new game.state.drivers.Conditional(t(n.unconditionalDriver),e(n.conditionalDriver),n.condition)}},game.state.drivers.Conditional.ifSatisfied=function(t){return game.state.actions.conditional(t,(function(t){return game.utility.assert(game.utility.json.isBoolean(t.satisfied),"Flag not valid"),t.satisfied}))},game.state.drivers.Conditional.prototype.delta=function(){return Math.min(this.unconditionalDriver.delta(),this.conditionalDriver.delta())},game.state.drivers.Conditional.prototype.drive=function(t){return new game.state.drivers.Conditional(this.unconditionalDriver.drive(t),this.satisfied?this.conditionalDriver.drive(t):this.conditionalDriver,this.condition)},game.state.drivers.Conditional.prototype.renderer=function(){return new game.state.renderers.Multi(new Map([["unconditional",this.unconditionalDriver.renderer()],["conditional",this.conditionalDriver.renderer()]]))},game.state.drivers.Multi.OTHERS={KEEP:function(t){return t},DISCARD:function(t){return[t[0],null]},ASSERT_NONE:function(t){throw new Error("No other entry allowed")}},game.state.drivers.Multi.ORDERED={OTHERS_FIRST:function(t,e){return!1},ASCENDING:function(t,e){return t<e}},game.state.drivers.Multi.map=function(t,e,n){return function(r){const i=new Map,a=game.utility.collection.map.entries(t),o=game.utility.collection.map.entries(r.drivers);for(var s=0,m=0;s<a.length||m<o.length;){var c;s<a.length&&m<o.length&&a[s][0]===o[m][0]?(c=[a[s][0],a[s][1](o[m][1])],s++,m++):m==o.length||t.has(o[m][0])||s<a.length&&n(a[s][0],o[m][0])?(game.utility.assert(!r.drivers.has(a[s][0]),"Keys out of order"),c=[a[s][0],a[s][1]()],s++):(c=e(o[m]),m++),c[1]&&i.set(c[0],c[1])}return new game.state.drivers.Multi(i)}},game.state.drivers.Multi.prototype.delta=function(){return game.utility.collection.values(this.drivers).map((function(t){return t.delta()})).reduce((function(t,e){return Math.min(t,e)}),game.timing.NORMAL_DELTA)},game.state.drivers.Multi.prototype.drive=function(t){return new game.state.drivers.Multi(new Map(game.utility.collection.map.entries(this.drivers).map((function(e){return[e[0],e[1].drive(t)]}))))},game.state.drivers.Multi.prototype.renderer=function(){return new game.state.renderers.Multi(new Map(game.utility.collection.map.entries(this.drivers).map((function(t){return[t[0],t[1].renderer()]}))))},game.state.renderers.Wrapper.EMPTY=new game.state.renderers.Wrapper(game.geometry.void,(function(){})),game.state.renderers.Wrapper.prototype.dot=function(t){return new game.state.renderers.Wrapper(this.geometry.dot(t),this.fRenderer)},game.state.renderers.Wrapper.prototype.interpolate=function(t,e){return new game.state.renderers.Wrapper(this.geometry.interpolate(t.geometry,e),this.fRenderer)},game.state.renderers.Wrapper.prototype.render=function(){this.fRenderer(this.geometry)},game.state.renderers.Discrete.prototype.dot=function(t){return this},game.state.renderers.Discrete.prototype.interpolate=function(t,e){return t},game.state.renderers.Discrete.prototype.render=function(){this.fRenderer()},game.state.renderers.Multi.prototype.dot=function(t){return new game.state.renderers.Multi(new Map(game.utility.collection.map.entries(this.renderers).map((function(e){return[e[0],e[1].dot(t)]}))))},game.state.renderers.Multi.prototype.interpolate=function(t,e){return new game.state.renderers.Multi(new Map(game.utility.collection.map.entries(t.renderers).map(function(t){return[t[0],this.renderers.has(t[0])?this.renderers.get(t[0]).interpolate(t[1],e):t[1]]}.bind(this))))},game.state.renderers.Multi.prototype.render=function(){this.renderers.forEach((function(t){t.render()}))},game.state.updaters.TimeEvent.prototype.pruner=function(){return this.prune.bind(this)},game.state.updaters.TimeEvent.prototype.applier=function(){return this.apply.bind(this)},game.state.updaters.TimeEvent.prototype.prune=function(t){if(this.events.splice(0,this.find(t[0].timestamp)),null!=this.lastInsert){const e=game.state.Frame.findByTimestamp(t,this.lastInsert);t.splice(Math.max(e,1)),this.lastInsert=null}},game.state.updaters.TimeEvent.prototype.apply=function(t){const e=game.utility.array.last(t),n=game.utility.array.lastN(t,2);game.utility.array.assignLast(t,e.apply(game.state.actions.merge(this.events.slice(this.find(n.timestamp),this.find(e.timestamp)).map((function(t){return t.action})))))},game.state.updaters.TimeEvent.prototype.find=function(t){return game.utility.array.binarySearch(this.events,(function(e){return e.timestamp<t}))},game.state.updaters.TimeEvent.prototype.insert=function(t){this.events.splice(this.find(t.timestamp+1),0,t),(null==this.lastInsert||t.timestamp<this.lastInsert)&&(this.lastInsert=t.timestamp)},game.state.updaters.TimeEvent.prototype.driveLast=function(t){this.events.length&&t.drive(game.utility.array.last(this.events).timestamp)},game.state.updaters.IndexEvent.prototype.pruner=function(){return this.pruner.bind(this)},game.state.updaters.IndexEvent.prototype.applier=function(){return this.apply.bind(this)},game.state.updaters.IndexEvent.prototype.prune=function(t){if(this.events.splice(0,this.find(t[0].index)),null!=this.lastInsert){const e=game.state.Frame.findByIndex(t,this.lastInsert);game.utility.assert(e>0,"Index event occurred before first frame"),t.splice(e),this.lastInsert=null}},game.state.updaters.IndexEvent.prototype.apply=function(t){for(var e=game.utility.array.last(t),n=this.find(e.index);n<this.events.length&&this.events[n].index==e.index;)e=e.apply(this.events[n].action),n++;game.utility.array.assignLast(t,e)},game.state.updaters.IndexEvent.prototype.find=function(t){return game.utility.array.binarySearch(this.events,(function(e){return e.index<t}))},game.state.updaters.IndexEvent.prototype.insert=function(t){this.events.splice(this.find(t.index+1),0,t),(null==!this.lastInsert||t.index<this.lastInsert)&&(this.lastInsert=t.index)},game.state.updaters.TimeSync.prototype.pruner=function(){return this.prune.bind(this)},game.state.updaters.TimeSync.prototype.applier=function(){return this.apply.bind(this)},game.state.updaters.TimeSync.prototype.prune=function(t){if(this.syncs.splice(0,this.find(t[0].index)),this.lastInsert){var e=game.state.Frame.findByIndex(t,this.lastInsert.index);for(game.utility.assert(e>0,"Time sync occurred before first frame");e>0&&this.lastInsert.affectsFrame(t[e-1]);)e--;t.splice(e),this.lastInsert=null}},game.state.updaters.TimeSync.prototype.apply=function(t){const e=game.utility.array.last(t),n=this.find(e.index);n<this.syncs.length&&(game.utility.array.assignLast(t,this.syncs[n].apply(e)),game.utility.assert(1==t.length||game.utility.array.lastN(t,2).isConsecutive(game.utility.array.last(t)),"Only the last frame may be affected"))},game.state.updaters.TimeSync.prototype.find=function(t){return game.utility.array.binarySearch(this.syncs,(function(e){return e.index<t}))},game.state.updaters.TimeSync.prototype.insert=function(t){const e=this.find(t.index);game.utility.assert(e==this.syncs.length||this.syncs[e].index!=t.index,"Sync for index already exists"),game.utility.assert(0==e||!t.affectsOther(this.syncs[e-1]),"Sync timestamp affects previous one"),game.utility.assert(e==this.syncs.length||!this.syncs[e].affectsOther(t),"Next sync timestamp affects new one"),this.syncs.splice(e,0,t),(!this.lastInsert||t.index<this.lastInsert.index)&&(this.lastInsert=t)},game.state.updaters.indexPruner.reference=function(t){return function(e){return t.index}},game.state.updaters.timestampPruner.delta=function(t){return function(e){return game.utility.array.last(e).timestamp-t}},game.state.TimeSync.prototype.maxTimestamp=function(t){return game.utility.assert(this.index>=t,"Cannot compute for greater index"),this.timestamp-(this.index-t)*game.timing.TICKS_PER_GAP},game.state.TimeSync.prototype.affectsOther=function(t){return t.timestamp>this.maxTimestamp(t.index)},game.state.TimeSync.prototype.affectsFrame=function(t){return t.timestamp>this.maxTimestamp(t.index)},game.state.TimeSync.prototype.apply=function(t){return new game.state.Frame(t.index,this.index==t.index?this.timestamp:Math.min(t.timestamp,this.maxTimestamp(t.index)),t.driver)},game.state.Frame.zero=function(t){return new game.state.Frame(0,0,t)},game.state.Frame.findByIndex=function(t,e){return game.utility.array.binarySearch(t,(function(t){return t.index<e}))},game.state.Frame.findByTimestamp=function(t,e){return game.utility.array.binarySearch(t,(function(t){return t.timestamp<e}))},game.state.Frame.pruneIndex=function(t,e,n,r){e>t[0].index&&t.splice(0,Math.min(game.state.Frame.findByIndex(t,e)-n,t.length-r))},game.state.Frame.pruneTimestamp=function(t,e,n,r){e>t[0].timestamp&&t.splice(0,Math.min(game.state.Frame.findByTimestamp(t,e)-n,t.length-r))},game.state.Frame.prototype.isConsecutive=function(t){return this.index+1==t.index&&this.timestamp+game.timing.TICKS_PER_GAP<=t.timestamp},game.state.Frame.prototype.renderer=function(){return this.driver.renderer()},game.state.Frame.prototype.render=function(){this.renderer().render()},game.state.Frame.prototype.interpolateRenderer=function(t,e){return game.utility.assert(this.isConsecutive(t),"Frames not consecutive"),e==this.timestamp?this.renderer():e==t.timestamp?t.renderer():this.renderer().interpolate(t.renderer(),(e-this.timestamp)/(t.timestamp-this.timestamp))},game.state.Frame.prototype.drive=function(){const t=game.timing.sToTicksGap(this.driver.delta());return new game.state.Frame(this.index+1,this.timestamp+t,this.driver.drive(game.timing.ticksToS(t)))},game.state.Frame.prototype.apply=function(t){return new game.state.Frame(this.index,this.timestamp,t(this.driver))},game.state.Frame.prototype.rendererOverride=function(t){return new game.state.Frame(this.index,this.timestamp,new game.state.drivers.RendererOverride(this.driver,t))},game.state.Trace.prototype.minTimestamp=function(){return this.frames[0].timestamp+1},game.state.Trace.prototype.maxTimestamp=function(){return this.lastFrame().timestamp+1},game.state.Trace.prototype.timeEventAfter=function(t){return new game.state.TimeEvent(this.maxTimestamp(),t)},game.state.Trace.prototype.timeEventClamped=function(t,e,n){return new game.state.TimeEvent(game.utility.clamp(e,this.minTimestamp(),this.maxTimestamp()+t),n)},game.state.Trace.prototype.lastFrame=function(){return game.utility.array.last(this.frames)},game.state.Trace.prototype.findByTimestamp=function(t){return game.state.Frame.findByTimestamp(this.frames,t)},game.state.Trace.prototype.drive=function(t){for(;this.lastFrame().timestamp<t;)this.updater(this.frames)},game.state.Trace.prototype.renderer=function(t){const e=this.findByTimestamp(t);return 0==e?this.frames[e]:e==this.frames.length?this.frames[e-1]:this.frames[e-1].interpolateRenderer(this.frames[e],t)},game.state.Trace.prototype.render=function(t){this.renderer(t).render()},"undefined"!=typeof exports&&(module.exports=game);